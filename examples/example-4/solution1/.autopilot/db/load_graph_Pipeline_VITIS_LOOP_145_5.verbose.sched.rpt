

================================================================
== Vitis HLS Report for 'load_graph_Pipeline_VITIS_LOOP_145_5'
================================================================
* Date:           Fri May  3 00:16:03 2024

* Version:        2021.1.1 (Build 3286242 on Wed Jul 28 13:09:46 MDT 2021)
* Project:        example-4
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.33 ns|  2.288 ns|     0.90 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       23|       23|  76.659 ns|  76.659 ns|   23|   23|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_145_5  |       21|       21|         4|          1|          1|    19|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.26>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 7 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 8 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 9 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 10 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_359 = alloca i32 1"   --->   Operation 11 'alloca' 'empty_359' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_360 = alloca i32 1"   --->   Operation 12 'alloca' 'empty_360' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_361 = alloca i32 1"   --->   Operation 13 'alloca' 'empty_361' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_3 = alloca i32 1"   --->   Operation 14 'alloca' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%pe_num_of_nodes = alloca i32 1"   --->   Operation 15 'alloca' 'pe_num_of_nodes' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_1 = alloca i32 1"   --->   Operation 16 'alloca' 'pe_num_of_nodes_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_2 = alloca i32 1"   --->   Operation 17 'alloca' 'pe_num_of_nodes_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_3 = alloca i32 1"   --->   Operation 18 'alloca' 'pe_num_of_nodes_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i128 %full_pe_degree_tables"   --->   Operation 19 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%num_of_nodes_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %num_of_nodes"   --->   Operation 20 'read' 'num_of_nodes_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %pe_num_of_nodes_3"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 22 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %pe_num_of_nodes_2"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 23 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %pe_num_of_nodes_1"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 24 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %pe_num_of_nodes"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 25 [1/1] (0.38ns)   --->   "%store_ln0 = store i31 0, i31 %i_3"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 26 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %empty_361"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 27 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %empty_360"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 28 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %empty_359"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 29 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %empty"   --->   Operation 29 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 30 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %acc"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 31 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %reuse_reg"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 32 [1/1] (0.38ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph55"   --->   Operation 33 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%i = load i31 %i_3" [example-4/src/load_inputs.cc:168]   --->   Operation 34 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.84ns)   --->   "%icmp_ln145 = icmp_eq  i31 %i, i31 %num_of_nodes_read" [example-4/src/load_inputs.cc:145]   --->   Operation 35 'icmp' 'icmp_ln145' <Predicate = true> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.87ns)   --->   "%add_ln145 = add i31 %i, i31 1" [example-4/src/load_inputs.cc:145]   --->   Operation 36 'add' 'add_ln145' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln145 = br i1 %icmp_ln145, void %.split6, void %mergeST98.loopexit.exitStub" [example-4/src/load_inputs.cc:145]   --->   Operation 37 'br' 'br_ln145' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%i_3_cast104 = zext i31 %i" [example-4/src/load_inputs.cc:168]   --->   Operation 38 'zext' 'i_3_cast104' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%degree_table_1_addr = getelementptr i32 %degree_table_1, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:148]   --->   Operation 39 'getelementptr' 'degree_table_1_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_1 : Operation 40 [2/2] (1.19ns)   --->   "%degree = load i9 %degree_table_1_addr" [example-4/src/load_inputs.cc:148]   --->   Operation 40 'load' 'degree' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%full_pe_degree_tables_addr = getelementptr i128 %full_pe_degree_tables, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:156]   --->   Operation 41 'getelementptr' 'full_pe_degree_tables_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (1.20ns)   --->   "%full_pe_degree_tables_load = load i9 %full_pe_degree_tables_addr" [example-4/src/load_inputs.cc:156]   --->   Operation 42 'load' 'full_pe_degree_tables_load' <Predicate = (!icmp_ln145)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 500> <RAM>
ST_1 : Operation 43 [1/1] (0.38ns)   --->   "%store_ln145 = store i31 %add_ln145, i31 %i_3" [example-4/src/load_inputs.cc:145]   --->   Operation 43 'store' 'store_ln145' <Predicate = (!icmp_ln145)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 2.05>
ST_2 : Operation 44 [1/2] (1.19ns)   --->   "%degree = load i9 %degree_table_1_addr" [example-4/src/load_inputs.cc:148]   --->   Operation 44 'load' 'degree' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_2 : Operation 45 [1/2] (1.20ns)   --->   "%full_pe_degree_tables_load = load i9 %full_pe_degree_tables_addr" [example-4/src/load_inputs.cc:156]   --->   Operation 45 'load' 'full_pe_degree_tables_load' <Predicate = (!icmp_ln145)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 500> <RAM>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%degree_j = trunc i128 %full_pe_degree_tables_load" [example-4/src/load_inputs.cc:156]   --->   Operation 46 'trunc' 'degree_j' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.85ns)   --->   "%icmp_ln160 = icmp_sgt  i32 %degree_j, i32 0" [example-4/src/load_inputs.cc:160]   --->   Operation 47 'icmp' 'icmp_ln160' <Predicate = (!icmp_ln145)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.38ns)   --->   "%br_ln166 = br void %.split6._crit_edge" [example-4/src/load_inputs.cc:166]   --->   Operation 48 'br' 'br_ln166' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.38>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%degree_j_1 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %full_pe_degree_tables_load, i32 32, i32 63" [example-4/src/load_inputs.cc:156]   --->   Operation 49 'partselect' 'degree_j_1' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%degree_j_2 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %full_pe_degree_tables_load, i32 64, i32 95" [example-4/src/load_inputs.cc:156]   --->   Operation 50 'partselect' 'degree_j_2' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%degree_j_3 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %full_pe_degree_tables_load, i32 96, i32 127" [example-4/src/load_inputs.cc:156]   --->   Operation 51 'partselect' 'degree_j_3' <Predicate = (!icmp_ln145)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.05>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%i_3_cast = zext i31 %i" [example-4/src/load_inputs.cc:168]   --->   Operation 52 'zext' 'i_3_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 53 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%acc_load = load i32 %acc" [example-4/src/load_inputs.cc:150]   --->   Operation 54 'load' 'acc_load' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%p_load13 = load i32 %empty" [example-4/src/load_inputs.cc:158]   --->   Operation 55 'load' 'p_load13' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%speclooptripcount_ln137 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 19, i64 19, i64 19" [example-4/src/load_inputs.cc:137]   --->   Operation 56 'speclooptripcount' 'speclooptripcount_ln137' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%specloopname_ln137 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [example-4/src/load_inputs.cc:137]   --->   Operation 57 'specloopname' 'specloopname_ln137' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%neighbor_table_offsets_addr = getelementptr i32 %neighbor_table_offsets, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:149]   --->   Operation 58 'getelementptr' 'neighbor_table_offsets_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.19ns)   --->   "%store_ln149 = store i32 %acc_load, i9 %neighbor_table_offsets_addr" [example-4/src/load_inputs.cc:149]   --->   Operation 59 'store' 'store_ln149' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_3 : Operation 60 [1/1] (0.88ns)   --->   "%acc_1 = add i32 %degree, i32 %acc_load" [example-4/src/load_inputs.cc:150]   --->   Operation 60 'add' 'acc_1' <Predicate = (!icmp_ln145)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%neighbor_tables_offsets_0_addr = getelementptr i32 %neighbor_tables_offsets_0, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:157]   --->   Operation 61 'getelementptr' 'neighbor_tables_offsets_0_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (1.19ns)   --->   "%store_ln157 = store i32 %p_load13, i9 %neighbor_tables_offsets_0_addr" [example-4/src/load_inputs.cc:157]   --->   Operation 62 'store' 'store_ln157' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_3 : Operation 63 [1/1] (0.88ns)   --->   "%add_ln158 = add i32 %degree_j, i32 %p_load13" [example-4/src/load_inputs.cc:158]   --->   Operation 63 'add' 'add_ln158' <Predicate = (!icmp_ln145)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.38ns)   --->   "%br_ln160 = br i1 %icmp_ln160, void %.split6._crit_edge, void" [example-4/src/load_inputs.cc:160]   --->   Operation 64 'br' 'br_ln160' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_load = load i32 %pe_num_of_nodes" [example-4/src/load_inputs.cc:164]   --->   Operation 65 'load' 'pe_num_of_nodes_load' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln163 = zext i32 %pe_num_of_nodes_load" [example-4/src/load_inputs.cc:163]   --->   Operation 66 'zext' 'zext_ln163' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%degree_tables_1_0_addr = getelementptr i64 %degree_tables_1_0, i64 0, i64 %zext_ln163" [example-4/src/load_inputs.cc:163]   --->   Operation 67 'getelementptr' 'degree_tables_1_0_addr' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %degree_j, i32 %i_3_cast" [example-4/src/load_inputs.cc:163]   --->   Operation 68 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.20ns)   --->   "%store_ln163 = store i64 %tmp_s, i9 %degree_tables_1_0_addr" [example-4/src/load_inputs.cc:163]   --->   Operation 69 'store' 'store_ln163' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 500> <RAM>
ST_3 : Operation 70 [1/1] (0.88ns)   --->   "%num_of_nodes_per_pe = add i32 %pe_num_of_nodes_load, i32 1" [example-4/src/load_inputs.cc:164]   --->   Operation 70 'add' 'num_of_nodes_per_pe' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.38ns)   --->   "%store_ln166 = store i32 %num_of_nodes_per_pe, i32 %pe_num_of_nodes" [example-4/src/load_inputs.cc:166]   --->   Operation 71 'store' 'store_ln166' <Predicate = (!icmp_ln145 & icmp_ln160)> <Delay = 0.38>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%node_pes_V_8 = phi i1 1, void, i1 0, void %.split6"   --->   Operation 72 'phi' 'node_pes_V_8' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%p_load11 = load i32 %empty_359" [example-4/src/load_inputs.cc:158]   --->   Operation 73 'load' 'p_load11' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln137 = zext i1 %node_pes_V_8" [example-4/src/load_inputs.cc:137]   --->   Operation 74 'zext' 'zext_ln137' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%neighbor_tables_offsets_1_addr = getelementptr i32 %neighbor_tables_offsets_1, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:157]   --->   Operation 75 'getelementptr' 'neighbor_tables_offsets_1_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (1.19ns)   --->   "%store_ln157 = store i32 %p_load11, i9 %neighbor_tables_offsets_1_addr" [example-4/src/load_inputs.cc:157]   --->   Operation 76 'store' 'store_ln157' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_3 : Operation 77 [1/1] (0.88ns)   --->   "%add_ln158_1 = add i32 %degree_j_1, i32 %p_load11" [example-4/src/load_inputs.cc:158]   --->   Operation 77 'add' 'add_ln158_1' <Predicate = (!icmp_ln145)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.85ns)   --->   "%icmp_ln160_1 = icmp_sgt  i32 %degree_j_1, i32 0" [example-4/src/load_inputs.cc:160]   --->   Operation 78 'icmp' 'icmp_ln160_1' <Predicate = (!icmp_ln145)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.38ns)   --->   "%br_ln160 = br i1 %icmp_ln160_1, void %._crit_edge, void" [example-4/src/load_inputs.cc:160]   --->   Operation 79 'br' 'br_ln160' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_1_load = load i32 %pe_num_of_nodes_1" [example-4/src/load_inputs.cc:164]   --->   Operation 80 'load' 'pe_num_of_nodes_1_load' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln163_1 = zext i32 %pe_num_of_nodes_1_load" [example-4/src/load_inputs.cc:163]   --->   Operation 81 'zext' 'zext_ln163_1' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%degree_tables_1_1_addr = getelementptr i64 %degree_tables_1_1, i64 0, i64 %zext_ln163_1" [example-4/src/load_inputs.cc:163]   --->   Operation 82 'getelementptr' 'degree_tables_1_1_addr' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_15 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %degree_j_1, i32 %i_3_cast" [example-4/src/load_inputs.cc:163]   --->   Operation 83 'bitconcatenate' 'tmp_15' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (1.20ns)   --->   "%store_ln163 = store i64 %tmp_15, i9 %degree_tables_1_1_addr" [example-4/src/load_inputs.cc:163]   --->   Operation 84 'store' 'store_ln163' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 500> <RAM>
ST_3 : Operation 85 [1/1] (0.88ns)   --->   "%num_of_nodes_per_pe_1 = add i32 %pe_num_of_nodes_1_load, i32 1" [example-4/src/load_inputs.cc:164]   --->   Operation 85 'add' 'num_of_nodes_per_pe_1' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%p_Result_s = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 1, i1 %node_pes_V_8"   --->   Operation 86 'bitconcatenate' 'p_Result_s' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.38ns)   --->   "%store_ln166 = store i32 %num_of_nodes_per_pe_1, i32 %pe_num_of_nodes_1" [example-4/src/load_inputs.cc:166]   --->   Operation 87 'store' 'store_ln166' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.38>
ST_3 : Operation 88 [1/1] (0.38ns)   --->   "%br_ln166 = br void %._crit_edge" [example-4/src/load_inputs.cc:166]   --->   Operation 88 'br' 'br_ln166' <Predicate = (!icmp_ln145 & icmp_ln160_1)> <Delay = 0.38>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%node_pes_V_7 = phi i2 %p_Result_s, void, i2 %zext_ln137, void %.split6._crit_edge"   --->   Operation 89 'phi' 'node_pes_V_7' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%p_load9 = load i32 %empty_360" [example-4/src/load_inputs.cc:158]   --->   Operation 90 'load' 'p_load9' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln137_1 = zext i2 %node_pes_V_7" [example-4/src/load_inputs.cc:137]   --->   Operation 91 'zext' 'zext_ln137_1' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%neighbor_tables_offsets_2_addr = getelementptr i32 %neighbor_tables_offsets_2, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:157]   --->   Operation 92 'getelementptr' 'neighbor_tables_offsets_2_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (1.19ns)   --->   "%store_ln157 = store i32 %p_load9, i9 %neighbor_tables_offsets_2_addr" [example-4/src/load_inputs.cc:157]   --->   Operation 93 'store' 'store_ln157' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_3 : Operation 94 [1/1] (0.88ns)   --->   "%add_ln158_2 = add i32 %degree_j_2, i32 %p_load9" [example-4/src/load_inputs.cc:158]   --->   Operation 94 'add' 'add_ln158_2' <Predicate = (!icmp_ln145)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.85ns)   --->   "%icmp_ln160_2 = icmp_sgt  i32 %degree_j_2, i32 0" [example-4/src/load_inputs.cc:160]   --->   Operation 95 'icmp' 'icmp_ln160_2' <Predicate = (!icmp_ln145)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.38ns)   --->   "%br_ln160 = br i1 %icmp_ln160_2, void %._crit_edge14, void" [example-4/src/load_inputs.cc:160]   --->   Operation 96 'br' 'br_ln160' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_2_load = load i32 %pe_num_of_nodes_2" [example-4/src/load_inputs.cc:164]   --->   Operation 97 'load' 'pe_num_of_nodes_2_load' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln163_2 = zext i32 %pe_num_of_nodes_2_load" [example-4/src/load_inputs.cc:163]   --->   Operation 98 'zext' 'zext_ln163_2' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%degree_tables_1_2_addr = getelementptr i64 %degree_tables_1_2, i64 0, i64 %zext_ln163_2" [example-4/src/load_inputs.cc:163]   --->   Operation 99 'getelementptr' 'degree_tables_1_2_addr' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_16 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %degree_j_2, i32 %i_3_cast" [example-4/src/load_inputs.cc:163]   --->   Operation 100 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (1.20ns)   --->   "%store_ln163 = store i64 %tmp_16, i9 %degree_tables_1_2_addr" [example-4/src/load_inputs.cc:163]   --->   Operation 101 'store' 'store_ln163' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 500> <RAM>
ST_3 : Operation 102 [1/1] (0.88ns)   --->   "%num_of_nodes_per_pe_2 = add i32 %pe_num_of_nodes_2_load, i32 1" [example-4/src/load_inputs.cc:164]   --->   Operation 102 'add' 'num_of_nodes_per_pe_2' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%p_Result_432 = bitconcatenate i3 @_ssdm_op_BitConcatenate.i3.i1.i2, i1 1, i2 %node_pes_V_7"   --->   Operation 103 'bitconcatenate' 'p_Result_432' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.38ns)   --->   "%store_ln166 = store i32 %num_of_nodes_per_pe_2, i32 %pe_num_of_nodes_2" [example-4/src/load_inputs.cc:166]   --->   Operation 104 'store' 'store_ln166' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.38>
ST_3 : Operation 105 [1/1] (0.38ns)   --->   "%br_ln166 = br void %._crit_edge14" [example-4/src/load_inputs.cc:166]   --->   Operation 105 'br' 'br_ln166' <Predicate = (!icmp_ln145 & icmp_ln160_2)> <Delay = 0.38>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty_361" [example-4/src/load_inputs.cc:158]   --->   Operation 106 'load' 'p_load' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%neighbor_tables_offsets_3_addr = getelementptr i32 %neighbor_tables_offsets_3, i64 0, i64 %i_3_cast104" [example-4/src/load_inputs.cc:157]   --->   Operation 107 'getelementptr' 'neighbor_tables_offsets_3_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (1.19ns)   --->   "%store_ln157 = store i32 %p_load, i9 %neighbor_tables_offsets_3_addr" [example-4/src/load_inputs.cc:157]   --->   Operation 108 'store' 'store_ln157' <Predicate = (!icmp_ln145)> <Delay = 1.19> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_3 : Operation 109 [1/1] (0.88ns)   --->   "%add_ln158_3 = add i32 %degree_j_3, i32 %p_load" [example-4/src/load_inputs.cc:158]   --->   Operation 109 'add' 'add_ln158_3' <Predicate = (!icmp_ln145)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 110 [1/1] (0.85ns)   --->   "%icmp_ln160_3 = icmp_sgt  i32 %degree_j_3, i32 0" [example-4/src/load_inputs.cc:160]   --->   Operation 110 'icmp' 'icmp_ln160_3' <Predicate = (!icmp_ln145)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%pe_num_of_nodes_3_load = load i32 %pe_num_of_nodes_3" [example-4/src/load_inputs.cc:164]   --->   Operation 111 'load' 'pe_num_of_nodes_3_load' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln163_3 = zext i32 %pe_num_of_nodes_3_load" [example-4/src/load_inputs.cc:163]   --->   Operation 112 'zext' 'zext_ln163_3' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%degree_tables_1_3_addr = getelementptr i64 %degree_tables_1_3, i64 0, i64 %zext_ln163_3" [example-4/src/load_inputs.cc:163]   --->   Operation 113 'getelementptr' 'degree_tables_1_3_addr' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_19 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %degree_j_3, i32 %i_3_cast" [example-4/src/load_inputs.cc:163]   --->   Operation 114 'bitconcatenate' 'tmp_19' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (1.20ns)   --->   "%store_ln163 = store i64 %tmp_19, i9 %degree_tables_1_3_addr" [example-4/src/load_inputs.cc:163]   --->   Operation 115 'store' 'store_ln163' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 500> <RAM>
ST_3 : Operation 116 [1/1] (0.88ns)   --->   "%num_of_nodes_per_pe_3 = add i32 %pe_num_of_nodes_3_load, i32 1" [example-4/src/load_inputs.cc:164]   --->   Operation 116 'add' 'num_of_nodes_per_pe_3' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/1] (0.38ns)   --->   "%store_ln166 = store i32 %num_of_nodes_per_pe_3, i32 %pe_num_of_nodes_3" [example-4/src/load_inputs.cc:166]   --->   Operation 117 'store' 'store_ln166' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.38>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i8 @_ssdm_op_PartSelect.i8.i31.i32.i32, i31 %i, i32 1, i32 8" [example-4/src/load_inputs.cc:168]   --->   Operation 118 'partselect' 'lshr_ln' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln168 = zext i8 %lshr_ln" [example-4/src/load_inputs.cc:168]   --->   Operation 119 'zext' 'zext_ln168' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%pes_per_node_addr = getelementptr i8 %pes_per_node, i64 0, i64 %zext_ln168" [example-4/src/load_inputs.cc:168]   --->   Operation 120 'getelementptr' 'pes_per_node_addr' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 121 'load' 'reuse_addr_reg_load' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 122 [2/2] (0.62ns)   --->   "%pes_per_node_load = load i8 %pes_per_node_addr" [example-4/src/load_inputs.cc:168]   --->   Operation 122 'load' 'pes_per_node_load' <Predicate = (!icmp_ln145)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 250> <RAM>
ST_3 : Operation 123 [1/1] (1.06ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %zext_ln168" [example-4/src/load_inputs.cc:168]   --->   Operation 123 'icmp' 'addr_cmp' <Predicate = (!icmp_ln145)> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln168 = trunc i31 %i" [example-4/src/load_inputs.cc:168]   --->   Operation 124 'trunc' 'trunc_ln168' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.38ns)   --->   "%store_ln168 = store i64 %zext_ln168, i64 %reuse_addr_reg" [example-4/src/load_inputs.cc:168]   --->   Operation 125 'store' 'store_ln168' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 126 [1/1] (0.38ns)   --->   "%store_ln158 = store i32 %add_ln158_3, i32 %empty_361" [example-4/src/load_inputs.cc:158]   --->   Operation 126 'store' 'store_ln158' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 127 [1/1] (0.38ns)   --->   "%store_ln158 = store i32 %add_ln158_2, i32 %empty_360" [example-4/src/load_inputs.cc:158]   --->   Operation 127 'store' 'store_ln158' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 128 [1/1] (0.38ns)   --->   "%store_ln158 = store i32 %add_ln158_1, i32 %empty_359" [example-4/src/load_inputs.cc:158]   --->   Operation 128 'store' 'store_ln158' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 129 [1/1] (0.38ns)   --->   "%store_ln158 = store i32 %add_ln158, i32 %empty" [example-4/src/load_inputs.cc:158]   --->   Operation 129 'store' 'store_ln158' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 130 [1/1] (0.38ns)   --->   "%store_ln150 = store i32 %acc_1, i32 %acc" [example-4/src/load_inputs.cc:150]   --->   Operation 130 'store' 'store_ln150' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_3 : Operation 167 [1/1] (0.00ns)   --->   "%p_load14 = load i32 %empty"   --->   Operation 167 'load' 'p_load14' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 168 [1/1] (0.00ns)   --->   "%p_load12 = load i32 %empty_359"   --->   Operation 168 'load' 'p_load12' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 169 [1/1] (0.00ns)   --->   "%p_load10 = load i32 %empty_360"   --->   Operation 169 'load' 'p_load10' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 170 [1/1] (0.00ns)   --->   "%p_load8 = load i32 %empty_361"   --->   Operation 170 'load' 'p_load8' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 171 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out, i32 %p_load8"   --->   Operation 171 'write' 'write_ln0' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 172 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out1, i32 %p_load10"   --->   Operation 172 'write' 'write_ln0' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 173 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out2, i32 %p_load12"   --->   Operation 173 'write' 'write_ln0' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 174 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out3, i32 %p_load14"   --->   Operation 174 'write' 'write_ln0' <Predicate = (icmp_ln145)> <Delay = 0.00>
ST_3 : Operation 175 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 175 'ret' 'ret_ln0' <Predicate = (icmp_ln145)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.28>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%node_pes_V_6 = phi i3 %p_Result_432, void, i3 %zext_ln137_1, void %._crit_edge"   --->   Operation 131 'phi' 'node_pes_V_6' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln137_2 = zext i3 %node_pes_V_6" [example-4/src/load_inputs.cc:137]   --->   Operation 132 'zext' 'zext_ln137_2' <Predicate = (!icmp_ln145)> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (0.38ns)   --->   "%br_ln160 = br i1 %icmp_ln160_3, void %._crit_edge15, void" [example-4/src/load_inputs.cc:160]   --->   Operation 133 'br' 'br_ln160' <Predicate = (!icmp_ln145)> <Delay = 0.38>
ST_4 : Operation 134 [1/1] (0.00ns)   --->   "%p_Result_433 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %node_pes_V_6"   --->   Operation 134 'bitconcatenate' 'p_Result_433' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.00>
ST_4 : Operation 135 [1/1] (0.38ns)   --->   "%br_ln166 = br void %._crit_edge15" [example-4/src/load_inputs.cc:166]   --->   Operation 135 'br' 'br_ln166' <Predicate = (!icmp_ln145 & icmp_ln160_3)> <Delay = 0.38>
ST_4 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node shl_ln168)   --->   "%node_pes_V_5 = phi i4 %p_Result_433, void, i4 %zext_ln137_2, void %._crit_edge14"   --->   Operation 136 'phi' 'node_pes_V_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i8 %reuse_reg"   --->   Operation 137 'load' 'reuse_reg_load' <Predicate = (addr_cmp)> <Delay = 0.00>
ST_4 : Operation 138 [1/2] (0.62ns)   --->   "%pes_per_node_load = load i8 %pes_per_node_addr" [example-4/src/load_inputs.cc:168]   --->   Operation 138 'load' 'pes_per_node_load' <Predicate = true> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 250> <RAM>
ST_4 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node or_ln168)   --->   "%reuse_select = select i1 %addr_cmp, i8 %reuse_reg_load, i8 %pes_per_node_load" [example-4/src/load_inputs.cc:168]   --->   Operation 139 'select' 'reuse_select' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%shl_ln7 = bitconcatenate i3 @_ssdm_op_BitConcatenate.i3.i1.i2, i1 %trunc_ln168, i2 0" [example-4/src/load_inputs.cc:168]   --->   Operation 140 'bitconcatenate' 'shl_ln7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%empty_362 = or i3 %shl_ln7, i3 3" [example-4/src/load_inputs.cc:168]   --->   Operation 141 'or' 'empty_362' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (0.49ns)   --->   "%icmp_ln168 = icmp_ugt  i3 %shl_ln7, i3 %empty_362" [example-4/src/load_inputs.cc:168]   --->   Operation 142 'icmp' 'icmp_ln168' <Predicate = true> <Delay = 0.49> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln168_1 = zext i3 %shl_ln7" [example-4/src/load_inputs.cc:168]   --->   Operation 143 'zext' 'zext_ln168_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln168_2 = zext i3 %empty_362" [example-4/src/load_inputs.cc:168]   --->   Operation 144 'zext' 'zext_ln168_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node shl_ln168)   --->   "%zext_ln168_3 = zext i4 %node_pes_V_5" [example-4/src/load_inputs.cc:168]   --->   Operation 145 'zext' 'zext_ln168_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node shl_ln168)   --->   "%xor_ln168 = xor i4 %zext_ln168_1, i4 7" [example-4/src/load_inputs.cc:168]   --->   Operation 146 'xor' 'xor_ln168' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%select_ln168 = select i1 %icmp_ln168, i4 %zext_ln168_1, i4 %zext_ln168_2" [example-4/src/load_inputs.cc:168]   --->   Operation 147 'select' 'select_ln168' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%select_ln168_1 = select i1 %icmp_ln168, i4 %zext_ln168_2, i4 %zext_ln168_1" [example-4/src/load_inputs.cc:168]   --->   Operation 148 'select' 'select_ln168_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node shl_ln168)   --->   "%select_ln168_2 = select i1 %icmp_ln168, i4 %xor_ln168, i4 %zext_ln168_1" [example-4/src/load_inputs.cc:168]   --->   Operation 149 'select' 'select_ln168_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%xor_ln168_1 = xor i4 %select_ln168, i4 7" [example-4/src/load_inputs.cc:168]   --->   Operation 150 'xor' 'xor_ln168_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node shl_ln168)   --->   "%zext_ln168_4 = zext i4 %select_ln168_2" [example-4/src/load_inputs.cc:168]   --->   Operation 151 'zext' 'zext_ln168_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%zext_ln168_5 = zext i4 %select_ln168_1" [example-4/src/load_inputs.cc:168]   --->   Operation 152 'zext' 'zext_ln168_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%zext_ln168_6 = zext i4 %xor_ln168_1" [example-4/src/load_inputs.cc:168]   --->   Operation 153 'zext' 'zext_ln168_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 154 [1/1] (0.55ns) (out node of the LUT)   --->   "%shl_ln168 = shl i8 %zext_ln168_3, i8 %zext_ln168_4" [example-4/src/load_inputs.cc:168]   --->   Operation 154 'shl' 'shl_ln168' <Predicate = true> <Delay = 0.55> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.55> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node and_ln168_2)   --->   "%tmp = partselect i8 @llvm.part.select.i8, i8 %shl_ln168, i32 7, i32 0" [example-4/src/load_inputs.cc:168]   --->   Operation 155 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node and_ln168_2)   --->   "%select_ln168_3 = select i1 %icmp_ln168, i8 %tmp, i8 %shl_ln168" [example-4/src/load_inputs.cc:168]   --->   Operation 156 'select' 'select_ln168_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%shl_ln168_1 = shl i8 255, i8 %zext_ln168_5" [example-4/src/load_inputs.cc:168]   --->   Operation 157 'shl' 'shl_ln168_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.55> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node and_ln168)   --->   "%lshr_ln168 = lshr i8 255, i8 %zext_ln168_6" [example-4/src/load_inputs.cc:168]   --->   Operation 158 'lshr' 'lshr_ln168' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.55> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 159 [1/1] (0.55ns) (out node of the LUT)   --->   "%and_ln168 = and i8 %shl_ln168_1, i8 %lshr_ln168" [example-4/src/load_inputs.cc:168]   --->   Operation 159 'and' 'and_ln168' <Predicate = true> <Delay = 0.55> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node or_ln168)   --->   "%xor_ln168_2 = xor i8 %and_ln168, i8 255" [example-4/src/load_inputs.cc:168]   --->   Operation 160 'xor' 'xor_ln168_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node or_ln168)   --->   "%and_ln168_1 = and i8 %reuse_select, i8 %xor_ln168_2" [example-4/src/load_inputs.cc:168]   --->   Operation 161 'and' 'and_ln168_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 162 [1/1] (0.30ns) (out node of the LUT)   --->   "%and_ln168_2 = and i8 %select_ln168_3, i8 %and_ln168" [example-4/src/load_inputs.cc:168]   --->   Operation 162 'and' 'and_ln168_2' <Predicate = true> <Delay = 0.30> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 163 [1/1] (0.30ns) (out node of the LUT)   --->   "%or_ln168 = or i8 %and_ln168_1, i8 %and_ln168_2" [example-4/src/load_inputs.cc:168]   --->   Operation 163 'or' 'or_ln168' <Predicate = true> <Delay = 0.30> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 164 [1/1] (0.62ns)   --->   "%store_ln168 = store i8 %or_ln168, i8 %pes_per_node_addr" [example-4/src/load_inputs.cc:168]   --->   Operation 164 'store' 'store_ln168' <Predicate = true> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 250> <RAM>
ST_4 : Operation 165 [1/1] (0.38ns)   --->   "%store_ln168 = store i8 %or_ln168, i8 %reuse_reg" [example-4/src/load_inputs.cc:168]   --->   Operation 165 'store' 'store_ln168' <Predicate = true> <Delay = 0.38>
ST_4 : Operation 166 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph55"   --->   Operation 166 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.33ns, clock uncertainty: 0.9ns.

 <State 1>: 1.26ns
The critical path consists of the following:
	'alloca' operation ('i') [25]  (0 ns)
	'load' operation ('i', example-4/src/load_inputs.cc:168) on local variable 'i' [46]  (0 ns)
	'add' operation ('add_ln145', example-4/src/load_inputs.cc:145) [50]  (0.874 ns)
	'store' operation ('store_ln145', example-4/src/load_inputs.cc:145) of variable 'add_ln145', example-4/src/load_inputs.cc:145 on local variable 'i' [178]  (0.387 ns)

 <State 2>: 2.06ns
The critical path consists of the following:
	'load' operation ('full_pe_degree_tables_load', example-4/src/load_inputs.cc:156) on array 'full_pe_degree_tables' [64]  (1.2 ns)
	'icmp' operation ('icmp_ln160', example-4/src/load_inputs.cc:160) [69]  (0.859 ns)

 <State 3>: 2.06ns
The critical path consists of the following:
	'load' operation ('pe_num_of_nodes_load', example-4/src/load_inputs.cc:164) on local variable 'pe_num_of_nodes' [72]  (0 ns)
	'add' operation ('num_of_nodes_per_pe', example-4/src/load_inputs.cc:164) [77]  (0.88 ns)
	'store' operation ('store_ln166', example-4/src/load_inputs.cc:166) of variable 'num_of_nodes_per_pe', example-4/src/load_inputs.cc:164 on local variable 'pe_num_of_nodes' [78]  (0.387 ns)
	blocking operation 0.792 ns on control path)

 <State 4>: 2.29ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln168', example-4/src/load_inputs.cc:168) [153]  (0.5 ns)
	'select' operation ('select_ln168', example-4/src/load_inputs.cc:168) [158]  (0 ns)
	'xor' operation ('xor_ln168_1', example-4/src/load_inputs.cc:168) [161]  (0 ns)
	'lshr' operation ('lshr_ln168', example-4/src/load_inputs.cc:168) [169]  (0 ns)
	'and' operation ('and_ln168', example-4/src/load_inputs.cc:168) [170]  (0.557 ns)
	'and' operation ('and_ln168_2', example-4/src/load_inputs.cc:168) [173]  (0.303 ns)
	'or' operation ('or_ln168', example-4/src/load_inputs.cc:168) [174]  (0.303 ns)
	'store' operation ('store_ln168', example-4/src/load_inputs.cc:168) of variable 'or_ln168', example-4/src/load_inputs.cc:168 on array 'pes_per_node' [175]  (0.626 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
