

================================================================
== Vitis HLS Report for 'load_weights_Pipeline_load_mlp_2_bias_load_mlp_2_bias_dim'
================================================================
* Date:           Fri May  3 00:15:25 2024

* Version:        2021.1.1 (Build 3286242 on Wed Jul 28 13:09:46 MDT 2021)
* Project:        example-4
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.33 ns|  2.433 ns|     0.90 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      577|      577|  1.923 us|  1.923 us|  577|  577|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                       |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name               |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- load_mlp_2_bias_load_mlp_2_bias_dim  |      575|      575|        77|          1|          1|   500|       yes|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 77


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 77
* Pipeline : 1
  Pipeline-0 : II = 1, D = 77, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%dim = alloca i32 1"   --->   Operation 80 'alloca' 'dim' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%l = alloca i32 1"   --->   Operation 81 'alloca' 'l' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%indvar_flatten207 = alloca i32 1"   --->   Operation 82 'alloca' 'indvar_flatten207' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1024 %mem, void @empty_30, i32 0, i32 0, void @empty_8, i32 64, i32 1, void @empty_13, void @empty_12, void @empty_8, i32 16, i32 16, i32 16, i32 16, void @empty_8, void @empty_8"   --->   Operation 83 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln11_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %trunc_ln11"   --->   Operation 84 'read' 'trunc_ln11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%node_mlp_2_bias_in_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %node_mlp_2_bias_in"   --->   Operation 85 'read' 'node_mlp_2_bias_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.38ns)   --->   "%store_ln0 = store i9 0, i9 %indvar_flatten207"   --->   Operation 86 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 87 [1/1] (0.38ns)   --->   "%store_ln0 = store i3 0, i3 %l"   --->   Operation 87 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 88 [1/1] (0.38ns)   --->   "%store_ln0 = store i7 0, i7 %dim"   --->   Operation 88 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 89 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%indvar_flatten207_load = load i9 %indvar_flatten207" [example-4/src/load_inputs.cc:27]   --->   Operation 90 'load' 'indvar_flatten207_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 91 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.59ns)   --->   "%icmp_ln27 = icmp_eq  i9 %indvar_flatten207_load, i9 500" [example-4/src/load_inputs.cc:27]   --->   Operation 92 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.71ns)   --->   "%add_ln27_1 = add i9 %indvar_flatten207_load, i9 1" [example-4/src/load_inputs.cc:27]   --->   Operation 93 'add' 'add_ln27_1' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln27 = br i1 %icmp_ln27, void %.preheader3, void %.preheader2.preheader.exitStub" [example-4/src/load_inputs.cc:27]   --->   Operation 94 'br' 'br_ln27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%dim_load = load i7 %dim" [example-4/src/load_inputs.cc:29]   --->   Operation 95 'load' 'dim_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%l_load = load i3 %l" [example-4/src/load_inputs.cc:27]   --->   Operation 96 'load' 'l_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.57ns)   --->   "%add_ln27 = add i3 %l_load, i3 1" [example-4/src/load_inputs.cc:27]   --->   Operation 97 'add' 'add_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.59ns)   --->   "%icmp_ln29 = icmp_eq  i7 %dim_load, i7 100" [example-4/src/load_inputs.cc:29]   --->   Operation 98 'icmp' 'icmp_ln29' <Predicate = (!icmp_ln27)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.30ns)   --->   "%select_ln27 = select i1 %icmp_ln29, i7 0, i7 %dim_load" [example-4/src/load_inputs.cc:27]   --->   Operation 99 'select' 'select_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.27ns)   --->   "%select_ln27_1 = select i1 %icmp_ln29, i3 %add_ln27, i3 %l_load" [example-4/src/load_inputs.cc:27]   --->   Operation 100 'select' 'select_ln27_1' <Predicate = (!icmp_ln27)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i3 %select_ln27_1" [example-4/src/load_inputs.cc:31]   --->   Operation 101 'zext' 'zext_ln31' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln31_3 = zext i3 %select_ln27_1" [example-4/src/load_inputs.cc:31]   --->   Operation 102 'zext' 'zext_ln31_3' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 103 [3/3] (0.99ns) (grouped into DSP with root node add_ln31_3)   --->   "%mul_ln27_1 = mul i8 %zext_ln31_3, i8 50" [example-4/src/load_inputs.cc:27]   --->   Operation 103 'mul' 'mul_ln27_1' <Predicate = (!icmp_ln27)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 104 [3/3] (0.99ns) (grouped into DSP with root node add_ln31)   --->   "%mul_ln27 = mul i9 %zext_ln31, i9 100" [example-4/src/load_inputs.cc:27]   --->   Operation 104 'mul' 'mul_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i7 %select_ln27" [example-4/src/load_inputs.cc:31]   --->   Operation 105 'trunc' 'trunc_ln31' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%lshr_ln31_1 = partselect i6 @_ssdm_op_PartSelect.i6.i7.i32.i32, i7 %select_ln27, i32 1, i32 6" [example-4/src/load_inputs.cc:31]   --->   Operation 106 'partselect' 'lshr_ln31_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %trunc_ln31, void %branch2, void %branch3" [example-4/src/load_inputs.cc:31]   --->   Operation 107 'br' 'br_ln31' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.70ns)   --->   "%add_ln29 = add i7 %select_ln27, i7 1" [example-4/src/load_inputs.cc:29]   --->   Operation 108 'add' 'add_ln29' <Predicate = (!icmp_ln27)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.38ns)   --->   "%store_ln27 = store i9 %add_ln27_1, i9 %indvar_flatten207" [example-4/src/load_inputs.cc:27]   --->   Operation 109 'store' 'store_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.38>
ST_1 : Operation 110 [1/1] (0.38ns)   --->   "%store_ln27 = store i3 %select_ln27_1, i3 %l" [example-4/src/load_inputs.cc:27]   --->   Operation 110 'store' 'store_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.38>
ST_1 : Operation 111 [1/1] (0.38ns)   --->   "%store_ln29 = store i7 %add_ln29, i7 %dim" [example-4/src/load_inputs.cc:29]   --->   Operation 111 'store' 'store_ln29' <Predicate = (!icmp_ln27)> <Delay = 0.38>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 112 'br' 'br_ln0' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 113 [2/3] (0.99ns) (grouped into DSP with root node add_ln31_3)   --->   "%mul_ln27_1 = mul i8 %zext_ln31_3, i8 50" [example-4/src/load_inputs.cc:27]   --->   Operation 113 'mul' 'mul_ln27_1' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 114 [2/3] (0.99ns) (grouped into DSP with root node add_ln31)   --->   "%mul_ln27 = mul i9 %zext_ln31, i9 100" [example-4/src/load_inputs.cc:27]   --->   Operation 114 'mul' 'mul_ln27' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.64>
ST_3 : Operation 115 [1/3] (0.00ns) (grouped into DSP with root node add_ln31_3)   --->   "%mul_ln27_1 = mul i8 %zext_ln31_3, i8 50" [example-4/src/load_inputs.cc:27]   --->   Operation 115 'mul' 'mul_ln27_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 116 [1/3] (0.00ns) (grouped into DSP with root node add_ln31)   --->   "%mul_ln27 = mul i9 %zext_ln31, i9 100" [example-4/src/load_inputs.cc:27]   --->   Operation 116 'mul' 'mul_ln27' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%dim_1_cast = zext i7 %select_ln27" [example-4/src/load_inputs.cc:27]   --->   Operation 117 'zext' 'dim_1_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln31_4 = zext i6 %lshr_ln31_1" [example-4/src/load_inputs.cc:31]   --->   Operation 118 'zext' 'zext_ln31_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln31_3 = add i8 %mul_ln27_1, i8 %zext_ln31_4" [example-4/src/load_inputs.cc:31]   --->   Operation 119 'add' 'add_ln31_3' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 120 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln31 = add i9 %mul_ln27, i9 %dim_1_cast" [example-4/src/load_inputs.cc:31]   --->   Operation 120 'add' 'add_ln31' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 1.79>
ST_4 : Operation 121 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln31_3 = add i8 %mul_ln27_1, i8 %zext_ln31_4" [example-4/src/load_inputs.cc:31]   --->   Operation 121 'add' 'add_ln31_3' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 122 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln31 = add i9 %mul_ln27, i9 %dim_1_cast" [example-4/src/load_inputs.cc:31]   --->   Operation 122 'add' 'add_ln31' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i9.i1, i9 %add_ln31, i1 0" [example-4/src/load_inputs.cc:31]   --->   Operation 123 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i10 %shl_ln" [example-4/src/load_inputs.cc:31]   --->   Operation 124 'zext' 'zext_ln31_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = trunc i9 %add_ln31" [example-4/src/load_inputs.cc:31]   --->   Operation 125 'trunc' 'trunc_ln31_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (1.14ns)   --->   "%add_ln31_1 = add i64 %zext_ln31_1, i64 %node_mlp_2_bias_in_read" [example-4/src/load_inputs.cc:31]   --->   Operation 126 'add' 'add_ln31_1' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln31_4 = partselect i57 @_ssdm_op_PartSelect.i57.i64.i32.i32, i64 %add_ln31_1, i32 7, i32 63" [example-4/src/load_inputs.cc:31]   --->   Operation 127 'partselect' 'trunc_ln31_4' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.43>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i57 %trunc_ln31_4" [example-4/src/load_inputs.cc:31]   --->   Operation 128 'sext' 'sext_ln31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i1024 %mem, i64 %sext_ln31" [example-4/src/load_inputs.cc:31]   --->   Operation 129 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 130 [70/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 130 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 2.43>
ST_6 : Operation 131 [69/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 131 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 2.43>
ST_7 : Operation 132 [68/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 132 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 2.43>
ST_8 : Operation 133 [67/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 133 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 2.43>
ST_9 : Operation 134 [66/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 134 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 2.43>
ST_10 : Operation 135 [65/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 135 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 2.43>
ST_11 : Operation 136 [64/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 136 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 2.43>
ST_12 : Operation 137 [63/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 137 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 2.43>
ST_13 : Operation 138 [62/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 138 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 2.43>
ST_14 : Operation 139 [61/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 139 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 2.43>
ST_15 : Operation 140 [60/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 140 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 2.43>
ST_16 : Operation 141 [59/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 141 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 2.43>
ST_17 : Operation 142 [58/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 142 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 2.43>
ST_18 : Operation 143 [57/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 143 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 2.43>
ST_19 : Operation 144 [56/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 144 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 2.43>
ST_20 : Operation 145 [55/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 145 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 2.43>
ST_21 : Operation 146 [54/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 146 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 2.43>
ST_22 : Operation 147 [53/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 147 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 2.43>
ST_23 : Operation 148 [52/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 148 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 2.43>
ST_24 : Operation 149 [51/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 149 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 2.43>
ST_25 : Operation 150 [50/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 150 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 2.43>
ST_26 : Operation 151 [49/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 151 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 2.43>
ST_27 : Operation 152 [48/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 152 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 2.43>
ST_28 : Operation 153 [47/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 153 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 2.43>
ST_29 : Operation 154 [46/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 154 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 2.43>
ST_30 : Operation 155 [45/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 155 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 2.43>
ST_31 : Operation 156 [44/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 156 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 2.43>
ST_32 : Operation 157 [43/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 157 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 2.43>
ST_33 : Operation 158 [42/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 158 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 2.43>
ST_34 : Operation 159 [41/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 159 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 2.43>
ST_35 : Operation 160 [40/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 160 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 2.43>
ST_36 : Operation 161 [39/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 161 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 2.43>
ST_37 : Operation 162 [38/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 162 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 2.43>
ST_38 : Operation 163 [37/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 163 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 2.43>
ST_39 : Operation 164 [36/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 164 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 2.43>
ST_40 : Operation 165 [35/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 165 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 2.43>
ST_41 : Operation 166 [34/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 166 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 2.43>
ST_42 : Operation 167 [33/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 167 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 2.43>
ST_43 : Operation 168 [32/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 168 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 2.43>
ST_44 : Operation 169 [31/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 169 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 2.43>
ST_45 : Operation 170 [30/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 170 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 2.43>
ST_46 : Operation 171 [29/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 171 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 2.43>
ST_47 : Operation 172 [28/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 172 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 2.43>
ST_48 : Operation 173 [27/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 173 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 2.43>
ST_49 : Operation 174 [26/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 174 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 2.43>
ST_50 : Operation 175 [25/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 175 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 2.43>
ST_51 : Operation 176 [24/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 176 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 2.43>
ST_52 : Operation 177 [23/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 177 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 2.43>
ST_53 : Operation 178 [22/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 178 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 2.43>
ST_54 : Operation 179 [21/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 179 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 2.43>
ST_55 : Operation 180 [20/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 180 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 2.43>
ST_56 : Operation 181 [19/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 181 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 2.43>
ST_57 : Operation 182 [18/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 182 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 2.43>
ST_58 : Operation 183 [17/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 183 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 59 <SV = 58> <Delay = 2.43>
ST_59 : Operation 184 [16/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 184 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 2.43>
ST_60 : Operation 185 [15/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 185 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 2.43>
ST_61 : Operation 186 [14/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 186 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 2.43>
ST_62 : Operation 187 [13/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 187 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 2.43>
ST_63 : Operation 188 [12/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 188 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 2.43>
ST_64 : Operation 189 [11/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 189 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 64> <Delay = 2.43>
ST_65 : Operation 190 [10/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 190 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 65> <Delay = 2.43>
ST_66 : Operation 191 [9/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 191 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 66> <Delay = 2.43>
ST_67 : Operation 192 [8/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 192 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 67> <Delay = 2.43>
ST_68 : Operation 193 [7/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 193 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 68> <Delay = 2.43>
ST_69 : Operation 194 [6/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 194 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 69> <Delay = 2.43>
ST_70 : Operation 195 [5/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 195 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 71 <SV = 70> <Delay = 2.43>
ST_71 : Operation 196 [4/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 196 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 72 <SV = 71> <Delay = 2.43>
ST_72 : Operation 197 [3/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 197 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 72> <Delay = 2.43>
ST_73 : Operation 198 [2/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 198 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 73> <Delay = 2.43>
ST_74 : Operation 199 [1/70] (2.43ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i1024P1A, i1024 %mem_addr, i32 1" [example-4/src/load_inputs.cc:31]   --->   Operation 199 'readreq' 'mem_load_1_req' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 75 <SV = 74> <Delay = 2.43>
ST_75 : Operation 200 [1/1] (2.43ns)   --->   "%mem_addr_read = read i1024 @_ssdm_op_Read.m_axi.i1024P1A, i1024 %mem_addr" [example-4/src/load_inputs.cc:31]   --->   Operation 200 'read' 'mem_addr_read' <Predicate = true> <Delay = 2.43> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 76 <SV = 75> <Delay = 2.14>
ST_76 : Operation 201 [1/1] (0.00ns)   --->   "%trunc_ln31_3 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i6.i1, i6 %trunc_ln31_1, i1 0" [example-4/src/load_inputs.cc:31]   --->   Operation 201 'bitconcatenate' 'trunc_ln31_3' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 202 [1/1] (0.70ns)   --->   "%add_ln31_2 = add i7 %trunc_ln31_3, i7 %trunc_ln11_read" [example-4/src/load_inputs.cc:31]   --->   Operation 202 'add' 'add_ln31_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_76 : Operation 203 [1/1] (0.00ns)   --->   "%shl_ln31_1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i7.i3, i7 %add_ln31_2, i3 0" [example-4/src/load_inputs.cc:31]   --->   Operation 203 'bitconcatenate' 'shl_ln31_1' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln31_2 = zext i10 %shl_ln31_1" [example-4/src/load_inputs.cc:31]   --->   Operation 204 'zext' 'zext_ln31_2' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 205 [1/1] (1.44ns)   --->   "%lshr_ln31 = lshr i1024 %mem_addr_read, i1024 %zext_ln31_2" [example-4/src/load_inputs.cc:31]   --->   Operation 205 'lshr' 'lshr_ln31' <Predicate = true> <Delay = 1.44> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_76 : Operation 206 [1/1] (0.00ns)   --->   "%trunc_ln31_2 = trunc i1024 %lshr_ln31" [example-4/src/load_inputs.cc:31]   --->   Operation 206 'trunc' 'trunc_ln31_2' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 218 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 218 'ret' 'ret_ln0' <Predicate = (icmp_ln27)> <Delay = 0.00>

State 77 <SV = 76> <Delay = 1.17>
ST_77 : Operation 207 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @load_mlp_2_bias_load_mlp_2_bias_dim_str"   --->   Operation 207 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 208 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 500, i64 500, i64 500"   --->   Operation 208 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 209 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 209 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 210 [1/1] (0.00ns)   --->   "%specloopname_ln29 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [example-4/src/load_inputs.cc:29]   --->   Operation 210 'specloopname' 'specloopname_ln29' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln31_5 = zext i8 %add_ln31_3" [example-4/src/load_inputs.cc:31]   --->   Operation 211 'zext' 'zext_ln31_5' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 212 [1/1] (0.00ns)   --->   "%node_mlp_2_bias_V_0_addr = getelementptr i16 %node_mlp_2_bias_V_0, i64 0, i64 %zext_ln31_5" [example-4/src/load_inputs.cc:31]   --->   Operation 212 'getelementptr' 'node_mlp_2_bias_V_0_addr' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 213 [1/1] (0.00ns)   --->   "%node_mlp_2_bias_V_1_addr = getelementptr i16 %node_mlp_2_bias_V_1, i64 0, i64 %zext_ln31_5" [example-4/src/load_inputs.cc:31]   --->   Operation 213 'getelementptr' 'node_mlp_2_bias_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 214 [1/1] (1.17ns)   --->   "%store_ln31 = store i16 %trunc_ln31_2, i8 %node_mlp_2_bias_V_0_addr" [example-4/src/load_inputs.cc:31]   --->   Operation 214 'store' 'store_ln31' <Predicate = (!trunc_ln31)> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 250> <RAM>
ST_77 : Operation 215 [1/1] (0.00ns)   --->   "%br_ln31 = br void %.split2014" [example-4/src/load_inputs.cc:31]   --->   Operation 215 'br' 'br_ln31' <Predicate = (!trunc_ln31)> <Delay = 0.00>
ST_77 : Operation 216 [1/1] (1.17ns)   --->   "%store_ln31 = store i16 %trunc_ln31_2, i8 %node_mlp_2_bias_V_1_addr" [example-4/src/load_inputs.cc:31]   --->   Operation 216 'store' 'store_ln31' <Predicate = (trunc_ln31)> <Delay = 1.17> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.17> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 250> <RAM>
ST_77 : Operation 217 [1/1] (0.00ns)   --->   "%br_ln31 = br void %.split2014" [example-4/src/load_inputs.cc:31]   --->   Operation 217 'br' 'br_ln31' <Predicate = (trunc_ln31)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.33ns, clock uncertainty: 0.9ns.

 <State 1>: 2ns
The critical path consists of the following:
	'alloca' operation ('dim') [6]  (0 ns)
	'load' operation ('dim_load', example-4/src/load_inputs.cc:29) on local variable 'dim' [23]  (0 ns)
	'icmp' operation ('icmp_ln29', example-4/src/load_inputs.cc:29) [28]  (0.6 ns)
	'select' operation ('select_ln27', example-4/src/load_inputs.cc:27) [29]  (0.308 ns)
	'add' operation ('add_ln29', example-4/src/load_inputs.cc:29) [69]  (0.706 ns)
	'store' operation ('store_ln29', example-4/src/load_inputs.cc:29) of variable 'add_ln29', example-4/src/load_inputs.cc:29 on local variable 'dim' [72]  (0.387 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[41] ('mul_ln27_1', example-4/src/load_inputs.cc:27) [33]  (0.996 ns)

 <State 3>: 0.645ns
The critical path consists of the following:
	'mul' operation of DSP[41] ('mul_ln27_1', example-4/src/load_inputs.cc:27) [33]  (0 ns)
	'add' operation of DSP[41] ('add_ln31_3', example-4/src/load_inputs.cc:31) [41]  (0.645 ns)

 <State 4>: 1.79ns
The critical path consists of the following:
	'add' operation of DSP[45] ('add_ln31', example-4/src/load_inputs.cc:31) [45]  (0.645 ns)
	'add' operation ('add_ln31_1', example-4/src/load_inputs.cc:31) [50]  (1.15 ns)

 <State 5>: 2.43ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', example-4/src/load_inputs.cc:31) [53]  (0 ns)
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 6>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 7>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 8>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 9>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 10>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 11>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 12>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 13>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 14>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 15>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 16>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 17>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 18>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 19>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 20>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 21>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 22>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 23>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 24>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 25>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 26>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 27>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 28>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 29>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 30>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 31>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 32>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 33>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 34>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 35>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 36>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 37>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 38>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 39>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 40>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 41>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 42>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 43>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 44>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 45>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 46>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 47>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 48>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 49>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 50>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 51>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 52>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 53>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 54>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 55>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 56>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 57>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 58>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 59>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 60>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 61>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 62>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 63>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 64>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 65>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 66>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 67>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 68>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 69>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 70>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 71>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 72>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 73>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 74>: 2.43ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [54]  (2.43 ns)

 <State 75>: 2.43ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', example-4/src/load_inputs.cc:31) on port 'mem' (example-4/src/load_inputs.cc:31) [55]  (2.43 ns)

 <State 76>: 2.15ns
The critical path consists of the following:
	'add' operation ('add_ln31_2', example-4/src/load_inputs.cc:31) [56]  (0.706 ns)
	'lshr' operation ('lshr_ln31', example-4/src/load_inputs.cc:31) [59]  (1.44 ns)

 <State 77>: 1.18ns
The critical path consists of the following:
	'getelementptr' operation ('node_mlp_2_bias_V_1_addr', example-4/src/load_inputs.cc:31) [44]  (0 ns)
	'store' operation ('store_ln31', example-4/src/load_inputs.cc:31) of variable 'trunc_ln31_2', example-4/src/load_inputs.cc:31 on array 'node_mlp_2_bias_V_1' [66]  (1.18 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
