-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
-- Version: 2021.1.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GIN_compute_graphs_message_passing_all_pes is
port (
    ne_out_0_0_0_0_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    ne_out_0_0_0_0_0_empty_n : IN STD_LOGIC;
    ne_out_0_0_0_0_0_read : OUT STD_LOGIC;
    ne_out_0_0_0_0_01_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    ne_out_0_0_0_0_01_empty_n : IN STD_LOGIC;
    ne_out_0_0_0_0_01_read : OUT STD_LOGIC;
    ne_out_0_0_0_0_012_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    ne_out_0_0_0_0_012_empty_n : IN STD_LOGIC;
    ne_out_0_0_0_0_012_read : OUT STD_LOGIC;
    ne_out_0_0_0_0_013_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    ne_out_0_0_0_0_013_empty_n : IN STD_LOGIC;
    ne_out_0_0_0_0_013_read : OUT STD_LOGIC;
    message_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message_ce0 : OUT STD_LOGIC;
    message_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message_we0 : OUT STD_LOGIC;
    message_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message_ce1 : OUT STD_LOGIC;
    message_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message_we1 : OUT STD_LOGIC;
    message4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message4_ce0 : OUT STD_LOGIC;
    message4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message4_we0 : OUT STD_LOGIC;
    message4_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message4_ce1 : OUT STD_LOGIC;
    message4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message4_we1 : OUT STD_LOGIC;
    message5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message5_ce0 : OUT STD_LOGIC;
    message5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message5_we0 : OUT STD_LOGIC;
    message5_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message5_ce1 : OUT STD_LOGIC;
    message5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message5_we1 : OUT STD_LOGIC;
    message6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message6_ce0 : OUT STD_LOGIC;
    message6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message6_we0 : OUT STD_LOGIC;
    message6_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message6_ce1 : OUT STD_LOGIC;
    message6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message6_we1 : OUT STD_LOGIC;
    message7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message7_ce0 : OUT STD_LOGIC;
    message7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message7_we0 : OUT STD_LOGIC;
    message7_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message7_ce1 : OUT STD_LOGIC;
    message7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message7_we1 : OUT STD_LOGIC;
    message8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message8_ce0 : OUT STD_LOGIC;
    message8_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message8_we0 : OUT STD_LOGIC;
    message8_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message8_ce1 : OUT STD_LOGIC;
    message8_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message8_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message8_we1 : OUT STD_LOGIC;
    message9_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message9_ce0 : OUT STD_LOGIC;
    message9_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message9_we0 : OUT STD_LOGIC;
    message9_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message9_ce1 : OUT STD_LOGIC;
    message9_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message9_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message9_we1 : OUT STD_LOGIC;
    message10_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message10_ce0 : OUT STD_LOGIC;
    message10_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message10_we0 : OUT STD_LOGIC;
    message10_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message10_ce1 : OUT STD_LOGIC;
    message10_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message10_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message10_we1 : OUT STD_LOGIC;
    message2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message2_ce0 : OUT STD_LOGIC;
    message2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message2_we0 : OUT STD_LOGIC;
    message2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message2_ce1 : OUT STD_LOGIC;
    message2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message2_we1 : OUT STD_LOGIC;
    message211_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message211_ce0 : OUT STD_LOGIC;
    message211_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message211_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message211_we0 : OUT STD_LOGIC;
    message211_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message211_ce1 : OUT STD_LOGIC;
    message211_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message211_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message211_we1 : OUT STD_LOGIC;
    message212_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message212_ce0 : OUT STD_LOGIC;
    message212_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message212_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message212_we0 : OUT STD_LOGIC;
    message212_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message212_ce1 : OUT STD_LOGIC;
    message212_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message212_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message212_we1 : OUT STD_LOGIC;
    message213_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message213_ce0 : OUT STD_LOGIC;
    message213_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message213_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message213_we0 : OUT STD_LOGIC;
    message213_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message213_ce1 : OUT STD_LOGIC;
    message213_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message213_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message213_we1 : OUT STD_LOGIC;
    message214_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message214_ce0 : OUT STD_LOGIC;
    message214_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message214_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message214_we0 : OUT STD_LOGIC;
    message214_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message214_ce1 : OUT STD_LOGIC;
    message214_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message214_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message214_we1 : OUT STD_LOGIC;
    message215_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message215_ce0 : OUT STD_LOGIC;
    message215_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message215_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message215_we0 : OUT STD_LOGIC;
    message215_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message215_ce1 : OUT STD_LOGIC;
    message215_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message215_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message215_we1 : OUT STD_LOGIC;
    message216_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message216_ce0 : OUT STD_LOGIC;
    message216_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message216_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message216_we0 : OUT STD_LOGIC;
    message216_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message216_ce1 : OUT STD_LOGIC;
    message216_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message216_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message216_we1 : OUT STD_LOGIC;
    message217_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message217_ce0 : OUT STD_LOGIC;
    message217_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message217_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message217_we0 : OUT STD_LOGIC;
    message217_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message217_ce1 : OUT STD_LOGIC;
    message217_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message217_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message217_we1 : OUT STD_LOGIC;
    message3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message3_ce0 : OUT STD_LOGIC;
    message3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message3_we0 : OUT STD_LOGIC;
    message3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message3_ce1 : OUT STD_LOGIC;
    message3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message3_we1 : OUT STD_LOGIC;
    message318_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message318_ce0 : OUT STD_LOGIC;
    message318_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message318_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message318_we0 : OUT STD_LOGIC;
    message318_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message318_ce1 : OUT STD_LOGIC;
    message318_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message318_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message318_we1 : OUT STD_LOGIC;
    message319_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message319_ce0 : OUT STD_LOGIC;
    message319_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message319_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message319_we0 : OUT STD_LOGIC;
    message319_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message319_ce1 : OUT STD_LOGIC;
    message319_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message319_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message319_we1 : OUT STD_LOGIC;
    message320_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message320_ce0 : OUT STD_LOGIC;
    message320_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message320_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message320_we0 : OUT STD_LOGIC;
    message320_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message320_ce1 : OUT STD_LOGIC;
    message320_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message320_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message320_we1 : OUT STD_LOGIC;
    message321_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message321_ce0 : OUT STD_LOGIC;
    message321_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message321_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message321_we0 : OUT STD_LOGIC;
    message321_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message321_ce1 : OUT STD_LOGIC;
    message321_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message321_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message321_we1 : OUT STD_LOGIC;
    message322_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message322_ce0 : OUT STD_LOGIC;
    message322_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message322_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message322_we0 : OUT STD_LOGIC;
    message322_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message322_ce1 : OUT STD_LOGIC;
    message322_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message322_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message322_we1 : OUT STD_LOGIC;
    message323_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message323_ce0 : OUT STD_LOGIC;
    message323_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message323_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message323_we0 : OUT STD_LOGIC;
    message323_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message323_ce1 : OUT STD_LOGIC;
    message323_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message323_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message323_we1 : OUT STD_LOGIC;
    message324_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message324_ce0 : OUT STD_LOGIC;
    message324_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message324_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message324_we0 : OUT STD_LOGIC;
    message324_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message324_ce1 : OUT STD_LOGIC;
    message324_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message324_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message324_we1 : OUT STD_LOGIC;
    message425_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message425_ce0 : OUT STD_LOGIC;
    message425_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message425_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message425_we0 : OUT STD_LOGIC;
    message425_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message425_ce1 : OUT STD_LOGIC;
    message425_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message425_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message425_we1 : OUT STD_LOGIC;
    message426_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message426_ce0 : OUT STD_LOGIC;
    message426_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message426_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message426_we0 : OUT STD_LOGIC;
    message426_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message426_ce1 : OUT STD_LOGIC;
    message426_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message426_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message426_we1 : OUT STD_LOGIC;
    message427_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message427_ce0 : OUT STD_LOGIC;
    message427_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message427_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message427_we0 : OUT STD_LOGIC;
    message427_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message427_ce1 : OUT STD_LOGIC;
    message427_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message427_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message427_we1 : OUT STD_LOGIC;
    message428_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message428_ce0 : OUT STD_LOGIC;
    message428_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message428_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message428_we0 : OUT STD_LOGIC;
    message428_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message428_ce1 : OUT STD_LOGIC;
    message428_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message428_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message428_we1 : OUT STD_LOGIC;
    message429_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message429_ce0 : OUT STD_LOGIC;
    message429_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message429_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message429_we0 : OUT STD_LOGIC;
    message429_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message429_ce1 : OUT STD_LOGIC;
    message429_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message429_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message429_we1 : OUT STD_LOGIC;
    message430_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message430_ce0 : OUT STD_LOGIC;
    message430_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message430_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message430_we0 : OUT STD_LOGIC;
    message430_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message430_ce1 : OUT STD_LOGIC;
    message430_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message430_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message430_we1 : OUT STD_LOGIC;
    message431_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message431_ce0 : OUT STD_LOGIC;
    message431_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message431_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message431_we0 : OUT STD_LOGIC;
    message431_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message431_ce1 : OUT STD_LOGIC;
    message431_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message431_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message431_we1 : OUT STD_LOGIC;
    message432_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message432_ce0 : OUT STD_LOGIC;
    message432_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message432_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    message432_we0 : OUT STD_LOGIC;
    message432_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message432_ce1 : OUT STD_LOGIC;
    message432_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message432_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message432_we1 : OUT STD_LOGIC;
    layer_num : IN STD_LOGIC_VECTOR (2 downto 0);
    num_of_nodes : IN STD_LOGIC_VECTOR (31 downto 0);
    pes_per_node_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pes_per_node_ce0 : OUT STD_LOGIC;
    pes_per_node_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pes_per_node_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    pes_per_node_we0 : OUT STD_LOGIC;
    pes_per_node_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pes_per_node_ce1 : OUT STD_LOGIC;
    pes_per_node_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pes_per_node_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    pes_per_node_we1 : OUT STD_LOGIC;
    num_of_edges_per_pe_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_embedding_weights_V_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_we16 : OUT STD_LOGIC;
    neighbor_tables_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_0_ce0 : OUT STD_LOGIC;
    neighbor_tables_1_0_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_0_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_0_we0 : OUT STD_LOGIC;
    neighbor_tables_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_0_ce1 : OUT STD_LOGIC;
    neighbor_tables_1_0_d1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_0_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_0_we1 : OUT STD_LOGIC;
    edge_attrs_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_0_ce0 : OUT STD_LOGIC;
    edge_attrs_1_0_d0 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_0_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_0_we0 : OUT STD_LOGIC;
    edge_attrs_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_0_ce1 : OUT STD_LOGIC;
    edge_attrs_1_0_d1 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_0_q1 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_0_we1 : OUT STD_LOGIC;
    degree_tables_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_0_ce0 : OUT STD_LOGIC;
    degree_tables_1_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_0_we0 : OUT STD_LOGIC;
    degree_tables_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_0_ce1 : OUT STD_LOGIC;
    degree_tables_1_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_0_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_we16 : OUT STD_LOGIC;
    num_of_edges_per_pe_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_embedding_weights_V_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_0_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_0_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_0_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_1_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_1_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_1_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_2_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_2_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_2_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_3_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_3_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_3_we16 : OUT STD_LOGIC;
    neighbor_tables_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_1_ce0 : OUT STD_LOGIC;
    neighbor_tables_1_1_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_1_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_1_we0 : OUT STD_LOGIC;
    neighbor_tables_1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_1_ce1 : OUT STD_LOGIC;
    neighbor_tables_1_1_d1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_1_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_1_we1 : OUT STD_LOGIC;
    edge_attrs_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_1_ce0 : OUT STD_LOGIC;
    edge_attrs_1_1_d0 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_1_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_1_we0 : OUT STD_LOGIC;
    edge_attrs_1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_1_ce1 : OUT STD_LOGIC;
    edge_attrs_1_1_d1 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_1_q1 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_1_we1 : OUT STD_LOGIC;
    degree_tables_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_1_ce0 : OUT STD_LOGIC;
    degree_tables_1_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_1_we0 : OUT STD_LOGIC;
    degree_tables_1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_1_ce1 : OUT STD_LOGIC;
    degree_tables_1_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_1_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_4_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_4_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_4_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_5_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_5_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_5_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_6_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_6_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_6_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_1_7_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_1_7_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_1_7_we16 : OUT STD_LOGIC;
    num_of_edges_per_pe_1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_embedding_weights_V_2_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_0_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_0_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_0_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_1_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_1_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_1_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_2_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_2_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_2_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_3_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_3_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_3_we16 : OUT STD_LOGIC;
    neighbor_tables_1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_2_ce0 : OUT STD_LOGIC;
    neighbor_tables_1_2_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_2_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_2_we0 : OUT STD_LOGIC;
    neighbor_tables_1_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_2_ce1 : OUT STD_LOGIC;
    neighbor_tables_1_2_d1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_2_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_2_we1 : OUT STD_LOGIC;
    edge_attrs_1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_2_ce0 : OUT STD_LOGIC;
    edge_attrs_1_2_d0 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_2_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_2_we0 : OUT STD_LOGIC;
    edge_attrs_1_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_2_ce1 : OUT STD_LOGIC;
    edge_attrs_1_2_d1 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_2_q1 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_2_we1 : OUT STD_LOGIC;
    degree_tables_1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_2_ce0 : OUT STD_LOGIC;
    degree_tables_1_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_2_we0 : OUT STD_LOGIC;
    degree_tables_1_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_2_ce1 : OUT STD_LOGIC;
    degree_tables_1_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_2_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_4_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_4_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_4_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_5_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_5_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_5_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_6_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_6_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_6_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_2_7_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_2_7_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_2_7_we16 : OUT STD_LOGIC;
    num_of_edges_per_pe_1_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_embedding_weights_V_3_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_0_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_0_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_0_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_1_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_1_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_1_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_2_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_2_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_2_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_3_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_3_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_3_we16 : OUT STD_LOGIC;
    neighbor_tables_1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_3_ce0 : OUT STD_LOGIC;
    neighbor_tables_1_3_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_3_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_3_we0 : OUT STD_LOGIC;
    neighbor_tables_1_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_3_ce1 : OUT STD_LOGIC;
    neighbor_tables_1_3_d1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_3_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    neighbor_tables_1_3_we1 : OUT STD_LOGIC;
    edge_attrs_1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_3_ce0 : OUT STD_LOGIC;
    edge_attrs_1_3_d0 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_3_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_3_we0 : OUT STD_LOGIC;
    edge_attrs_1_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_3_ce1 : OUT STD_LOGIC;
    edge_attrs_1_3_d1 : OUT STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_3_q1 : IN STD_LOGIC_VECTOR (70 downto 0);
    edge_attrs_1_3_we1 : OUT STD_LOGIC;
    degree_tables_1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_3_ce0 : OUT STD_LOGIC;
    degree_tables_1_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_3_we0 : OUT STD_LOGIC;
    degree_tables_1_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_3_ce1 : OUT STD_LOGIC;
    degree_tables_1_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    degree_tables_1_3_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_4_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_4_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_4_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_5_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_5_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_5_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_6_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_6_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_6_we16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we0 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we1 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we2 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we3 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we4 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we5 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we6 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q7 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we7 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q8 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we8 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q9 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we9 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q10 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we10 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q11 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we11 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q12 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we12 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q13 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we13 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q14 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we14 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q15 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we15 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_3_7_ce16 : OUT STD_LOGIC;
    edge_embedding_weights_V_3_7_d16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_q16 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_3_7_we16 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    layer_num_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    num_of_nodes_ap_vld : IN STD_LOGIC;
    num_of_edges_per_pe_1_0_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    num_of_edges_per_pe_1_1_ap_vld : IN STD_LOGIC;
    num_of_edges_per_pe_1_2_ap_vld : IN STD_LOGIC;
    num_of_edges_per_pe_1_3_ap_vld : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of GIN_compute_graphs_message_passing_all_pes is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv71_0 : STD_LOGIC_VECTOR (70 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_layer_num_c_din : STD_LOGIC_VECTOR (2 downto 0);
    signal entry_proc_U0_layer_num_c_write : STD_LOGIC;
    signal entry_proc_U0_layer_num_c13_din : STD_LOGIC_VECTOR (2 downto 0);
    signal entry_proc_U0_layer_num_c13_write : STD_LOGIC;
    signal entry_proc_U0_layer_num_c14_din : STD_LOGIC_VECTOR (2 downto 0);
    signal entry_proc_U0_layer_num_c14_write : STD_LOGIC;
    signal entry_proc_U0_layer_num_c15_din : STD_LOGIC_VECTOR (2 downto 0);
    signal entry_proc_U0_layer_num_c15_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ap_start : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ap_done : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ap_continue : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ap_idle : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ap_ready : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ne_out_0_0_0_0_0_read : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ne_out_0_0_0_0_01_read : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ne_out_0_0_0_0_012_read : STD_LOGIC;
    signal ne_to_mp_adapter_U0_ne_out_0_0_0_0_013_read : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_01_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_01_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_05_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_05_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_06_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_06_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_07_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_07_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0216_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0216_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0217_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0217_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0218_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0218_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0219_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0219_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0220_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0220_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0221_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0221_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0222_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0222_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0223_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0223_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0331_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0331_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0332_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0332_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0333_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0333_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0334_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0334_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0335_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0335_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0336_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0336_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0337_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0337_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0338_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0338_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_047_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_047_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04746_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04746_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04747_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04747_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04748_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04748_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04749_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04749_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04750_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04750_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04751_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04751_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04752_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04752_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_048_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_048_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_049_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_049_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0410_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0410_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0411_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0411_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0412_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0412_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0413_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0413_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0414_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0414_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0415_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_0415_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_025_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_025_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02524_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02524_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02525_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02525_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02526_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02526_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02527_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02527_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02528_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02528_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02529_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02529_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02530_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_02530_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_036_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_036_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03639_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03639_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03640_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03640_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03641_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03641_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03642_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03642_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03643_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03643_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03644_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03644_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03645_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_03645_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04853_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04853_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04854_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04854_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04855_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04855_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04856_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04856_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04857_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04857_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04858_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04858_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04859_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04859_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04860_din : STD_LOGIC_VECTOR (15 downto 0);
    signal ne_to_mp_adapter_U0_mp_in_0_0_0_0_04860_write : STD_LOGIC;
    signal ne_to_mp_adapter_U0_pes_per_node_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ne_to_mp_adapter_U0_pes_per_node_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_ap_start : STD_LOGIC;
    signal message_passing_pe18_U0_ap_done : STD_LOGIC;
    signal message_passing_pe18_U0_ap_continue : STD_LOGIC;
    signal message_passing_pe18_U0_ap_idle : STD_LOGIC;
    signal message_passing_pe18_U0_ap_ready : STD_LOGIC;
    signal message_passing_pe18_U0_layer_num_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_01_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_02_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_03_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_04_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_05_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_06_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_07_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_018_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_019_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0110_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0111_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0112_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0113_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0114_read : STD_LOGIC;
    signal message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0115_read : STD_LOGIC;
    signal message_passing_pe18_U0_message_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message6_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message6_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message6_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message6_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message7_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message7_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message7_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message7_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message8_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message8_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message8_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message8_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message8_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message9_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message9_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message9_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message9_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message9_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message9_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message10_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message10_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message10_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message10_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message10_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message10_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message11_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message11_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message11_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message11_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message11_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message11_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_message12_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message12_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_message12_we0 : STD_LOGIC;
    signal message_passing_pe18_U0_message12_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe18_U0_message12_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe18_U0_message12_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_0_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_2_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_3_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_neighbor_tables_1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe18_U0_neighbor_tables_1_0_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_attrs_1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe18_U0_edge_attrs_1_0_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_degree_tables_1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe18_U0_degree_tables_1_0_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_4_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_5_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_6_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce2 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce0 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce1 : STD_LOGIC;
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_7_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce2 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal message_passing_pe19_U0_ap_start : STD_LOGIC;
    signal message_passing_pe19_U0_ap_done : STD_LOGIC;
    signal message_passing_pe19_U0_ap_continue : STD_LOGIC;
    signal message_passing_pe19_U0_ap_idle : STD_LOGIC;
    signal message_passing_pe19_U0_ap_ready : STD_LOGIC;
    signal message_passing_pe19_U0_layer_num_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_012_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01216_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01217_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01218_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01219_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01220_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01221_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01222_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_013_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01323_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01324_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01325_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01326_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01327_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01328_read : STD_LOGIC;
    signal message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01329_read : STD_LOGIC;
    signal message_passing_pe19_U0_message4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message4_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message4_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message4_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message413_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message413_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message413_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message413_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message413_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message413_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message414_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message414_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message414_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message414_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message414_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message414_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message415_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message415_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message415_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message415_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message415_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message415_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message416_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message416_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message416_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message416_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message416_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message416_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message417_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message417_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message417_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message417_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message417_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message417_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message418_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message418_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message418_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message418_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message418_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message418_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_message419_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message419_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_message419_we0 : STD_LOGIC;
    signal message_passing_pe19_U0_message419_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe19_U0_message419_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe19_U0_message419_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_0_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_2_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_3_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_neighbor_tables_1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe19_U0_neighbor_tables_1_1_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_attrs_1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe19_U0_edge_attrs_1_1_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_degree_tables_1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe19_U0_degree_tables_1_1_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_4_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_5_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_6_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce2 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce0 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce1 : STD_LOGIC;
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_7_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_ap_start : STD_LOGIC;
    signal message_passing_pe20_U0_ap_done : STD_LOGIC;
    signal message_passing_pe20_U0_ap_continue : STD_LOGIC;
    signal message_passing_pe20_U0_ap_idle : STD_LOGIC;
    signal message_passing_pe20_U0_ap_ready : STD_LOGIC;
    signal message_passing_pe20_U0_layer_num_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0230_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0231_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0232_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0233_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0234_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0235_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0236_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0237_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_024_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02438_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02439_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02440_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02441_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02442_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02443_read : STD_LOGIC;
    signal message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02444_read : STD_LOGIC;
    signal message_passing_pe20_U0_message5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message5_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message5_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message5_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message520_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message520_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message520_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message520_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message520_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message520_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message521_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message521_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message521_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message521_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message521_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message521_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message522_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message522_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message522_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message522_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message522_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message522_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message523_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message523_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message523_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message523_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message523_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message523_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message524_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message524_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message524_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message524_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message524_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message524_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message525_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message525_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message525_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message525_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message525_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message525_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_message526_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message526_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_message526_we0 : STD_LOGIC;
    signal message_passing_pe20_U0_message526_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe20_U0_message526_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe20_U0_message526_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_0_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_2_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_3_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_neighbor_tables_1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe20_U0_neighbor_tables_1_2_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_attrs_1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe20_U0_edge_attrs_1_2_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_degree_tables_1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe20_U0_degree_tables_1_2_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_4_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_5_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_6_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce2 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce0 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce1 : STD_LOGIC;
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_7_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_ap_start : STD_LOGIC;
    signal message_passing_pe21_U0_ap_done : STD_LOGIC;
    signal message_passing_pe21_U0_ap_continue : STD_LOGIC;
    signal message_passing_pe21_U0_ap_idle : STD_LOGIC;
    signal message_passing_pe21_U0_ap_ready : STD_LOGIC;
    signal message_passing_pe21_U0_layer_num_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0345_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0346_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0347_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0348_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0349_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0350_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0351_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0352_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_035_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03553_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03554_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03555_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03556_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03557_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03558_read : STD_LOGIC;
    signal message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03559_read : STD_LOGIC;
    signal message_passing_pe21_U0_message627_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message627_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message627_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message627_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message627_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message627_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message628_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message628_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message628_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message628_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message628_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message628_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message629_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message629_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message629_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message629_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message629_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message629_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message630_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message630_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message630_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message630_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message630_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message630_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message631_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message631_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message631_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message631_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message631_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message631_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message632_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message632_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message632_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message632_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message632_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message632_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message633_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message633_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message633_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message633_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message633_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message633_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_message634_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message634_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_message634_we0 : STD_LOGIC;
    signal message_passing_pe21_U0_message634_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_passing_pe21_U0_message634_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_passing_pe21_U0_message634_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_0_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_2_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_3_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_neighbor_tables_1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe21_U0_neighbor_tables_1_3_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_attrs_1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe21_U0_edge_attrs_1_3_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_degree_tables_1_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_passing_pe21_U0_degree_tables_1_3_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_4_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_5_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_6_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce2 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce0 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce1 : STD_LOGIC;
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_7_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce2 : STD_LOGIC;
    signal layer_num_c_full_n : STD_LOGIC;
    signal layer_num_c_dout : STD_LOGIC_VECTOR (2 downto 0);
    signal layer_num_c_empty_n : STD_LOGIC;
    signal layer_num_c13_full_n : STD_LOGIC;
    signal layer_num_c13_dout : STD_LOGIC_VECTOR (2 downto 0);
    signal layer_num_c13_empty_n : STD_LOGIC;
    signal layer_num_c14_full_n : STD_LOGIC;
    signal layer_num_c14_dout : STD_LOGIC_VECTOR (2 downto 0);
    signal layer_num_c14_empty_n : STD_LOGIC;
    signal layer_num_c15_full_n : STD_LOGIC;
    signal layer_num_c15_dout : STD_LOGIC_VECTOR (2 downto 0);
    signal layer_num_c15_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_0_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_0_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_0_1_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_0_1_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_0_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_0_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_1_1_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_1_1_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_0_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_0_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_2_1_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_2_1_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_0_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_0_7_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_0_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_0_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_1_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_1_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_2_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_2_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_3_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_3_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_4_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_4_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_5_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_5_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_6_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_6_empty_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_7_full_n : STD_LOGIC;
    signal mp_in_V_M_elems_V_3_1_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_in_V_M_elems_V_3_1_7_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_ne_to_mp_adapter_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_ne_to_mp_adapter_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_message_passing_pe18_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_message_passing_pe18_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_message_passing_pe19_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_message_passing_pe19_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_message_passing_pe20_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_message_passing_pe20_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_message_passing_pe21_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_message_passing_pe21_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component GIN_compute_graphs_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_num : IN STD_LOGIC_VECTOR (2 downto 0);
        layer_num_c_din : OUT STD_LOGIC_VECTOR (2 downto 0);
        layer_num_c_full_n : IN STD_LOGIC;
        layer_num_c_write : OUT STD_LOGIC;
        layer_num_c13_din : OUT STD_LOGIC_VECTOR (2 downto 0);
        layer_num_c13_full_n : IN STD_LOGIC;
        layer_num_c13_write : OUT STD_LOGIC;
        layer_num_c14_din : OUT STD_LOGIC_VECTOR (2 downto 0);
        layer_num_c14_full_n : IN STD_LOGIC;
        layer_num_c14_write : OUT STD_LOGIC;
        layer_num_c15_din : OUT STD_LOGIC_VECTOR (2 downto 0);
        layer_num_c15_full_n : IN STD_LOGIC;
        layer_num_c15_write : OUT STD_LOGIC );
    end component;


    component GIN_compute_graphs_ne_to_mp_adapter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ne_out_0_0_0_0_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        ne_out_0_0_0_0_0_empty_n : IN STD_LOGIC;
        ne_out_0_0_0_0_0_read : OUT STD_LOGIC;
        ne_out_0_0_0_0_01_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        ne_out_0_0_0_0_01_empty_n : IN STD_LOGIC;
        ne_out_0_0_0_0_01_read : OUT STD_LOGIC;
        ne_out_0_0_0_0_012_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        ne_out_0_0_0_0_012_empty_n : IN STD_LOGIC;
        ne_out_0_0_0_0_012_read : OUT STD_LOGIC;
        ne_out_0_0_0_0_013_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        ne_out_0_0_0_0_013_empty_n : IN STD_LOGIC;
        ne_out_0_0_0_0_013_read : OUT STD_LOGIC;
        mp_in_0_0_0_0_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_01_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_01_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_01_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_05_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_05_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_05_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_06_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_06_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_06_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_07_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_07_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_07_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0216_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0216_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0216_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0217_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0217_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0217_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0218_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0218_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0218_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0219_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0219_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0219_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0220_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0220_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0220_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0221_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0221_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0221_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0222_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0222_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0222_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0223_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0223_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0223_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0331_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0331_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0331_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0332_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0332_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0332_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0333_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0333_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0333_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0334_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0334_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0334_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0335_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0335_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0335_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0336_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0336_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0336_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0337_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0337_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0337_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0338_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0338_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0338_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_047_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_047_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_047_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04746_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04746_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04746_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04747_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04747_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04747_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04748_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04748_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04748_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04749_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04749_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04749_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04750_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04750_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04750_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04751_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04751_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04751_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04752_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04752_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04752_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_048_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_048_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_048_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_049_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_049_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_049_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0410_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0410_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0410_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0411_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0411_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0411_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0412_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0412_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0412_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0413_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0413_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0413_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0414_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0414_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0414_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_0415_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_0415_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_0415_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_025_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_025_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_025_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02524_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02524_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02524_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02525_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02525_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02525_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02526_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02526_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02526_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02527_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02527_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02527_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02528_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02528_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02528_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02529_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02529_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02529_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_02530_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_02530_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_02530_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_036_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_036_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_036_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03639_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03639_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03639_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03640_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03640_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03640_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03641_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03641_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03641_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03642_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03642_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03642_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03643_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03643_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03643_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03644_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03644_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03644_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_03645_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_03645_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_03645_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04853_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04853_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04853_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04854_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04854_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04854_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04855_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04855_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04855_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04856_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04856_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04856_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04857_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04857_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04857_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04858_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04858_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04858_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04859_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04859_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04859_write : OUT STD_LOGIC;
        mp_in_0_0_0_0_04860_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        mp_in_0_0_0_0_04860_full_n : IN STD_LOGIC;
        mp_in_0_0_0_0_04860_write : OUT STD_LOGIC;
        num_of_nodes : IN STD_LOGIC_VECTOR (31 downto 0);
        pes_per_node_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pes_per_node_ce0 : OUT STD_LOGIC;
        pes_per_node_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component GIN_compute_graphs_message_passing_pe18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_num_dout : IN STD_LOGIC_VECTOR (2 downto 0);
        layer_num_empty_n : IN STD_LOGIC;
        layer_num_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_04_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_04_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_04_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_05_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_05_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_05_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_06_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_06_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_06_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_07_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_07_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_07_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_018_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_018_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_018_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_019_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_019_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_019_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0110_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0110_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0110_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0111_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0111_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0111_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0112_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0112_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0112_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0113_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0113_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0113_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0114_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0114_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0114_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0115_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0115_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0115_read : OUT STD_LOGIC;
        message_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message_ce0 : OUT STD_LOGIC;
        message_we0 : OUT STD_LOGIC;
        message_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message_ce1 : OUT STD_LOGIC;
        message_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message6_ce0 : OUT STD_LOGIC;
        message6_we0 : OUT STD_LOGIC;
        message6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message6_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message6_ce1 : OUT STD_LOGIC;
        message6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message7_ce0 : OUT STD_LOGIC;
        message7_we0 : OUT STD_LOGIC;
        message7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message7_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message7_ce1 : OUT STD_LOGIC;
        message7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message8_ce0 : OUT STD_LOGIC;
        message8_we0 : OUT STD_LOGIC;
        message8_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message8_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message8_ce1 : OUT STD_LOGIC;
        message8_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message9_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message9_ce0 : OUT STD_LOGIC;
        message9_we0 : OUT STD_LOGIC;
        message9_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message9_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message9_ce1 : OUT STD_LOGIC;
        message9_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message10_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message10_ce0 : OUT STD_LOGIC;
        message10_we0 : OUT STD_LOGIC;
        message10_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message10_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message10_ce1 : OUT STD_LOGIC;
        message10_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message11_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message11_ce0 : OUT STD_LOGIC;
        message11_we0 : OUT STD_LOGIC;
        message11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message11_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message11_ce1 : OUT STD_LOGIC;
        message11_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message12_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message12_ce0 : OUT STD_LOGIC;
        message12_we0 : OUT STD_LOGIC;
        message12_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message12_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message12_ce1 : OUT STD_LOGIC;
        message12_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        num_of_edges_per_pe_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_embedding_weights_V_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_0_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_0_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_0_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_1_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_1_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_1_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_2_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_2_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_2_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_3_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_3_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_3_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        neighbor_tables_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        neighbor_tables_1_0_ce0 : OUT STD_LOGIC;
        neighbor_tables_1_0_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        edge_attrs_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        edge_attrs_1_0_ce0 : OUT STD_LOGIC;
        edge_attrs_1_0_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
        degree_tables_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        degree_tables_1_0_ce0 : OUT STD_LOGIC;
        degree_tables_1_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_embedding_weights_V_0_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_4_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_4_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_4_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_5_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_5_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_5_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_6_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_6_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_6_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_7_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_7_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_0_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_0_7_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_0_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_message_passing_pe19 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_num_dout : IN STD_LOGIC_VECTOR (2 downto 0);
        layer_num_empty_n : IN STD_LOGIC;
        layer_num_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_012_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_012_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_012_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01216_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01216_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01216_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01217_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01217_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01217_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01218_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01218_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01218_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01219_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01219_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01219_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01220_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01220_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01220_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01221_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01221_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01221_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01222_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01222_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01222_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_013_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_013_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_013_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01323_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01323_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01323_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01324_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01324_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01324_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01325_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01325_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01325_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01326_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01326_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01326_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01327_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01327_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01327_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01328_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01328_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01328_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_01329_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_01329_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_01329_read : OUT STD_LOGIC;
        message4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message4_ce0 : OUT STD_LOGIC;
        message4_we0 : OUT STD_LOGIC;
        message4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message4_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message4_ce1 : OUT STD_LOGIC;
        message4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message413_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message413_ce0 : OUT STD_LOGIC;
        message413_we0 : OUT STD_LOGIC;
        message413_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message413_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message413_ce1 : OUT STD_LOGIC;
        message413_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message414_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message414_ce0 : OUT STD_LOGIC;
        message414_we0 : OUT STD_LOGIC;
        message414_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message414_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message414_ce1 : OUT STD_LOGIC;
        message414_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message415_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message415_ce0 : OUT STD_LOGIC;
        message415_we0 : OUT STD_LOGIC;
        message415_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message415_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message415_ce1 : OUT STD_LOGIC;
        message415_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message416_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message416_ce0 : OUT STD_LOGIC;
        message416_we0 : OUT STD_LOGIC;
        message416_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message416_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message416_ce1 : OUT STD_LOGIC;
        message416_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message417_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message417_ce0 : OUT STD_LOGIC;
        message417_we0 : OUT STD_LOGIC;
        message417_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message417_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message417_ce1 : OUT STD_LOGIC;
        message417_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message418_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message418_ce0 : OUT STD_LOGIC;
        message418_we0 : OUT STD_LOGIC;
        message418_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message418_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message418_ce1 : OUT STD_LOGIC;
        message418_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message419_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message419_ce0 : OUT STD_LOGIC;
        message419_we0 : OUT STD_LOGIC;
        message419_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message419_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message419_ce1 : OUT STD_LOGIC;
        message419_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        num_of_edges_per_pe_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_embedding_weights_V_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_0_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_0_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_0_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_1_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_1_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_1_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_2_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_2_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_2_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_3_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_3_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_3_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        neighbor_tables_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        neighbor_tables_1_1_ce0 : OUT STD_LOGIC;
        neighbor_tables_1_1_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        edge_attrs_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        edge_attrs_1_1_ce0 : OUT STD_LOGIC;
        edge_attrs_1_1_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
        degree_tables_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        degree_tables_1_1_ce0 : OUT STD_LOGIC;
        degree_tables_1_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_embedding_weights_V_1_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_4_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_4_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_4_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_5_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_5_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_5_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_6_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_6_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_6_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_7_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_7_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_1_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_1_7_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_1_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_message_passing_pe20 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_num_dout : IN STD_LOGIC_VECTOR (2 downto 0);
        layer_num_empty_n : IN STD_LOGIC;
        layer_num_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0230_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0230_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0230_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0231_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0231_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0231_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0232_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0232_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0232_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0233_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0233_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0233_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0234_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0234_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0234_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0235_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0235_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0235_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0236_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0236_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0236_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0237_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0237_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0237_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_024_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_024_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_024_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02438_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02438_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02438_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02439_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02439_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02439_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02440_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02440_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02440_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02441_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02441_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02441_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02442_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02442_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02442_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02443_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02443_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02443_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_02444_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_02444_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_02444_read : OUT STD_LOGIC;
        message5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message5_ce0 : OUT STD_LOGIC;
        message5_we0 : OUT STD_LOGIC;
        message5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message5_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message5_ce1 : OUT STD_LOGIC;
        message5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message520_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message520_ce0 : OUT STD_LOGIC;
        message520_we0 : OUT STD_LOGIC;
        message520_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message520_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message520_ce1 : OUT STD_LOGIC;
        message520_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message521_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message521_ce0 : OUT STD_LOGIC;
        message521_we0 : OUT STD_LOGIC;
        message521_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message521_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message521_ce1 : OUT STD_LOGIC;
        message521_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message522_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message522_ce0 : OUT STD_LOGIC;
        message522_we0 : OUT STD_LOGIC;
        message522_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message522_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message522_ce1 : OUT STD_LOGIC;
        message522_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message523_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message523_ce0 : OUT STD_LOGIC;
        message523_we0 : OUT STD_LOGIC;
        message523_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message523_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message523_ce1 : OUT STD_LOGIC;
        message523_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message524_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message524_ce0 : OUT STD_LOGIC;
        message524_we0 : OUT STD_LOGIC;
        message524_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message524_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message524_ce1 : OUT STD_LOGIC;
        message524_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message525_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message525_ce0 : OUT STD_LOGIC;
        message525_we0 : OUT STD_LOGIC;
        message525_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message525_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message525_ce1 : OUT STD_LOGIC;
        message525_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message526_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message526_ce0 : OUT STD_LOGIC;
        message526_we0 : OUT STD_LOGIC;
        message526_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message526_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message526_ce1 : OUT STD_LOGIC;
        message526_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        num_of_edges_per_pe_1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_embedding_weights_V_2_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_0_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_0_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_0_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_1_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_1_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_1_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_2_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_2_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_2_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_3_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_3_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_3_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        neighbor_tables_1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        neighbor_tables_1_2_ce0 : OUT STD_LOGIC;
        neighbor_tables_1_2_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        edge_attrs_1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        edge_attrs_1_2_ce0 : OUT STD_LOGIC;
        edge_attrs_1_2_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
        degree_tables_1_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        degree_tables_1_2_ce0 : OUT STD_LOGIC;
        degree_tables_1_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_embedding_weights_V_2_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_4_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_4_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_4_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_5_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_5_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_5_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_6_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_6_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_6_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_7_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_7_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_2_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_2_7_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_2_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_message_passing_pe21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_num_dout : IN STD_LOGIC_VECTOR (2 downto 0);
        layer_num_empty_n : IN STD_LOGIC;
        layer_num_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0345_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0345_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0345_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0346_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0346_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0346_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0347_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0347_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0347_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0348_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0348_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0348_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0349_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0349_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0349_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0350_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0350_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0350_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0351_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0351_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0351_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_0352_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_0352_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_0352_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_035_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_035_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_035_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03553_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03553_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03553_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03554_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03554_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03554_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03555_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03555_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03555_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03556_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03556_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03556_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03557_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03557_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03557_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03558_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03558_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03558_read : OUT STD_LOGIC;
        embeddings_per_node_0_0_0_0_03559_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_per_node_0_0_0_0_03559_empty_n : IN STD_LOGIC;
        embeddings_per_node_0_0_0_0_03559_read : OUT STD_LOGIC;
        message627_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message627_ce0 : OUT STD_LOGIC;
        message627_we0 : OUT STD_LOGIC;
        message627_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message627_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message627_ce1 : OUT STD_LOGIC;
        message627_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message628_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message628_ce0 : OUT STD_LOGIC;
        message628_we0 : OUT STD_LOGIC;
        message628_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message628_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message628_ce1 : OUT STD_LOGIC;
        message628_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message629_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message629_ce0 : OUT STD_LOGIC;
        message629_we0 : OUT STD_LOGIC;
        message629_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message629_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message629_ce1 : OUT STD_LOGIC;
        message629_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message630_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message630_ce0 : OUT STD_LOGIC;
        message630_we0 : OUT STD_LOGIC;
        message630_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message630_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message630_ce1 : OUT STD_LOGIC;
        message630_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message631_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message631_ce0 : OUT STD_LOGIC;
        message631_we0 : OUT STD_LOGIC;
        message631_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message631_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message631_ce1 : OUT STD_LOGIC;
        message631_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message632_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message632_ce0 : OUT STD_LOGIC;
        message632_we0 : OUT STD_LOGIC;
        message632_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message632_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message632_ce1 : OUT STD_LOGIC;
        message632_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message633_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message633_ce0 : OUT STD_LOGIC;
        message633_we0 : OUT STD_LOGIC;
        message633_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message633_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message633_ce1 : OUT STD_LOGIC;
        message633_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        message634_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message634_ce0 : OUT STD_LOGIC;
        message634_we0 : OUT STD_LOGIC;
        message634_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message634_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        message634_ce1 : OUT STD_LOGIC;
        message634_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        num_of_edges_per_pe_1_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_embedding_weights_V_3_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_0_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_0_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_0_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_1_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_1_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_1_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_2_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_2_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_2_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_3_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_3_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_3_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        neighbor_tables_1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        neighbor_tables_1_3_ce0 : OUT STD_LOGIC;
        neighbor_tables_1_3_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        edge_attrs_1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        edge_attrs_1_3_ce0 : OUT STD_LOGIC;
        edge_attrs_1_3_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
        degree_tables_1_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        degree_tables_1_3_ce0 : OUT STD_LOGIC;
        degree_tables_1_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_embedding_weights_V_3_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_4_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_4_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_4_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_5_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_5_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_5_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_6_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_6_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_6_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_7_ce0 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_7_ce1 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        edge_embedding_weights_V_3_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_embedding_weights_V_3_7_ce2 : OUT STD_LOGIC;
        edge_embedding_weights_V_3_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_fifo_w3_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (2 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component GIN_compute_graphs_fifo_w16_d260_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc_U0 : component GIN_compute_graphs_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc_U0_ap_start,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        layer_num => layer_num,
        layer_num_c_din => entry_proc_U0_layer_num_c_din,
        layer_num_c_full_n => layer_num_c_full_n,
        layer_num_c_write => entry_proc_U0_layer_num_c_write,
        layer_num_c13_din => entry_proc_U0_layer_num_c13_din,
        layer_num_c13_full_n => layer_num_c13_full_n,
        layer_num_c13_write => entry_proc_U0_layer_num_c13_write,
        layer_num_c14_din => entry_proc_U0_layer_num_c14_din,
        layer_num_c14_full_n => layer_num_c14_full_n,
        layer_num_c14_write => entry_proc_U0_layer_num_c14_write,
        layer_num_c15_din => entry_proc_U0_layer_num_c15_din,
        layer_num_c15_full_n => layer_num_c15_full_n,
        layer_num_c15_write => entry_proc_U0_layer_num_c15_write);

    ne_to_mp_adapter_U0 : component GIN_compute_graphs_ne_to_mp_adapter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ne_to_mp_adapter_U0_ap_start,
        ap_done => ne_to_mp_adapter_U0_ap_done,
        ap_continue => ne_to_mp_adapter_U0_ap_continue,
        ap_idle => ne_to_mp_adapter_U0_ap_idle,
        ap_ready => ne_to_mp_adapter_U0_ap_ready,
        ne_out_0_0_0_0_0_dout => ne_out_0_0_0_0_0_dout,
        ne_out_0_0_0_0_0_empty_n => ne_out_0_0_0_0_0_empty_n,
        ne_out_0_0_0_0_0_read => ne_to_mp_adapter_U0_ne_out_0_0_0_0_0_read,
        ne_out_0_0_0_0_01_dout => ne_out_0_0_0_0_01_dout,
        ne_out_0_0_0_0_01_empty_n => ne_out_0_0_0_0_01_empty_n,
        ne_out_0_0_0_0_01_read => ne_to_mp_adapter_U0_ne_out_0_0_0_0_01_read,
        ne_out_0_0_0_0_012_dout => ne_out_0_0_0_0_012_dout,
        ne_out_0_0_0_0_012_empty_n => ne_out_0_0_0_0_012_empty_n,
        ne_out_0_0_0_0_012_read => ne_to_mp_adapter_U0_ne_out_0_0_0_0_012_read,
        ne_out_0_0_0_0_013_dout => ne_out_0_0_0_0_013_dout,
        ne_out_0_0_0_0_013_empty_n => ne_out_0_0_0_0_013_empty_n,
        ne_out_0_0_0_0_013_read => ne_to_mp_adapter_U0_ne_out_0_0_0_0_013_read,
        mp_in_0_0_0_0_0_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0_din,
        mp_in_0_0_0_0_0_full_n => mp_in_V_M_elems_V_0_0_0_full_n,
        mp_in_0_0_0_0_0_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0_write,
        mp_in_0_0_0_0_01_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_01_din,
        mp_in_0_0_0_0_01_full_n => mp_in_V_M_elems_V_0_0_1_full_n,
        mp_in_0_0_0_0_01_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_01_write,
        mp_in_0_0_0_0_02_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02_din,
        mp_in_0_0_0_0_02_full_n => mp_in_V_M_elems_V_0_0_2_full_n,
        mp_in_0_0_0_0_02_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02_write,
        mp_in_0_0_0_0_03_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03_din,
        mp_in_0_0_0_0_03_full_n => mp_in_V_M_elems_V_0_0_3_full_n,
        mp_in_0_0_0_0_03_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03_write,
        mp_in_0_0_0_0_04_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04_din,
        mp_in_0_0_0_0_04_full_n => mp_in_V_M_elems_V_0_0_4_full_n,
        mp_in_0_0_0_0_04_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04_write,
        mp_in_0_0_0_0_05_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_05_din,
        mp_in_0_0_0_0_05_full_n => mp_in_V_M_elems_V_0_0_5_full_n,
        mp_in_0_0_0_0_05_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_05_write,
        mp_in_0_0_0_0_06_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_06_din,
        mp_in_0_0_0_0_06_full_n => mp_in_V_M_elems_V_0_0_6_full_n,
        mp_in_0_0_0_0_06_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_06_write,
        mp_in_0_0_0_0_07_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_07_din,
        mp_in_0_0_0_0_07_full_n => mp_in_V_M_elems_V_0_0_7_full_n,
        mp_in_0_0_0_0_07_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_07_write,
        mp_in_0_0_0_0_0216_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0216_din,
        mp_in_0_0_0_0_0216_full_n => mp_in_V_M_elems_V_1_0_0_full_n,
        mp_in_0_0_0_0_0216_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0216_write,
        mp_in_0_0_0_0_0217_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0217_din,
        mp_in_0_0_0_0_0217_full_n => mp_in_V_M_elems_V_1_0_1_full_n,
        mp_in_0_0_0_0_0217_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0217_write,
        mp_in_0_0_0_0_0218_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0218_din,
        mp_in_0_0_0_0_0218_full_n => mp_in_V_M_elems_V_1_0_2_full_n,
        mp_in_0_0_0_0_0218_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0218_write,
        mp_in_0_0_0_0_0219_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0219_din,
        mp_in_0_0_0_0_0219_full_n => mp_in_V_M_elems_V_1_0_3_full_n,
        mp_in_0_0_0_0_0219_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0219_write,
        mp_in_0_0_0_0_0220_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0220_din,
        mp_in_0_0_0_0_0220_full_n => mp_in_V_M_elems_V_1_0_4_full_n,
        mp_in_0_0_0_0_0220_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0220_write,
        mp_in_0_0_0_0_0221_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0221_din,
        mp_in_0_0_0_0_0221_full_n => mp_in_V_M_elems_V_1_0_5_full_n,
        mp_in_0_0_0_0_0221_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0221_write,
        mp_in_0_0_0_0_0222_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0222_din,
        mp_in_0_0_0_0_0222_full_n => mp_in_V_M_elems_V_1_0_6_full_n,
        mp_in_0_0_0_0_0222_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0222_write,
        mp_in_0_0_0_0_0223_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0223_din,
        mp_in_0_0_0_0_0223_full_n => mp_in_V_M_elems_V_1_0_7_full_n,
        mp_in_0_0_0_0_0223_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0223_write,
        mp_in_0_0_0_0_0331_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0331_din,
        mp_in_0_0_0_0_0331_full_n => mp_in_V_M_elems_V_2_0_0_full_n,
        mp_in_0_0_0_0_0331_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0331_write,
        mp_in_0_0_0_0_0332_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0332_din,
        mp_in_0_0_0_0_0332_full_n => mp_in_V_M_elems_V_2_0_1_full_n,
        mp_in_0_0_0_0_0332_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0332_write,
        mp_in_0_0_0_0_0333_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0333_din,
        mp_in_0_0_0_0_0333_full_n => mp_in_V_M_elems_V_2_0_2_full_n,
        mp_in_0_0_0_0_0333_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0333_write,
        mp_in_0_0_0_0_0334_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0334_din,
        mp_in_0_0_0_0_0334_full_n => mp_in_V_M_elems_V_2_0_3_full_n,
        mp_in_0_0_0_0_0334_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0334_write,
        mp_in_0_0_0_0_0335_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0335_din,
        mp_in_0_0_0_0_0335_full_n => mp_in_V_M_elems_V_2_0_4_full_n,
        mp_in_0_0_0_0_0335_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0335_write,
        mp_in_0_0_0_0_0336_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0336_din,
        mp_in_0_0_0_0_0336_full_n => mp_in_V_M_elems_V_2_0_5_full_n,
        mp_in_0_0_0_0_0336_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0336_write,
        mp_in_0_0_0_0_0337_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0337_din,
        mp_in_0_0_0_0_0337_full_n => mp_in_V_M_elems_V_2_0_6_full_n,
        mp_in_0_0_0_0_0337_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0337_write,
        mp_in_0_0_0_0_0338_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0338_din,
        mp_in_0_0_0_0_0338_full_n => mp_in_V_M_elems_V_2_0_7_full_n,
        mp_in_0_0_0_0_0338_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0338_write,
        mp_in_0_0_0_0_047_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_047_din,
        mp_in_0_0_0_0_047_full_n => mp_in_V_M_elems_V_3_0_0_full_n,
        mp_in_0_0_0_0_047_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_047_write,
        mp_in_0_0_0_0_04746_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04746_din,
        mp_in_0_0_0_0_04746_full_n => mp_in_V_M_elems_V_3_0_1_full_n,
        mp_in_0_0_0_0_04746_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04746_write,
        mp_in_0_0_0_0_04747_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04747_din,
        mp_in_0_0_0_0_04747_full_n => mp_in_V_M_elems_V_3_0_2_full_n,
        mp_in_0_0_0_0_04747_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04747_write,
        mp_in_0_0_0_0_04748_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04748_din,
        mp_in_0_0_0_0_04748_full_n => mp_in_V_M_elems_V_3_0_3_full_n,
        mp_in_0_0_0_0_04748_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04748_write,
        mp_in_0_0_0_0_04749_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04749_din,
        mp_in_0_0_0_0_04749_full_n => mp_in_V_M_elems_V_3_0_4_full_n,
        mp_in_0_0_0_0_04749_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04749_write,
        mp_in_0_0_0_0_04750_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04750_din,
        mp_in_0_0_0_0_04750_full_n => mp_in_V_M_elems_V_3_0_5_full_n,
        mp_in_0_0_0_0_04750_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04750_write,
        mp_in_0_0_0_0_04751_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04751_din,
        mp_in_0_0_0_0_04751_full_n => mp_in_V_M_elems_V_3_0_6_full_n,
        mp_in_0_0_0_0_04751_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04751_write,
        mp_in_0_0_0_0_04752_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04752_din,
        mp_in_0_0_0_0_04752_full_n => mp_in_V_M_elems_V_3_0_7_full_n,
        mp_in_0_0_0_0_04752_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04752_write,
        mp_in_0_0_0_0_048_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_048_din,
        mp_in_0_0_0_0_048_full_n => mp_in_V_M_elems_V_0_1_0_full_n,
        mp_in_0_0_0_0_048_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_048_write,
        mp_in_0_0_0_0_049_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_049_din,
        mp_in_0_0_0_0_049_full_n => mp_in_V_M_elems_V_0_1_1_full_n,
        mp_in_0_0_0_0_049_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_049_write,
        mp_in_0_0_0_0_0410_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0410_din,
        mp_in_0_0_0_0_0410_full_n => mp_in_V_M_elems_V_0_1_2_full_n,
        mp_in_0_0_0_0_0410_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0410_write,
        mp_in_0_0_0_0_0411_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0411_din,
        mp_in_0_0_0_0_0411_full_n => mp_in_V_M_elems_V_0_1_3_full_n,
        mp_in_0_0_0_0_0411_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0411_write,
        mp_in_0_0_0_0_0412_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0412_din,
        mp_in_0_0_0_0_0412_full_n => mp_in_V_M_elems_V_0_1_4_full_n,
        mp_in_0_0_0_0_0412_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0412_write,
        mp_in_0_0_0_0_0413_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0413_din,
        mp_in_0_0_0_0_0413_full_n => mp_in_V_M_elems_V_0_1_5_full_n,
        mp_in_0_0_0_0_0413_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0413_write,
        mp_in_0_0_0_0_0414_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0414_din,
        mp_in_0_0_0_0_0414_full_n => mp_in_V_M_elems_V_0_1_6_full_n,
        mp_in_0_0_0_0_0414_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0414_write,
        mp_in_0_0_0_0_0415_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0415_din,
        mp_in_0_0_0_0_0415_full_n => mp_in_V_M_elems_V_0_1_7_full_n,
        mp_in_0_0_0_0_0415_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0415_write,
        mp_in_0_0_0_0_025_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_025_din,
        mp_in_0_0_0_0_025_full_n => mp_in_V_M_elems_V_1_1_0_full_n,
        mp_in_0_0_0_0_025_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_025_write,
        mp_in_0_0_0_0_02524_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02524_din,
        mp_in_0_0_0_0_02524_full_n => mp_in_V_M_elems_V_1_1_1_full_n,
        mp_in_0_0_0_0_02524_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02524_write,
        mp_in_0_0_0_0_02525_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02525_din,
        mp_in_0_0_0_0_02525_full_n => mp_in_V_M_elems_V_1_1_2_full_n,
        mp_in_0_0_0_0_02525_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02525_write,
        mp_in_0_0_0_0_02526_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02526_din,
        mp_in_0_0_0_0_02526_full_n => mp_in_V_M_elems_V_1_1_3_full_n,
        mp_in_0_0_0_0_02526_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02526_write,
        mp_in_0_0_0_0_02527_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02527_din,
        mp_in_0_0_0_0_02527_full_n => mp_in_V_M_elems_V_1_1_4_full_n,
        mp_in_0_0_0_0_02527_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02527_write,
        mp_in_0_0_0_0_02528_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02528_din,
        mp_in_0_0_0_0_02528_full_n => mp_in_V_M_elems_V_1_1_5_full_n,
        mp_in_0_0_0_0_02528_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02528_write,
        mp_in_0_0_0_0_02529_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02529_din,
        mp_in_0_0_0_0_02529_full_n => mp_in_V_M_elems_V_1_1_6_full_n,
        mp_in_0_0_0_0_02529_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02529_write,
        mp_in_0_0_0_0_02530_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02530_din,
        mp_in_0_0_0_0_02530_full_n => mp_in_V_M_elems_V_1_1_7_full_n,
        mp_in_0_0_0_0_02530_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02530_write,
        mp_in_0_0_0_0_036_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_036_din,
        mp_in_0_0_0_0_036_full_n => mp_in_V_M_elems_V_2_1_0_full_n,
        mp_in_0_0_0_0_036_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_036_write,
        mp_in_0_0_0_0_03639_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03639_din,
        mp_in_0_0_0_0_03639_full_n => mp_in_V_M_elems_V_2_1_1_full_n,
        mp_in_0_0_0_0_03639_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03639_write,
        mp_in_0_0_0_0_03640_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03640_din,
        mp_in_0_0_0_0_03640_full_n => mp_in_V_M_elems_V_2_1_2_full_n,
        mp_in_0_0_0_0_03640_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03640_write,
        mp_in_0_0_0_0_03641_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03641_din,
        mp_in_0_0_0_0_03641_full_n => mp_in_V_M_elems_V_2_1_3_full_n,
        mp_in_0_0_0_0_03641_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03641_write,
        mp_in_0_0_0_0_03642_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03642_din,
        mp_in_0_0_0_0_03642_full_n => mp_in_V_M_elems_V_2_1_4_full_n,
        mp_in_0_0_0_0_03642_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03642_write,
        mp_in_0_0_0_0_03643_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03643_din,
        mp_in_0_0_0_0_03643_full_n => mp_in_V_M_elems_V_2_1_5_full_n,
        mp_in_0_0_0_0_03643_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03643_write,
        mp_in_0_0_0_0_03644_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03644_din,
        mp_in_0_0_0_0_03644_full_n => mp_in_V_M_elems_V_2_1_6_full_n,
        mp_in_0_0_0_0_03644_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03644_write,
        mp_in_0_0_0_0_03645_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03645_din,
        mp_in_0_0_0_0_03645_full_n => mp_in_V_M_elems_V_2_1_7_full_n,
        mp_in_0_0_0_0_03645_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03645_write,
        mp_in_0_0_0_0_04853_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04853_din,
        mp_in_0_0_0_0_04853_full_n => mp_in_V_M_elems_V_3_1_0_full_n,
        mp_in_0_0_0_0_04853_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04853_write,
        mp_in_0_0_0_0_04854_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04854_din,
        mp_in_0_0_0_0_04854_full_n => mp_in_V_M_elems_V_3_1_1_full_n,
        mp_in_0_0_0_0_04854_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04854_write,
        mp_in_0_0_0_0_04855_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04855_din,
        mp_in_0_0_0_0_04855_full_n => mp_in_V_M_elems_V_3_1_2_full_n,
        mp_in_0_0_0_0_04855_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04855_write,
        mp_in_0_0_0_0_04856_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04856_din,
        mp_in_0_0_0_0_04856_full_n => mp_in_V_M_elems_V_3_1_3_full_n,
        mp_in_0_0_0_0_04856_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04856_write,
        mp_in_0_0_0_0_04857_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04857_din,
        mp_in_0_0_0_0_04857_full_n => mp_in_V_M_elems_V_3_1_4_full_n,
        mp_in_0_0_0_0_04857_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04857_write,
        mp_in_0_0_0_0_04858_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04858_din,
        mp_in_0_0_0_0_04858_full_n => mp_in_V_M_elems_V_3_1_5_full_n,
        mp_in_0_0_0_0_04858_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04858_write,
        mp_in_0_0_0_0_04859_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04859_din,
        mp_in_0_0_0_0_04859_full_n => mp_in_V_M_elems_V_3_1_6_full_n,
        mp_in_0_0_0_0_04859_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04859_write,
        mp_in_0_0_0_0_04860_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04860_din,
        mp_in_0_0_0_0_04860_full_n => mp_in_V_M_elems_V_3_1_7_full_n,
        mp_in_0_0_0_0_04860_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04860_write,
        num_of_nodes => num_of_nodes,
        pes_per_node_address0 => ne_to_mp_adapter_U0_pes_per_node_address0,
        pes_per_node_ce0 => ne_to_mp_adapter_U0_pes_per_node_ce0,
        pes_per_node_q0 => pes_per_node_q0);

    message_passing_pe18_U0 : component GIN_compute_graphs_message_passing_pe18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => message_passing_pe18_U0_ap_start,
        ap_done => message_passing_pe18_U0_ap_done,
        ap_continue => message_passing_pe18_U0_ap_continue,
        ap_idle => message_passing_pe18_U0_ap_idle,
        ap_ready => message_passing_pe18_U0_ap_ready,
        layer_num_dout => layer_num_c15_dout,
        layer_num_empty_n => layer_num_c15_empty_n,
        layer_num_read => message_passing_pe18_U0_layer_num_read,
        embeddings_per_node_0_0_0_0_0_dout => mp_in_V_M_elems_V_0_0_0_dout,
        embeddings_per_node_0_0_0_0_0_empty_n => mp_in_V_M_elems_V_0_0_0_empty_n,
        embeddings_per_node_0_0_0_0_0_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0_read,
        embeddings_per_node_0_0_0_0_01_dout => mp_in_V_M_elems_V_0_0_1_dout,
        embeddings_per_node_0_0_0_0_01_empty_n => mp_in_V_M_elems_V_0_0_1_empty_n,
        embeddings_per_node_0_0_0_0_01_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_01_read,
        embeddings_per_node_0_0_0_0_02_dout => mp_in_V_M_elems_V_0_0_2_dout,
        embeddings_per_node_0_0_0_0_02_empty_n => mp_in_V_M_elems_V_0_0_2_empty_n,
        embeddings_per_node_0_0_0_0_02_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_02_read,
        embeddings_per_node_0_0_0_0_03_dout => mp_in_V_M_elems_V_0_0_3_dout,
        embeddings_per_node_0_0_0_0_03_empty_n => mp_in_V_M_elems_V_0_0_3_empty_n,
        embeddings_per_node_0_0_0_0_03_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_03_read,
        embeddings_per_node_0_0_0_0_04_dout => mp_in_V_M_elems_V_0_0_4_dout,
        embeddings_per_node_0_0_0_0_04_empty_n => mp_in_V_M_elems_V_0_0_4_empty_n,
        embeddings_per_node_0_0_0_0_04_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_04_read,
        embeddings_per_node_0_0_0_0_05_dout => mp_in_V_M_elems_V_0_0_5_dout,
        embeddings_per_node_0_0_0_0_05_empty_n => mp_in_V_M_elems_V_0_0_5_empty_n,
        embeddings_per_node_0_0_0_0_05_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_05_read,
        embeddings_per_node_0_0_0_0_06_dout => mp_in_V_M_elems_V_0_0_6_dout,
        embeddings_per_node_0_0_0_0_06_empty_n => mp_in_V_M_elems_V_0_0_6_empty_n,
        embeddings_per_node_0_0_0_0_06_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_06_read,
        embeddings_per_node_0_0_0_0_07_dout => mp_in_V_M_elems_V_0_0_7_dout,
        embeddings_per_node_0_0_0_0_07_empty_n => mp_in_V_M_elems_V_0_0_7_empty_n,
        embeddings_per_node_0_0_0_0_07_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_07_read,
        embeddings_per_node_0_0_0_0_018_dout => mp_in_V_M_elems_V_0_1_0_dout,
        embeddings_per_node_0_0_0_0_018_empty_n => mp_in_V_M_elems_V_0_1_0_empty_n,
        embeddings_per_node_0_0_0_0_018_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_018_read,
        embeddings_per_node_0_0_0_0_019_dout => mp_in_V_M_elems_V_0_1_1_dout,
        embeddings_per_node_0_0_0_0_019_empty_n => mp_in_V_M_elems_V_0_1_1_empty_n,
        embeddings_per_node_0_0_0_0_019_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_019_read,
        embeddings_per_node_0_0_0_0_0110_dout => mp_in_V_M_elems_V_0_1_2_dout,
        embeddings_per_node_0_0_0_0_0110_empty_n => mp_in_V_M_elems_V_0_1_2_empty_n,
        embeddings_per_node_0_0_0_0_0110_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0110_read,
        embeddings_per_node_0_0_0_0_0111_dout => mp_in_V_M_elems_V_0_1_3_dout,
        embeddings_per_node_0_0_0_0_0111_empty_n => mp_in_V_M_elems_V_0_1_3_empty_n,
        embeddings_per_node_0_0_0_0_0111_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0111_read,
        embeddings_per_node_0_0_0_0_0112_dout => mp_in_V_M_elems_V_0_1_4_dout,
        embeddings_per_node_0_0_0_0_0112_empty_n => mp_in_V_M_elems_V_0_1_4_empty_n,
        embeddings_per_node_0_0_0_0_0112_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0112_read,
        embeddings_per_node_0_0_0_0_0113_dout => mp_in_V_M_elems_V_0_1_5_dout,
        embeddings_per_node_0_0_0_0_0113_empty_n => mp_in_V_M_elems_V_0_1_5_empty_n,
        embeddings_per_node_0_0_0_0_0113_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0113_read,
        embeddings_per_node_0_0_0_0_0114_dout => mp_in_V_M_elems_V_0_1_6_dout,
        embeddings_per_node_0_0_0_0_0114_empty_n => mp_in_V_M_elems_V_0_1_6_empty_n,
        embeddings_per_node_0_0_0_0_0114_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0114_read,
        embeddings_per_node_0_0_0_0_0115_dout => mp_in_V_M_elems_V_0_1_7_dout,
        embeddings_per_node_0_0_0_0_0115_empty_n => mp_in_V_M_elems_V_0_1_7_empty_n,
        embeddings_per_node_0_0_0_0_0115_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0115_read,
        message_address0 => message_passing_pe18_U0_message_address0,
        message_ce0 => message_passing_pe18_U0_message_ce0,
        message_we0 => message_passing_pe18_U0_message_we0,
        message_d0 => message_passing_pe18_U0_message_d0,
        message_address1 => message_passing_pe18_U0_message_address1,
        message_ce1 => message_passing_pe18_U0_message_ce1,
        message_q1 => message_q1,
        message6_address0 => message_passing_pe18_U0_message6_address0,
        message6_ce0 => message_passing_pe18_U0_message6_ce0,
        message6_we0 => message_passing_pe18_U0_message6_we0,
        message6_d0 => message_passing_pe18_U0_message6_d0,
        message6_address1 => message_passing_pe18_U0_message6_address1,
        message6_ce1 => message_passing_pe18_U0_message6_ce1,
        message6_q1 => message4_q1,
        message7_address0 => message_passing_pe18_U0_message7_address0,
        message7_ce0 => message_passing_pe18_U0_message7_ce0,
        message7_we0 => message_passing_pe18_U0_message7_we0,
        message7_d0 => message_passing_pe18_U0_message7_d0,
        message7_address1 => message_passing_pe18_U0_message7_address1,
        message7_ce1 => message_passing_pe18_U0_message7_ce1,
        message7_q1 => message5_q1,
        message8_address0 => message_passing_pe18_U0_message8_address0,
        message8_ce0 => message_passing_pe18_U0_message8_ce0,
        message8_we0 => message_passing_pe18_U0_message8_we0,
        message8_d0 => message_passing_pe18_U0_message8_d0,
        message8_address1 => message_passing_pe18_U0_message8_address1,
        message8_ce1 => message_passing_pe18_U0_message8_ce1,
        message8_q1 => message6_q1,
        message9_address0 => message_passing_pe18_U0_message9_address0,
        message9_ce0 => message_passing_pe18_U0_message9_ce0,
        message9_we0 => message_passing_pe18_U0_message9_we0,
        message9_d0 => message_passing_pe18_U0_message9_d0,
        message9_address1 => message_passing_pe18_U0_message9_address1,
        message9_ce1 => message_passing_pe18_U0_message9_ce1,
        message9_q1 => message7_q1,
        message10_address0 => message_passing_pe18_U0_message10_address0,
        message10_ce0 => message_passing_pe18_U0_message10_ce0,
        message10_we0 => message_passing_pe18_U0_message10_we0,
        message10_d0 => message_passing_pe18_U0_message10_d0,
        message10_address1 => message_passing_pe18_U0_message10_address1,
        message10_ce1 => message_passing_pe18_U0_message10_ce1,
        message10_q1 => message8_q1,
        message11_address0 => message_passing_pe18_U0_message11_address0,
        message11_ce0 => message_passing_pe18_U0_message11_ce0,
        message11_we0 => message_passing_pe18_U0_message11_we0,
        message11_d0 => message_passing_pe18_U0_message11_d0,
        message11_address1 => message_passing_pe18_U0_message11_address1,
        message11_ce1 => message_passing_pe18_U0_message11_ce1,
        message11_q1 => message9_q1,
        message12_address0 => message_passing_pe18_U0_message12_address0,
        message12_ce0 => message_passing_pe18_U0_message12_ce0,
        message12_we0 => message_passing_pe18_U0_message12_we0,
        message12_d0 => message_passing_pe18_U0_message12_d0,
        message12_address1 => message_passing_pe18_U0_message12_address1,
        message12_ce1 => message_passing_pe18_U0_message12_ce1,
        message12_q1 => message10_q1,
        num_of_edges_per_pe_1_0 => num_of_edges_per_pe_1_0,
        edge_embedding_weights_V_0_0_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_0_address0,
        edge_embedding_weights_V_0_0_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce0,
        edge_embedding_weights_V_0_0_q0 => edge_embedding_weights_V_0_0_q0,
        edge_embedding_weights_V_0_0_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_0_address1,
        edge_embedding_weights_V_0_0_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce1,
        edge_embedding_weights_V_0_0_q1 => edge_embedding_weights_V_0_0_q1,
        edge_embedding_weights_V_0_0_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_0_address2,
        edge_embedding_weights_V_0_0_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce2,
        edge_embedding_weights_V_0_0_q2 => edge_embedding_weights_V_0_0_q2,
        edge_embedding_weights_V_0_1_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_1_address0,
        edge_embedding_weights_V_0_1_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce0,
        edge_embedding_weights_V_0_1_q0 => edge_embedding_weights_V_0_1_q0,
        edge_embedding_weights_V_0_1_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_1_address1,
        edge_embedding_weights_V_0_1_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce1,
        edge_embedding_weights_V_0_1_q1 => edge_embedding_weights_V_0_1_q1,
        edge_embedding_weights_V_0_1_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_1_address2,
        edge_embedding_weights_V_0_1_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce2,
        edge_embedding_weights_V_0_1_q2 => edge_embedding_weights_V_0_1_q2,
        edge_embedding_weights_V_0_2_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_2_address0,
        edge_embedding_weights_V_0_2_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce0,
        edge_embedding_weights_V_0_2_q0 => edge_embedding_weights_V_0_2_q0,
        edge_embedding_weights_V_0_2_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_2_address1,
        edge_embedding_weights_V_0_2_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce1,
        edge_embedding_weights_V_0_2_q1 => edge_embedding_weights_V_0_2_q1,
        edge_embedding_weights_V_0_2_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_2_address2,
        edge_embedding_weights_V_0_2_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce2,
        edge_embedding_weights_V_0_2_q2 => edge_embedding_weights_V_0_2_q2,
        edge_embedding_weights_V_0_3_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_3_address0,
        edge_embedding_weights_V_0_3_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce0,
        edge_embedding_weights_V_0_3_q0 => edge_embedding_weights_V_0_3_q0,
        edge_embedding_weights_V_0_3_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_3_address1,
        edge_embedding_weights_V_0_3_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce1,
        edge_embedding_weights_V_0_3_q1 => edge_embedding_weights_V_0_3_q1,
        edge_embedding_weights_V_0_3_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_3_address2,
        edge_embedding_weights_V_0_3_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce2,
        edge_embedding_weights_V_0_3_q2 => edge_embedding_weights_V_0_3_q2,
        neighbor_tables_1_0_address0 => message_passing_pe18_U0_neighbor_tables_1_0_address0,
        neighbor_tables_1_0_ce0 => message_passing_pe18_U0_neighbor_tables_1_0_ce0,
        neighbor_tables_1_0_q0 => neighbor_tables_1_0_q0,
        edge_attrs_1_0_address0 => message_passing_pe18_U0_edge_attrs_1_0_address0,
        edge_attrs_1_0_ce0 => message_passing_pe18_U0_edge_attrs_1_0_ce0,
        edge_attrs_1_0_q0 => edge_attrs_1_0_q0,
        degree_tables_1_0_address0 => message_passing_pe18_U0_degree_tables_1_0_address0,
        degree_tables_1_0_ce0 => message_passing_pe18_U0_degree_tables_1_0_ce0,
        degree_tables_1_0_q0 => degree_tables_1_0_q0,
        edge_embedding_weights_V_0_4_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_4_address0,
        edge_embedding_weights_V_0_4_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce0,
        edge_embedding_weights_V_0_4_q0 => edge_embedding_weights_V_0_4_q0,
        edge_embedding_weights_V_0_4_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_4_address1,
        edge_embedding_weights_V_0_4_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce1,
        edge_embedding_weights_V_0_4_q1 => edge_embedding_weights_V_0_4_q1,
        edge_embedding_weights_V_0_4_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_4_address2,
        edge_embedding_weights_V_0_4_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce2,
        edge_embedding_weights_V_0_4_q2 => edge_embedding_weights_V_0_4_q2,
        edge_embedding_weights_V_0_5_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_5_address0,
        edge_embedding_weights_V_0_5_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce0,
        edge_embedding_weights_V_0_5_q0 => edge_embedding_weights_V_0_5_q0,
        edge_embedding_weights_V_0_5_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_5_address1,
        edge_embedding_weights_V_0_5_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce1,
        edge_embedding_weights_V_0_5_q1 => edge_embedding_weights_V_0_5_q1,
        edge_embedding_weights_V_0_5_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_5_address2,
        edge_embedding_weights_V_0_5_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce2,
        edge_embedding_weights_V_0_5_q2 => edge_embedding_weights_V_0_5_q2,
        edge_embedding_weights_V_0_6_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_6_address0,
        edge_embedding_weights_V_0_6_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce0,
        edge_embedding_weights_V_0_6_q0 => edge_embedding_weights_V_0_6_q0,
        edge_embedding_weights_V_0_6_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_6_address1,
        edge_embedding_weights_V_0_6_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce1,
        edge_embedding_weights_V_0_6_q1 => edge_embedding_weights_V_0_6_q1,
        edge_embedding_weights_V_0_6_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_6_address2,
        edge_embedding_weights_V_0_6_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce2,
        edge_embedding_weights_V_0_6_q2 => edge_embedding_weights_V_0_6_q2,
        edge_embedding_weights_V_0_7_address0 => message_passing_pe18_U0_edge_embedding_weights_V_0_7_address0,
        edge_embedding_weights_V_0_7_ce0 => message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce0,
        edge_embedding_weights_V_0_7_q0 => edge_embedding_weights_V_0_7_q0,
        edge_embedding_weights_V_0_7_address1 => message_passing_pe18_U0_edge_embedding_weights_V_0_7_address1,
        edge_embedding_weights_V_0_7_ce1 => message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce1,
        edge_embedding_weights_V_0_7_q1 => edge_embedding_weights_V_0_7_q1,
        edge_embedding_weights_V_0_7_address2 => message_passing_pe18_U0_edge_embedding_weights_V_0_7_address2,
        edge_embedding_weights_V_0_7_ce2 => message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce2,
        edge_embedding_weights_V_0_7_q2 => edge_embedding_weights_V_0_7_q2);

    message_passing_pe19_U0 : component GIN_compute_graphs_message_passing_pe19
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => message_passing_pe19_U0_ap_start,
        ap_done => message_passing_pe19_U0_ap_done,
        ap_continue => message_passing_pe19_U0_ap_continue,
        ap_idle => message_passing_pe19_U0_ap_idle,
        ap_ready => message_passing_pe19_U0_ap_ready,
        layer_num_dout => layer_num_c14_dout,
        layer_num_empty_n => layer_num_c14_empty_n,
        layer_num_read => message_passing_pe19_U0_layer_num_read,
        embeddings_per_node_0_0_0_0_012_dout => mp_in_V_M_elems_V_1_0_0_dout,
        embeddings_per_node_0_0_0_0_012_empty_n => mp_in_V_M_elems_V_1_0_0_empty_n,
        embeddings_per_node_0_0_0_0_012_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_012_read,
        embeddings_per_node_0_0_0_0_01216_dout => mp_in_V_M_elems_V_1_0_1_dout,
        embeddings_per_node_0_0_0_0_01216_empty_n => mp_in_V_M_elems_V_1_0_1_empty_n,
        embeddings_per_node_0_0_0_0_01216_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01216_read,
        embeddings_per_node_0_0_0_0_01217_dout => mp_in_V_M_elems_V_1_0_2_dout,
        embeddings_per_node_0_0_0_0_01217_empty_n => mp_in_V_M_elems_V_1_0_2_empty_n,
        embeddings_per_node_0_0_0_0_01217_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01217_read,
        embeddings_per_node_0_0_0_0_01218_dout => mp_in_V_M_elems_V_1_0_3_dout,
        embeddings_per_node_0_0_0_0_01218_empty_n => mp_in_V_M_elems_V_1_0_3_empty_n,
        embeddings_per_node_0_0_0_0_01218_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01218_read,
        embeddings_per_node_0_0_0_0_01219_dout => mp_in_V_M_elems_V_1_0_4_dout,
        embeddings_per_node_0_0_0_0_01219_empty_n => mp_in_V_M_elems_V_1_0_4_empty_n,
        embeddings_per_node_0_0_0_0_01219_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01219_read,
        embeddings_per_node_0_0_0_0_01220_dout => mp_in_V_M_elems_V_1_0_5_dout,
        embeddings_per_node_0_0_0_0_01220_empty_n => mp_in_V_M_elems_V_1_0_5_empty_n,
        embeddings_per_node_0_0_0_0_01220_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01220_read,
        embeddings_per_node_0_0_0_0_01221_dout => mp_in_V_M_elems_V_1_0_6_dout,
        embeddings_per_node_0_0_0_0_01221_empty_n => mp_in_V_M_elems_V_1_0_6_empty_n,
        embeddings_per_node_0_0_0_0_01221_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01221_read,
        embeddings_per_node_0_0_0_0_01222_dout => mp_in_V_M_elems_V_1_0_7_dout,
        embeddings_per_node_0_0_0_0_01222_empty_n => mp_in_V_M_elems_V_1_0_7_empty_n,
        embeddings_per_node_0_0_0_0_01222_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01222_read,
        embeddings_per_node_0_0_0_0_013_dout => mp_in_V_M_elems_V_1_1_0_dout,
        embeddings_per_node_0_0_0_0_013_empty_n => mp_in_V_M_elems_V_1_1_0_empty_n,
        embeddings_per_node_0_0_0_0_013_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_013_read,
        embeddings_per_node_0_0_0_0_01323_dout => mp_in_V_M_elems_V_1_1_1_dout,
        embeddings_per_node_0_0_0_0_01323_empty_n => mp_in_V_M_elems_V_1_1_1_empty_n,
        embeddings_per_node_0_0_0_0_01323_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01323_read,
        embeddings_per_node_0_0_0_0_01324_dout => mp_in_V_M_elems_V_1_1_2_dout,
        embeddings_per_node_0_0_0_0_01324_empty_n => mp_in_V_M_elems_V_1_1_2_empty_n,
        embeddings_per_node_0_0_0_0_01324_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01324_read,
        embeddings_per_node_0_0_0_0_01325_dout => mp_in_V_M_elems_V_1_1_3_dout,
        embeddings_per_node_0_0_0_0_01325_empty_n => mp_in_V_M_elems_V_1_1_3_empty_n,
        embeddings_per_node_0_0_0_0_01325_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01325_read,
        embeddings_per_node_0_0_0_0_01326_dout => mp_in_V_M_elems_V_1_1_4_dout,
        embeddings_per_node_0_0_0_0_01326_empty_n => mp_in_V_M_elems_V_1_1_4_empty_n,
        embeddings_per_node_0_0_0_0_01326_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01326_read,
        embeddings_per_node_0_0_0_0_01327_dout => mp_in_V_M_elems_V_1_1_5_dout,
        embeddings_per_node_0_0_0_0_01327_empty_n => mp_in_V_M_elems_V_1_1_5_empty_n,
        embeddings_per_node_0_0_0_0_01327_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01327_read,
        embeddings_per_node_0_0_0_0_01328_dout => mp_in_V_M_elems_V_1_1_6_dout,
        embeddings_per_node_0_0_0_0_01328_empty_n => mp_in_V_M_elems_V_1_1_6_empty_n,
        embeddings_per_node_0_0_0_0_01328_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01328_read,
        embeddings_per_node_0_0_0_0_01329_dout => mp_in_V_M_elems_V_1_1_7_dout,
        embeddings_per_node_0_0_0_0_01329_empty_n => mp_in_V_M_elems_V_1_1_7_empty_n,
        embeddings_per_node_0_0_0_0_01329_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01329_read,
        message4_address0 => message_passing_pe19_U0_message4_address0,
        message4_ce0 => message_passing_pe19_U0_message4_ce0,
        message4_we0 => message_passing_pe19_U0_message4_we0,
        message4_d0 => message_passing_pe19_U0_message4_d0,
        message4_address1 => message_passing_pe19_U0_message4_address1,
        message4_ce1 => message_passing_pe19_U0_message4_ce1,
        message4_q1 => message2_q1,
        message413_address0 => message_passing_pe19_U0_message413_address0,
        message413_ce0 => message_passing_pe19_U0_message413_ce0,
        message413_we0 => message_passing_pe19_U0_message413_we0,
        message413_d0 => message_passing_pe19_U0_message413_d0,
        message413_address1 => message_passing_pe19_U0_message413_address1,
        message413_ce1 => message_passing_pe19_U0_message413_ce1,
        message413_q1 => message211_q1,
        message414_address0 => message_passing_pe19_U0_message414_address0,
        message414_ce0 => message_passing_pe19_U0_message414_ce0,
        message414_we0 => message_passing_pe19_U0_message414_we0,
        message414_d0 => message_passing_pe19_U0_message414_d0,
        message414_address1 => message_passing_pe19_U0_message414_address1,
        message414_ce1 => message_passing_pe19_U0_message414_ce1,
        message414_q1 => message212_q1,
        message415_address0 => message_passing_pe19_U0_message415_address0,
        message415_ce0 => message_passing_pe19_U0_message415_ce0,
        message415_we0 => message_passing_pe19_U0_message415_we0,
        message415_d0 => message_passing_pe19_U0_message415_d0,
        message415_address1 => message_passing_pe19_U0_message415_address1,
        message415_ce1 => message_passing_pe19_U0_message415_ce1,
        message415_q1 => message213_q1,
        message416_address0 => message_passing_pe19_U0_message416_address0,
        message416_ce0 => message_passing_pe19_U0_message416_ce0,
        message416_we0 => message_passing_pe19_U0_message416_we0,
        message416_d0 => message_passing_pe19_U0_message416_d0,
        message416_address1 => message_passing_pe19_U0_message416_address1,
        message416_ce1 => message_passing_pe19_U0_message416_ce1,
        message416_q1 => message214_q1,
        message417_address0 => message_passing_pe19_U0_message417_address0,
        message417_ce0 => message_passing_pe19_U0_message417_ce0,
        message417_we0 => message_passing_pe19_U0_message417_we0,
        message417_d0 => message_passing_pe19_U0_message417_d0,
        message417_address1 => message_passing_pe19_U0_message417_address1,
        message417_ce1 => message_passing_pe19_U0_message417_ce1,
        message417_q1 => message215_q1,
        message418_address0 => message_passing_pe19_U0_message418_address0,
        message418_ce0 => message_passing_pe19_U0_message418_ce0,
        message418_we0 => message_passing_pe19_U0_message418_we0,
        message418_d0 => message_passing_pe19_U0_message418_d0,
        message418_address1 => message_passing_pe19_U0_message418_address1,
        message418_ce1 => message_passing_pe19_U0_message418_ce1,
        message418_q1 => message216_q1,
        message419_address0 => message_passing_pe19_U0_message419_address0,
        message419_ce0 => message_passing_pe19_U0_message419_ce0,
        message419_we0 => message_passing_pe19_U0_message419_we0,
        message419_d0 => message_passing_pe19_U0_message419_d0,
        message419_address1 => message_passing_pe19_U0_message419_address1,
        message419_ce1 => message_passing_pe19_U0_message419_ce1,
        message419_q1 => message217_q1,
        num_of_edges_per_pe_1_1 => num_of_edges_per_pe_1_1,
        edge_embedding_weights_V_1_0_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_0_address0,
        edge_embedding_weights_V_1_0_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce0,
        edge_embedding_weights_V_1_0_q0 => edge_embedding_weights_V_1_0_q0,
        edge_embedding_weights_V_1_0_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_0_address1,
        edge_embedding_weights_V_1_0_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce1,
        edge_embedding_weights_V_1_0_q1 => edge_embedding_weights_V_1_0_q1,
        edge_embedding_weights_V_1_0_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_0_address2,
        edge_embedding_weights_V_1_0_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce2,
        edge_embedding_weights_V_1_0_q2 => edge_embedding_weights_V_1_0_q2,
        edge_embedding_weights_V_1_1_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_1_address0,
        edge_embedding_weights_V_1_1_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce0,
        edge_embedding_weights_V_1_1_q0 => edge_embedding_weights_V_1_1_q0,
        edge_embedding_weights_V_1_1_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_1_address1,
        edge_embedding_weights_V_1_1_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce1,
        edge_embedding_weights_V_1_1_q1 => edge_embedding_weights_V_1_1_q1,
        edge_embedding_weights_V_1_1_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_1_address2,
        edge_embedding_weights_V_1_1_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce2,
        edge_embedding_weights_V_1_1_q2 => edge_embedding_weights_V_1_1_q2,
        edge_embedding_weights_V_1_2_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_2_address0,
        edge_embedding_weights_V_1_2_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce0,
        edge_embedding_weights_V_1_2_q0 => edge_embedding_weights_V_1_2_q0,
        edge_embedding_weights_V_1_2_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_2_address1,
        edge_embedding_weights_V_1_2_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce1,
        edge_embedding_weights_V_1_2_q1 => edge_embedding_weights_V_1_2_q1,
        edge_embedding_weights_V_1_2_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_2_address2,
        edge_embedding_weights_V_1_2_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce2,
        edge_embedding_weights_V_1_2_q2 => edge_embedding_weights_V_1_2_q2,
        edge_embedding_weights_V_1_3_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_3_address0,
        edge_embedding_weights_V_1_3_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce0,
        edge_embedding_weights_V_1_3_q0 => edge_embedding_weights_V_1_3_q0,
        edge_embedding_weights_V_1_3_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_3_address1,
        edge_embedding_weights_V_1_3_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce1,
        edge_embedding_weights_V_1_3_q1 => edge_embedding_weights_V_1_3_q1,
        edge_embedding_weights_V_1_3_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_3_address2,
        edge_embedding_weights_V_1_3_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce2,
        edge_embedding_weights_V_1_3_q2 => edge_embedding_weights_V_1_3_q2,
        neighbor_tables_1_1_address0 => message_passing_pe19_U0_neighbor_tables_1_1_address0,
        neighbor_tables_1_1_ce0 => message_passing_pe19_U0_neighbor_tables_1_1_ce0,
        neighbor_tables_1_1_q0 => neighbor_tables_1_1_q0,
        edge_attrs_1_1_address0 => message_passing_pe19_U0_edge_attrs_1_1_address0,
        edge_attrs_1_1_ce0 => message_passing_pe19_U0_edge_attrs_1_1_ce0,
        edge_attrs_1_1_q0 => edge_attrs_1_1_q0,
        degree_tables_1_1_address0 => message_passing_pe19_U0_degree_tables_1_1_address0,
        degree_tables_1_1_ce0 => message_passing_pe19_U0_degree_tables_1_1_ce0,
        degree_tables_1_1_q0 => degree_tables_1_1_q0,
        edge_embedding_weights_V_1_4_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_4_address0,
        edge_embedding_weights_V_1_4_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce0,
        edge_embedding_weights_V_1_4_q0 => edge_embedding_weights_V_1_4_q0,
        edge_embedding_weights_V_1_4_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_4_address1,
        edge_embedding_weights_V_1_4_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce1,
        edge_embedding_weights_V_1_4_q1 => edge_embedding_weights_V_1_4_q1,
        edge_embedding_weights_V_1_4_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_4_address2,
        edge_embedding_weights_V_1_4_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce2,
        edge_embedding_weights_V_1_4_q2 => edge_embedding_weights_V_1_4_q2,
        edge_embedding_weights_V_1_5_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_5_address0,
        edge_embedding_weights_V_1_5_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce0,
        edge_embedding_weights_V_1_5_q0 => edge_embedding_weights_V_1_5_q0,
        edge_embedding_weights_V_1_5_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_5_address1,
        edge_embedding_weights_V_1_5_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce1,
        edge_embedding_weights_V_1_5_q1 => edge_embedding_weights_V_1_5_q1,
        edge_embedding_weights_V_1_5_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_5_address2,
        edge_embedding_weights_V_1_5_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce2,
        edge_embedding_weights_V_1_5_q2 => edge_embedding_weights_V_1_5_q2,
        edge_embedding_weights_V_1_6_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_6_address0,
        edge_embedding_weights_V_1_6_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce0,
        edge_embedding_weights_V_1_6_q0 => edge_embedding_weights_V_1_6_q0,
        edge_embedding_weights_V_1_6_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_6_address1,
        edge_embedding_weights_V_1_6_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce1,
        edge_embedding_weights_V_1_6_q1 => edge_embedding_weights_V_1_6_q1,
        edge_embedding_weights_V_1_6_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_6_address2,
        edge_embedding_weights_V_1_6_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce2,
        edge_embedding_weights_V_1_6_q2 => edge_embedding_weights_V_1_6_q2,
        edge_embedding_weights_V_1_7_address0 => message_passing_pe19_U0_edge_embedding_weights_V_1_7_address0,
        edge_embedding_weights_V_1_7_ce0 => message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce0,
        edge_embedding_weights_V_1_7_q0 => edge_embedding_weights_V_1_7_q0,
        edge_embedding_weights_V_1_7_address1 => message_passing_pe19_U0_edge_embedding_weights_V_1_7_address1,
        edge_embedding_weights_V_1_7_ce1 => message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce1,
        edge_embedding_weights_V_1_7_q1 => edge_embedding_weights_V_1_7_q1,
        edge_embedding_weights_V_1_7_address2 => message_passing_pe19_U0_edge_embedding_weights_V_1_7_address2,
        edge_embedding_weights_V_1_7_ce2 => message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce2,
        edge_embedding_weights_V_1_7_q2 => edge_embedding_weights_V_1_7_q2);

    message_passing_pe20_U0 : component GIN_compute_graphs_message_passing_pe20
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => message_passing_pe20_U0_ap_start,
        ap_done => message_passing_pe20_U0_ap_done,
        ap_continue => message_passing_pe20_U0_ap_continue,
        ap_idle => message_passing_pe20_U0_ap_idle,
        ap_ready => message_passing_pe20_U0_ap_ready,
        layer_num_dout => layer_num_c13_dout,
        layer_num_empty_n => layer_num_c13_empty_n,
        layer_num_read => message_passing_pe20_U0_layer_num_read,
        embeddings_per_node_0_0_0_0_0230_dout => mp_in_V_M_elems_V_2_0_0_dout,
        embeddings_per_node_0_0_0_0_0230_empty_n => mp_in_V_M_elems_V_2_0_0_empty_n,
        embeddings_per_node_0_0_0_0_0230_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0230_read,
        embeddings_per_node_0_0_0_0_0231_dout => mp_in_V_M_elems_V_2_0_1_dout,
        embeddings_per_node_0_0_0_0_0231_empty_n => mp_in_V_M_elems_V_2_0_1_empty_n,
        embeddings_per_node_0_0_0_0_0231_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0231_read,
        embeddings_per_node_0_0_0_0_0232_dout => mp_in_V_M_elems_V_2_0_2_dout,
        embeddings_per_node_0_0_0_0_0232_empty_n => mp_in_V_M_elems_V_2_0_2_empty_n,
        embeddings_per_node_0_0_0_0_0232_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0232_read,
        embeddings_per_node_0_0_0_0_0233_dout => mp_in_V_M_elems_V_2_0_3_dout,
        embeddings_per_node_0_0_0_0_0233_empty_n => mp_in_V_M_elems_V_2_0_3_empty_n,
        embeddings_per_node_0_0_0_0_0233_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0233_read,
        embeddings_per_node_0_0_0_0_0234_dout => mp_in_V_M_elems_V_2_0_4_dout,
        embeddings_per_node_0_0_0_0_0234_empty_n => mp_in_V_M_elems_V_2_0_4_empty_n,
        embeddings_per_node_0_0_0_0_0234_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0234_read,
        embeddings_per_node_0_0_0_0_0235_dout => mp_in_V_M_elems_V_2_0_5_dout,
        embeddings_per_node_0_0_0_0_0235_empty_n => mp_in_V_M_elems_V_2_0_5_empty_n,
        embeddings_per_node_0_0_0_0_0235_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0235_read,
        embeddings_per_node_0_0_0_0_0236_dout => mp_in_V_M_elems_V_2_0_6_dout,
        embeddings_per_node_0_0_0_0_0236_empty_n => mp_in_V_M_elems_V_2_0_6_empty_n,
        embeddings_per_node_0_0_0_0_0236_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0236_read,
        embeddings_per_node_0_0_0_0_0237_dout => mp_in_V_M_elems_V_2_0_7_dout,
        embeddings_per_node_0_0_0_0_0237_empty_n => mp_in_V_M_elems_V_2_0_7_empty_n,
        embeddings_per_node_0_0_0_0_0237_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0237_read,
        embeddings_per_node_0_0_0_0_024_dout => mp_in_V_M_elems_V_2_1_0_dout,
        embeddings_per_node_0_0_0_0_024_empty_n => mp_in_V_M_elems_V_2_1_0_empty_n,
        embeddings_per_node_0_0_0_0_024_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_024_read,
        embeddings_per_node_0_0_0_0_02438_dout => mp_in_V_M_elems_V_2_1_1_dout,
        embeddings_per_node_0_0_0_0_02438_empty_n => mp_in_V_M_elems_V_2_1_1_empty_n,
        embeddings_per_node_0_0_0_0_02438_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02438_read,
        embeddings_per_node_0_0_0_0_02439_dout => mp_in_V_M_elems_V_2_1_2_dout,
        embeddings_per_node_0_0_0_0_02439_empty_n => mp_in_V_M_elems_V_2_1_2_empty_n,
        embeddings_per_node_0_0_0_0_02439_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02439_read,
        embeddings_per_node_0_0_0_0_02440_dout => mp_in_V_M_elems_V_2_1_3_dout,
        embeddings_per_node_0_0_0_0_02440_empty_n => mp_in_V_M_elems_V_2_1_3_empty_n,
        embeddings_per_node_0_0_0_0_02440_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02440_read,
        embeddings_per_node_0_0_0_0_02441_dout => mp_in_V_M_elems_V_2_1_4_dout,
        embeddings_per_node_0_0_0_0_02441_empty_n => mp_in_V_M_elems_V_2_1_4_empty_n,
        embeddings_per_node_0_0_0_0_02441_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02441_read,
        embeddings_per_node_0_0_0_0_02442_dout => mp_in_V_M_elems_V_2_1_5_dout,
        embeddings_per_node_0_0_0_0_02442_empty_n => mp_in_V_M_elems_V_2_1_5_empty_n,
        embeddings_per_node_0_0_0_0_02442_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02442_read,
        embeddings_per_node_0_0_0_0_02443_dout => mp_in_V_M_elems_V_2_1_6_dout,
        embeddings_per_node_0_0_0_0_02443_empty_n => mp_in_V_M_elems_V_2_1_6_empty_n,
        embeddings_per_node_0_0_0_0_02443_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02443_read,
        embeddings_per_node_0_0_0_0_02444_dout => mp_in_V_M_elems_V_2_1_7_dout,
        embeddings_per_node_0_0_0_0_02444_empty_n => mp_in_V_M_elems_V_2_1_7_empty_n,
        embeddings_per_node_0_0_0_0_02444_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02444_read,
        message5_address0 => message_passing_pe20_U0_message5_address0,
        message5_ce0 => message_passing_pe20_U0_message5_ce0,
        message5_we0 => message_passing_pe20_U0_message5_we0,
        message5_d0 => message_passing_pe20_U0_message5_d0,
        message5_address1 => message_passing_pe20_U0_message5_address1,
        message5_ce1 => message_passing_pe20_U0_message5_ce1,
        message5_q1 => message3_q1,
        message520_address0 => message_passing_pe20_U0_message520_address0,
        message520_ce0 => message_passing_pe20_U0_message520_ce0,
        message520_we0 => message_passing_pe20_U0_message520_we0,
        message520_d0 => message_passing_pe20_U0_message520_d0,
        message520_address1 => message_passing_pe20_U0_message520_address1,
        message520_ce1 => message_passing_pe20_U0_message520_ce1,
        message520_q1 => message318_q1,
        message521_address0 => message_passing_pe20_U0_message521_address0,
        message521_ce0 => message_passing_pe20_U0_message521_ce0,
        message521_we0 => message_passing_pe20_U0_message521_we0,
        message521_d0 => message_passing_pe20_U0_message521_d0,
        message521_address1 => message_passing_pe20_U0_message521_address1,
        message521_ce1 => message_passing_pe20_U0_message521_ce1,
        message521_q1 => message319_q1,
        message522_address0 => message_passing_pe20_U0_message522_address0,
        message522_ce0 => message_passing_pe20_U0_message522_ce0,
        message522_we0 => message_passing_pe20_U0_message522_we0,
        message522_d0 => message_passing_pe20_U0_message522_d0,
        message522_address1 => message_passing_pe20_U0_message522_address1,
        message522_ce1 => message_passing_pe20_U0_message522_ce1,
        message522_q1 => message320_q1,
        message523_address0 => message_passing_pe20_U0_message523_address0,
        message523_ce0 => message_passing_pe20_U0_message523_ce0,
        message523_we0 => message_passing_pe20_U0_message523_we0,
        message523_d0 => message_passing_pe20_U0_message523_d0,
        message523_address1 => message_passing_pe20_U0_message523_address1,
        message523_ce1 => message_passing_pe20_U0_message523_ce1,
        message523_q1 => message321_q1,
        message524_address0 => message_passing_pe20_U0_message524_address0,
        message524_ce0 => message_passing_pe20_U0_message524_ce0,
        message524_we0 => message_passing_pe20_U0_message524_we0,
        message524_d0 => message_passing_pe20_U0_message524_d0,
        message524_address1 => message_passing_pe20_U0_message524_address1,
        message524_ce1 => message_passing_pe20_U0_message524_ce1,
        message524_q1 => message322_q1,
        message525_address0 => message_passing_pe20_U0_message525_address0,
        message525_ce0 => message_passing_pe20_U0_message525_ce0,
        message525_we0 => message_passing_pe20_U0_message525_we0,
        message525_d0 => message_passing_pe20_U0_message525_d0,
        message525_address1 => message_passing_pe20_U0_message525_address1,
        message525_ce1 => message_passing_pe20_U0_message525_ce1,
        message525_q1 => message323_q1,
        message526_address0 => message_passing_pe20_U0_message526_address0,
        message526_ce0 => message_passing_pe20_U0_message526_ce0,
        message526_we0 => message_passing_pe20_U0_message526_we0,
        message526_d0 => message_passing_pe20_U0_message526_d0,
        message526_address1 => message_passing_pe20_U0_message526_address1,
        message526_ce1 => message_passing_pe20_U0_message526_ce1,
        message526_q1 => message324_q1,
        num_of_edges_per_pe_1_2 => num_of_edges_per_pe_1_2,
        edge_embedding_weights_V_2_0_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_0_address0,
        edge_embedding_weights_V_2_0_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce0,
        edge_embedding_weights_V_2_0_q0 => edge_embedding_weights_V_2_0_q0,
        edge_embedding_weights_V_2_0_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_0_address1,
        edge_embedding_weights_V_2_0_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce1,
        edge_embedding_weights_V_2_0_q1 => edge_embedding_weights_V_2_0_q1,
        edge_embedding_weights_V_2_0_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_0_address2,
        edge_embedding_weights_V_2_0_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce2,
        edge_embedding_weights_V_2_0_q2 => edge_embedding_weights_V_2_0_q2,
        edge_embedding_weights_V_2_1_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_1_address0,
        edge_embedding_weights_V_2_1_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce0,
        edge_embedding_weights_V_2_1_q0 => edge_embedding_weights_V_2_1_q0,
        edge_embedding_weights_V_2_1_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_1_address1,
        edge_embedding_weights_V_2_1_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce1,
        edge_embedding_weights_V_2_1_q1 => edge_embedding_weights_V_2_1_q1,
        edge_embedding_weights_V_2_1_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_1_address2,
        edge_embedding_weights_V_2_1_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce2,
        edge_embedding_weights_V_2_1_q2 => edge_embedding_weights_V_2_1_q2,
        edge_embedding_weights_V_2_2_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_2_address0,
        edge_embedding_weights_V_2_2_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce0,
        edge_embedding_weights_V_2_2_q0 => edge_embedding_weights_V_2_2_q0,
        edge_embedding_weights_V_2_2_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_2_address1,
        edge_embedding_weights_V_2_2_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce1,
        edge_embedding_weights_V_2_2_q1 => edge_embedding_weights_V_2_2_q1,
        edge_embedding_weights_V_2_2_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_2_address2,
        edge_embedding_weights_V_2_2_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce2,
        edge_embedding_weights_V_2_2_q2 => edge_embedding_weights_V_2_2_q2,
        edge_embedding_weights_V_2_3_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_3_address0,
        edge_embedding_weights_V_2_3_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce0,
        edge_embedding_weights_V_2_3_q0 => edge_embedding_weights_V_2_3_q0,
        edge_embedding_weights_V_2_3_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_3_address1,
        edge_embedding_weights_V_2_3_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce1,
        edge_embedding_weights_V_2_3_q1 => edge_embedding_weights_V_2_3_q1,
        edge_embedding_weights_V_2_3_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_3_address2,
        edge_embedding_weights_V_2_3_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce2,
        edge_embedding_weights_V_2_3_q2 => edge_embedding_weights_V_2_3_q2,
        neighbor_tables_1_2_address0 => message_passing_pe20_U0_neighbor_tables_1_2_address0,
        neighbor_tables_1_2_ce0 => message_passing_pe20_U0_neighbor_tables_1_2_ce0,
        neighbor_tables_1_2_q0 => neighbor_tables_1_2_q0,
        edge_attrs_1_2_address0 => message_passing_pe20_U0_edge_attrs_1_2_address0,
        edge_attrs_1_2_ce0 => message_passing_pe20_U0_edge_attrs_1_2_ce0,
        edge_attrs_1_2_q0 => edge_attrs_1_2_q0,
        degree_tables_1_2_address0 => message_passing_pe20_U0_degree_tables_1_2_address0,
        degree_tables_1_2_ce0 => message_passing_pe20_U0_degree_tables_1_2_ce0,
        degree_tables_1_2_q0 => degree_tables_1_2_q0,
        edge_embedding_weights_V_2_4_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_4_address0,
        edge_embedding_weights_V_2_4_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce0,
        edge_embedding_weights_V_2_4_q0 => edge_embedding_weights_V_2_4_q0,
        edge_embedding_weights_V_2_4_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_4_address1,
        edge_embedding_weights_V_2_4_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce1,
        edge_embedding_weights_V_2_4_q1 => edge_embedding_weights_V_2_4_q1,
        edge_embedding_weights_V_2_4_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_4_address2,
        edge_embedding_weights_V_2_4_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce2,
        edge_embedding_weights_V_2_4_q2 => edge_embedding_weights_V_2_4_q2,
        edge_embedding_weights_V_2_5_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_5_address0,
        edge_embedding_weights_V_2_5_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce0,
        edge_embedding_weights_V_2_5_q0 => edge_embedding_weights_V_2_5_q0,
        edge_embedding_weights_V_2_5_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_5_address1,
        edge_embedding_weights_V_2_5_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce1,
        edge_embedding_weights_V_2_5_q1 => edge_embedding_weights_V_2_5_q1,
        edge_embedding_weights_V_2_5_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_5_address2,
        edge_embedding_weights_V_2_5_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce2,
        edge_embedding_weights_V_2_5_q2 => edge_embedding_weights_V_2_5_q2,
        edge_embedding_weights_V_2_6_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_6_address0,
        edge_embedding_weights_V_2_6_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce0,
        edge_embedding_weights_V_2_6_q0 => edge_embedding_weights_V_2_6_q0,
        edge_embedding_weights_V_2_6_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_6_address1,
        edge_embedding_weights_V_2_6_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce1,
        edge_embedding_weights_V_2_6_q1 => edge_embedding_weights_V_2_6_q1,
        edge_embedding_weights_V_2_6_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_6_address2,
        edge_embedding_weights_V_2_6_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce2,
        edge_embedding_weights_V_2_6_q2 => edge_embedding_weights_V_2_6_q2,
        edge_embedding_weights_V_2_7_address0 => message_passing_pe20_U0_edge_embedding_weights_V_2_7_address0,
        edge_embedding_weights_V_2_7_ce0 => message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce0,
        edge_embedding_weights_V_2_7_q0 => edge_embedding_weights_V_2_7_q0,
        edge_embedding_weights_V_2_7_address1 => message_passing_pe20_U0_edge_embedding_weights_V_2_7_address1,
        edge_embedding_weights_V_2_7_ce1 => message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce1,
        edge_embedding_weights_V_2_7_q1 => edge_embedding_weights_V_2_7_q1,
        edge_embedding_weights_V_2_7_address2 => message_passing_pe20_U0_edge_embedding_weights_V_2_7_address2,
        edge_embedding_weights_V_2_7_ce2 => message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce2,
        edge_embedding_weights_V_2_7_q2 => edge_embedding_weights_V_2_7_q2);

    message_passing_pe21_U0 : component GIN_compute_graphs_message_passing_pe21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => message_passing_pe21_U0_ap_start,
        ap_done => message_passing_pe21_U0_ap_done,
        ap_continue => message_passing_pe21_U0_ap_continue,
        ap_idle => message_passing_pe21_U0_ap_idle,
        ap_ready => message_passing_pe21_U0_ap_ready,
        layer_num_dout => layer_num_c_dout,
        layer_num_empty_n => layer_num_c_empty_n,
        layer_num_read => message_passing_pe21_U0_layer_num_read,
        embeddings_per_node_0_0_0_0_0345_dout => mp_in_V_M_elems_V_3_0_0_dout,
        embeddings_per_node_0_0_0_0_0345_empty_n => mp_in_V_M_elems_V_3_0_0_empty_n,
        embeddings_per_node_0_0_0_0_0345_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0345_read,
        embeddings_per_node_0_0_0_0_0346_dout => mp_in_V_M_elems_V_3_0_1_dout,
        embeddings_per_node_0_0_0_0_0346_empty_n => mp_in_V_M_elems_V_3_0_1_empty_n,
        embeddings_per_node_0_0_0_0_0346_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0346_read,
        embeddings_per_node_0_0_0_0_0347_dout => mp_in_V_M_elems_V_3_0_2_dout,
        embeddings_per_node_0_0_0_0_0347_empty_n => mp_in_V_M_elems_V_3_0_2_empty_n,
        embeddings_per_node_0_0_0_0_0347_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0347_read,
        embeddings_per_node_0_0_0_0_0348_dout => mp_in_V_M_elems_V_3_0_3_dout,
        embeddings_per_node_0_0_0_0_0348_empty_n => mp_in_V_M_elems_V_3_0_3_empty_n,
        embeddings_per_node_0_0_0_0_0348_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0348_read,
        embeddings_per_node_0_0_0_0_0349_dout => mp_in_V_M_elems_V_3_0_4_dout,
        embeddings_per_node_0_0_0_0_0349_empty_n => mp_in_V_M_elems_V_3_0_4_empty_n,
        embeddings_per_node_0_0_0_0_0349_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0349_read,
        embeddings_per_node_0_0_0_0_0350_dout => mp_in_V_M_elems_V_3_0_5_dout,
        embeddings_per_node_0_0_0_0_0350_empty_n => mp_in_V_M_elems_V_3_0_5_empty_n,
        embeddings_per_node_0_0_0_0_0350_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0350_read,
        embeddings_per_node_0_0_0_0_0351_dout => mp_in_V_M_elems_V_3_0_6_dout,
        embeddings_per_node_0_0_0_0_0351_empty_n => mp_in_V_M_elems_V_3_0_6_empty_n,
        embeddings_per_node_0_0_0_0_0351_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0351_read,
        embeddings_per_node_0_0_0_0_0352_dout => mp_in_V_M_elems_V_3_0_7_dout,
        embeddings_per_node_0_0_0_0_0352_empty_n => mp_in_V_M_elems_V_3_0_7_empty_n,
        embeddings_per_node_0_0_0_0_0352_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0352_read,
        embeddings_per_node_0_0_0_0_035_dout => mp_in_V_M_elems_V_3_1_0_dout,
        embeddings_per_node_0_0_0_0_035_empty_n => mp_in_V_M_elems_V_3_1_0_empty_n,
        embeddings_per_node_0_0_0_0_035_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_035_read,
        embeddings_per_node_0_0_0_0_03553_dout => mp_in_V_M_elems_V_3_1_1_dout,
        embeddings_per_node_0_0_0_0_03553_empty_n => mp_in_V_M_elems_V_3_1_1_empty_n,
        embeddings_per_node_0_0_0_0_03553_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03553_read,
        embeddings_per_node_0_0_0_0_03554_dout => mp_in_V_M_elems_V_3_1_2_dout,
        embeddings_per_node_0_0_0_0_03554_empty_n => mp_in_V_M_elems_V_3_1_2_empty_n,
        embeddings_per_node_0_0_0_0_03554_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03554_read,
        embeddings_per_node_0_0_0_0_03555_dout => mp_in_V_M_elems_V_3_1_3_dout,
        embeddings_per_node_0_0_0_0_03555_empty_n => mp_in_V_M_elems_V_3_1_3_empty_n,
        embeddings_per_node_0_0_0_0_03555_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03555_read,
        embeddings_per_node_0_0_0_0_03556_dout => mp_in_V_M_elems_V_3_1_4_dout,
        embeddings_per_node_0_0_0_0_03556_empty_n => mp_in_V_M_elems_V_3_1_4_empty_n,
        embeddings_per_node_0_0_0_0_03556_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03556_read,
        embeddings_per_node_0_0_0_0_03557_dout => mp_in_V_M_elems_V_3_1_5_dout,
        embeddings_per_node_0_0_0_0_03557_empty_n => mp_in_V_M_elems_V_3_1_5_empty_n,
        embeddings_per_node_0_0_0_0_03557_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03557_read,
        embeddings_per_node_0_0_0_0_03558_dout => mp_in_V_M_elems_V_3_1_6_dout,
        embeddings_per_node_0_0_0_0_03558_empty_n => mp_in_V_M_elems_V_3_1_6_empty_n,
        embeddings_per_node_0_0_0_0_03558_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03558_read,
        embeddings_per_node_0_0_0_0_03559_dout => mp_in_V_M_elems_V_3_1_7_dout,
        embeddings_per_node_0_0_0_0_03559_empty_n => mp_in_V_M_elems_V_3_1_7_empty_n,
        embeddings_per_node_0_0_0_0_03559_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03559_read,
        message627_address0 => message_passing_pe21_U0_message627_address0,
        message627_ce0 => message_passing_pe21_U0_message627_ce0,
        message627_we0 => message_passing_pe21_U0_message627_we0,
        message627_d0 => message_passing_pe21_U0_message627_d0,
        message627_address1 => message_passing_pe21_U0_message627_address1,
        message627_ce1 => message_passing_pe21_U0_message627_ce1,
        message627_q1 => message425_q1,
        message628_address0 => message_passing_pe21_U0_message628_address0,
        message628_ce0 => message_passing_pe21_U0_message628_ce0,
        message628_we0 => message_passing_pe21_U0_message628_we0,
        message628_d0 => message_passing_pe21_U0_message628_d0,
        message628_address1 => message_passing_pe21_U0_message628_address1,
        message628_ce1 => message_passing_pe21_U0_message628_ce1,
        message628_q1 => message426_q1,
        message629_address0 => message_passing_pe21_U0_message629_address0,
        message629_ce0 => message_passing_pe21_U0_message629_ce0,
        message629_we0 => message_passing_pe21_U0_message629_we0,
        message629_d0 => message_passing_pe21_U0_message629_d0,
        message629_address1 => message_passing_pe21_U0_message629_address1,
        message629_ce1 => message_passing_pe21_U0_message629_ce1,
        message629_q1 => message427_q1,
        message630_address0 => message_passing_pe21_U0_message630_address0,
        message630_ce0 => message_passing_pe21_U0_message630_ce0,
        message630_we0 => message_passing_pe21_U0_message630_we0,
        message630_d0 => message_passing_pe21_U0_message630_d0,
        message630_address1 => message_passing_pe21_U0_message630_address1,
        message630_ce1 => message_passing_pe21_U0_message630_ce1,
        message630_q1 => message428_q1,
        message631_address0 => message_passing_pe21_U0_message631_address0,
        message631_ce0 => message_passing_pe21_U0_message631_ce0,
        message631_we0 => message_passing_pe21_U0_message631_we0,
        message631_d0 => message_passing_pe21_U0_message631_d0,
        message631_address1 => message_passing_pe21_U0_message631_address1,
        message631_ce1 => message_passing_pe21_U0_message631_ce1,
        message631_q1 => message429_q1,
        message632_address0 => message_passing_pe21_U0_message632_address0,
        message632_ce0 => message_passing_pe21_U0_message632_ce0,
        message632_we0 => message_passing_pe21_U0_message632_we0,
        message632_d0 => message_passing_pe21_U0_message632_d0,
        message632_address1 => message_passing_pe21_U0_message632_address1,
        message632_ce1 => message_passing_pe21_U0_message632_ce1,
        message632_q1 => message430_q1,
        message633_address0 => message_passing_pe21_U0_message633_address0,
        message633_ce0 => message_passing_pe21_U0_message633_ce0,
        message633_we0 => message_passing_pe21_U0_message633_we0,
        message633_d0 => message_passing_pe21_U0_message633_d0,
        message633_address1 => message_passing_pe21_U0_message633_address1,
        message633_ce1 => message_passing_pe21_U0_message633_ce1,
        message633_q1 => message431_q1,
        message634_address0 => message_passing_pe21_U0_message634_address0,
        message634_ce0 => message_passing_pe21_U0_message634_ce0,
        message634_we0 => message_passing_pe21_U0_message634_we0,
        message634_d0 => message_passing_pe21_U0_message634_d0,
        message634_address1 => message_passing_pe21_U0_message634_address1,
        message634_ce1 => message_passing_pe21_U0_message634_ce1,
        message634_q1 => message432_q1,
        num_of_edges_per_pe_1_3 => num_of_edges_per_pe_1_3,
        edge_embedding_weights_V_3_0_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_0_address0,
        edge_embedding_weights_V_3_0_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce0,
        edge_embedding_weights_V_3_0_q0 => edge_embedding_weights_V_3_0_q0,
        edge_embedding_weights_V_3_0_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_0_address1,
        edge_embedding_weights_V_3_0_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce1,
        edge_embedding_weights_V_3_0_q1 => edge_embedding_weights_V_3_0_q1,
        edge_embedding_weights_V_3_0_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_0_address2,
        edge_embedding_weights_V_3_0_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce2,
        edge_embedding_weights_V_3_0_q2 => edge_embedding_weights_V_3_0_q2,
        edge_embedding_weights_V_3_1_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_1_address0,
        edge_embedding_weights_V_3_1_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce0,
        edge_embedding_weights_V_3_1_q0 => edge_embedding_weights_V_3_1_q0,
        edge_embedding_weights_V_3_1_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_1_address1,
        edge_embedding_weights_V_3_1_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce1,
        edge_embedding_weights_V_3_1_q1 => edge_embedding_weights_V_3_1_q1,
        edge_embedding_weights_V_3_1_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_1_address2,
        edge_embedding_weights_V_3_1_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce2,
        edge_embedding_weights_V_3_1_q2 => edge_embedding_weights_V_3_1_q2,
        edge_embedding_weights_V_3_2_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_2_address0,
        edge_embedding_weights_V_3_2_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce0,
        edge_embedding_weights_V_3_2_q0 => edge_embedding_weights_V_3_2_q0,
        edge_embedding_weights_V_3_2_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_2_address1,
        edge_embedding_weights_V_3_2_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce1,
        edge_embedding_weights_V_3_2_q1 => edge_embedding_weights_V_3_2_q1,
        edge_embedding_weights_V_3_2_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_2_address2,
        edge_embedding_weights_V_3_2_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce2,
        edge_embedding_weights_V_3_2_q2 => edge_embedding_weights_V_3_2_q2,
        edge_embedding_weights_V_3_3_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_3_address0,
        edge_embedding_weights_V_3_3_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce0,
        edge_embedding_weights_V_3_3_q0 => edge_embedding_weights_V_3_3_q0,
        edge_embedding_weights_V_3_3_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_3_address1,
        edge_embedding_weights_V_3_3_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce1,
        edge_embedding_weights_V_3_3_q1 => edge_embedding_weights_V_3_3_q1,
        edge_embedding_weights_V_3_3_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_3_address2,
        edge_embedding_weights_V_3_3_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce2,
        edge_embedding_weights_V_3_3_q2 => edge_embedding_weights_V_3_3_q2,
        neighbor_tables_1_3_address0 => message_passing_pe21_U0_neighbor_tables_1_3_address0,
        neighbor_tables_1_3_ce0 => message_passing_pe21_U0_neighbor_tables_1_3_ce0,
        neighbor_tables_1_3_q0 => neighbor_tables_1_3_q0,
        edge_attrs_1_3_address0 => message_passing_pe21_U0_edge_attrs_1_3_address0,
        edge_attrs_1_3_ce0 => message_passing_pe21_U0_edge_attrs_1_3_ce0,
        edge_attrs_1_3_q0 => edge_attrs_1_3_q0,
        degree_tables_1_3_address0 => message_passing_pe21_U0_degree_tables_1_3_address0,
        degree_tables_1_3_ce0 => message_passing_pe21_U0_degree_tables_1_3_ce0,
        degree_tables_1_3_q0 => degree_tables_1_3_q0,
        edge_embedding_weights_V_3_4_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_4_address0,
        edge_embedding_weights_V_3_4_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce0,
        edge_embedding_weights_V_3_4_q0 => edge_embedding_weights_V_3_4_q0,
        edge_embedding_weights_V_3_4_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_4_address1,
        edge_embedding_weights_V_3_4_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce1,
        edge_embedding_weights_V_3_4_q1 => edge_embedding_weights_V_3_4_q1,
        edge_embedding_weights_V_3_4_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_4_address2,
        edge_embedding_weights_V_3_4_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce2,
        edge_embedding_weights_V_3_4_q2 => edge_embedding_weights_V_3_4_q2,
        edge_embedding_weights_V_3_5_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_5_address0,
        edge_embedding_weights_V_3_5_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce0,
        edge_embedding_weights_V_3_5_q0 => edge_embedding_weights_V_3_5_q0,
        edge_embedding_weights_V_3_5_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_5_address1,
        edge_embedding_weights_V_3_5_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce1,
        edge_embedding_weights_V_3_5_q1 => edge_embedding_weights_V_3_5_q1,
        edge_embedding_weights_V_3_5_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_5_address2,
        edge_embedding_weights_V_3_5_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce2,
        edge_embedding_weights_V_3_5_q2 => edge_embedding_weights_V_3_5_q2,
        edge_embedding_weights_V_3_6_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_6_address0,
        edge_embedding_weights_V_3_6_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce0,
        edge_embedding_weights_V_3_6_q0 => edge_embedding_weights_V_3_6_q0,
        edge_embedding_weights_V_3_6_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_6_address1,
        edge_embedding_weights_V_3_6_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce1,
        edge_embedding_weights_V_3_6_q1 => edge_embedding_weights_V_3_6_q1,
        edge_embedding_weights_V_3_6_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_6_address2,
        edge_embedding_weights_V_3_6_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce2,
        edge_embedding_weights_V_3_6_q2 => edge_embedding_weights_V_3_6_q2,
        edge_embedding_weights_V_3_7_address0 => message_passing_pe21_U0_edge_embedding_weights_V_3_7_address0,
        edge_embedding_weights_V_3_7_ce0 => message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce0,
        edge_embedding_weights_V_3_7_q0 => edge_embedding_weights_V_3_7_q0,
        edge_embedding_weights_V_3_7_address1 => message_passing_pe21_U0_edge_embedding_weights_V_3_7_address1,
        edge_embedding_weights_V_3_7_ce1 => message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce1,
        edge_embedding_weights_V_3_7_q1 => edge_embedding_weights_V_3_7_q1,
        edge_embedding_weights_V_3_7_address2 => message_passing_pe21_U0_edge_embedding_weights_V_3_7_address2,
        edge_embedding_weights_V_3_7_ce2 => message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce2,
        edge_embedding_weights_V_3_7_q2 => edge_embedding_weights_V_3_7_q2);

    layer_num_c_U : component GIN_compute_graphs_fifo_w3_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_layer_num_c_din,
        if_full_n => layer_num_c_full_n,
        if_write => entry_proc_U0_layer_num_c_write,
        if_dout => layer_num_c_dout,
        if_empty_n => layer_num_c_empty_n,
        if_read => message_passing_pe21_U0_layer_num_read);

    layer_num_c13_U : component GIN_compute_graphs_fifo_w3_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_layer_num_c13_din,
        if_full_n => layer_num_c13_full_n,
        if_write => entry_proc_U0_layer_num_c13_write,
        if_dout => layer_num_c13_dout,
        if_empty_n => layer_num_c13_empty_n,
        if_read => message_passing_pe20_U0_layer_num_read);

    layer_num_c14_U : component GIN_compute_graphs_fifo_w3_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_layer_num_c14_din,
        if_full_n => layer_num_c14_full_n,
        if_write => entry_proc_U0_layer_num_c14_write,
        if_dout => layer_num_c14_dout,
        if_empty_n => layer_num_c14_empty_n,
        if_read => message_passing_pe19_U0_layer_num_read);

    layer_num_c15_U : component GIN_compute_graphs_fifo_w3_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_layer_num_c15_din,
        if_full_n => layer_num_c15_full_n,
        if_write => entry_proc_U0_layer_num_c15_write,
        if_dout => layer_num_c15_dout,
        if_empty_n => layer_num_c15_empty_n,
        if_read => message_passing_pe18_U0_layer_num_read);

    mp_in_V_M_elems_V_0_0_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0_din,
        if_full_n => mp_in_V_M_elems_V_0_0_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0_write,
        if_dout => mp_in_V_M_elems_V_0_0_0_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_0_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0_read);

    mp_in_V_M_elems_V_0_0_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_01_din,
        if_full_n => mp_in_V_M_elems_V_0_0_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_01_write,
        if_dout => mp_in_V_M_elems_V_0_0_1_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_1_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_01_read);

    mp_in_V_M_elems_V_0_0_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02_din,
        if_full_n => mp_in_V_M_elems_V_0_0_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02_write,
        if_dout => mp_in_V_M_elems_V_0_0_2_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_2_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_02_read);

    mp_in_V_M_elems_V_0_0_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03_din,
        if_full_n => mp_in_V_M_elems_V_0_0_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03_write,
        if_dout => mp_in_V_M_elems_V_0_0_3_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_3_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_03_read);

    mp_in_V_M_elems_V_0_0_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04_din,
        if_full_n => mp_in_V_M_elems_V_0_0_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04_write,
        if_dout => mp_in_V_M_elems_V_0_0_4_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_4_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_04_read);

    mp_in_V_M_elems_V_0_0_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_05_din,
        if_full_n => mp_in_V_M_elems_V_0_0_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_05_write,
        if_dout => mp_in_V_M_elems_V_0_0_5_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_5_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_05_read);

    mp_in_V_M_elems_V_0_0_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_06_din,
        if_full_n => mp_in_V_M_elems_V_0_0_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_06_write,
        if_dout => mp_in_V_M_elems_V_0_0_6_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_6_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_06_read);

    mp_in_V_M_elems_V_0_0_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_07_din,
        if_full_n => mp_in_V_M_elems_V_0_0_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_07_write,
        if_dout => mp_in_V_M_elems_V_0_0_7_dout,
        if_empty_n => mp_in_V_M_elems_V_0_0_7_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_07_read);

    mp_in_V_M_elems_V_0_1_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_048_din,
        if_full_n => mp_in_V_M_elems_V_0_1_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_048_write,
        if_dout => mp_in_V_M_elems_V_0_1_0_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_0_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_018_read);

    mp_in_V_M_elems_V_0_1_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_049_din,
        if_full_n => mp_in_V_M_elems_V_0_1_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_049_write,
        if_dout => mp_in_V_M_elems_V_0_1_1_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_1_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_019_read);

    mp_in_V_M_elems_V_0_1_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0410_din,
        if_full_n => mp_in_V_M_elems_V_0_1_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0410_write,
        if_dout => mp_in_V_M_elems_V_0_1_2_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_2_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0110_read);

    mp_in_V_M_elems_V_0_1_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0411_din,
        if_full_n => mp_in_V_M_elems_V_0_1_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0411_write,
        if_dout => mp_in_V_M_elems_V_0_1_3_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_3_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0111_read);

    mp_in_V_M_elems_V_0_1_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0412_din,
        if_full_n => mp_in_V_M_elems_V_0_1_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0412_write,
        if_dout => mp_in_V_M_elems_V_0_1_4_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_4_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0112_read);

    mp_in_V_M_elems_V_0_1_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0413_din,
        if_full_n => mp_in_V_M_elems_V_0_1_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0413_write,
        if_dout => mp_in_V_M_elems_V_0_1_5_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_5_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0113_read);

    mp_in_V_M_elems_V_0_1_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0414_din,
        if_full_n => mp_in_V_M_elems_V_0_1_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0414_write,
        if_dout => mp_in_V_M_elems_V_0_1_6_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_6_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0114_read);

    mp_in_V_M_elems_V_0_1_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0415_din,
        if_full_n => mp_in_V_M_elems_V_0_1_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0415_write,
        if_dout => mp_in_V_M_elems_V_0_1_7_dout,
        if_empty_n => mp_in_V_M_elems_V_0_1_7_empty_n,
        if_read => message_passing_pe18_U0_embeddings_per_node_0_0_0_0_0115_read);

    mp_in_V_M_elems_V_1_0_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0216_din,
        if_full_n => mp_in_V_M_elems_V_1_0_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0216_write,
        if_dout => mp_in_V_M_elems_V_1_0_0_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_0_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_012_read);

    mp_in_V_M_elems_V_1_0_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0217_din,
        if_full_n => mp_in_V_M_elems_V_1_0_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0217_write,
        if_dout => mp_in_V_M_elems_V_1_0_1_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_1_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01216_read);

    mp_in_V_M_elems_V_1_0_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0218_din,
        if_full_n => mp_in_V_M_elems_V_1_0_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0218_write,
        if_dout => mp_in_V_M_elems_V_1_0_2_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_2_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01217_read);

    mp_in_V_M_elems_V_1_0_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0219_din,
        if_full_n => mp_in_V_M_elems_V_1_0_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0219_write,
        if_dout => mp_in_V_M_elems_V_1_0_3_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_3_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01218_read);

    mp_in_V_M_elems_V_1_0_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0220_din,
        if_full_n => mp_in_V_M_elems_V_1_0_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0220_write,
        if_dout => mp_in_V_M_elems_V_1_0_4_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_4_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01219_read);

    mp_in_V_M_elems_V_1_0_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0221_din,
        if_full_n => mp_in_V_M_elems_V_1_0_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0221_write,
        if_dout => mp_in_V_M_elems_V_1_0_5_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_5_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01220_read);

    mp_in_V_M_elems_V_1_0_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0222_din,
        if_full_n => mp_in_V_M_elems_V_1_0_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0222_write,
        if_dout => mp_in_V_M_elems_V_1_0_6_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_6_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01221_read);

    mp_in_V_M_elems_V_1_0_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0223_din,
        if_full_n => mp_in_V_M_elems_V_1_0_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0223_write,
        if_dout => mp_in_V_M_elems_V_1_0_7_dout,
        if_empty_n => mp_in_V_M_elems_V_1_0_7_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01222_read);

    mp_in_V_M_elems_V_1_1_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_025_din,
        if_full_n => mp_in_V_M_elems_V_1_1_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_025_write,
        if_dout => mp_in_V_M_elems_V_1_1_0_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_0_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_013_read);

    mp_in_V_M_elems_V_1_1_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02524_din,
        if_full_n => mp_in_V_M_elems_V_1_1_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02524_write,
        if_dout => mp_in_V_M_elems_V_1_1_1_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_1_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01323_read);

    mp_in_V_M_elems_V_1_1_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02525_din,
        if_full_n => mp_in_V_M_elems_V_1_1_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02525_write,
        if_dout => mp_in_V_M_elems_V_1_1_2_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_2_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01324_read);

    mp_in_V_M_elems_V_1_1_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02526_din,
        if_full_n => mp_in_V_M_elems_V_1_1_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02526_write,
        if_dout => mp_in_V_M_elems_V_1_1_3_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_3_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01325_read);

    mp_in_V_M_elems_V_1_1_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02527_din,
        if_full_n => mp_in_V_M_elems_V_1_1_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02527_write,
        if_dout => mp_in_V_M_elems_V_1_1_4_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_4_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01326_read);

    mp_in_V_M_elems_V_1_1_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02528_din,
        if_full_n => mp_in_V_M_elems_V_1_1_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02528_write,
        if_dout => mp_in_V_M_elems_V_1_1_5_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_5_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01327_read);

    mp_in_V_M_elems_V_1_1_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02529_din,
        if_full_n => mp_in_V_M_elems_V_1_1_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02529_write,
        if_dout => mp_in_V_M_elems_V_1_1_6_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_6_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01328_read);

    mp_in_V_M_elems_V_1_1_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02530_din,
        if_full_n => mp_in_V_M_elems_V_1_1_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_02530_write,
        if_dout => mp_in_V_M_elems_V_1_1_7_dout,
        if_empty_n => mp_in_V_M_elems_V_1_1_7_empty_n,
        if_read => message_passing_pe19_U0_embeddings_per_node_0_0_0_0_01329_read);

    mp_in_V_M_elems_V_2_0_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0331_din,
        if_full_n => mp_in_V_M_elems_V_2_0_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0331_write,
        if_dout => mp_in_V_M_elems_V_2_0_0_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_0_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0230_read);

    mp_in_V_M_elems_V_2_0_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0332_din,
        if_full_n => mp_in_V_M_elems_V_2_0_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0332_write,
        if_dout => mp_in_V_M_elems_V_2_0_1_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_1_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0231_read);

    mp_in_V_M_elems_V_2_0_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0333_din,
        if_full_n => mp_in_V_M_elems_V_2_0_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0333_write,
        if_dout => mp_in_V_M_elems_V_2_0_2_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_2_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0232_read);

    mp_in_V_M_elems_V_2_0_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0334_din,
        if_full_n => mp_in_V_M_elems_V_2_0_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0334_write,
        if_dout => mp_in_V_M_elems_V_2_0_3_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_3_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0233_read);

    mp_in_V_M_elems_V_2_0_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0335_din,
        if_full_n => mp_in_V_M_elems_V_2_0_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0335_write,
        if_dout => mp_in_V_M_elems_V_2_0_4_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_4_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0234_read);

    mp_in_V_M_elems_V_2_0_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0336_din,
        if_full_n => mp_in_V_M_elems_V_2_0_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0336_write,
        if_dout => mp_in_V_M_elems_V_2_0_5_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_5_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0235_read);

    mp_in_V_M_elems_V_2_0_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0337_din,
        if_full_n => mp_in_V_M_elems_V_2_0_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0337_write,
        if_dout => mp_in_V_M_elems_V_2_0_6_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_6_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0236_read);

    mp_in_V_M_elems_V_2_0_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0338_din,
        if_full_n => mp_in_V_M_elems_V_2_0_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_0338_write,
        if_dout => mp_in_V_M_elems_V_2_0_7_dout,
        if_empty_n => mp_in_V_M_elems_V_2_0_7_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_0237_read);

    mp_in_V_M_elems_V_2_1_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_036_din,
        if_full_n => mp_in_V_M_elems_V_2_1_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_036_write,
        if_dout => mp_in_V_M_elems_V_2_1_0_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_0_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_024_read);

    mp_in_V_M_elems_V_2_1_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03639_din,
        if_full_n => mp_in_V_M_elems_V_2_1_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03639_write,
        if_dout => mp_in_V_M_elems_V_2_1_1_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_1_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02438_read);

    mp_in_V_M_elems_V_2_1_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03640_din,
        if_full_n => mp_in_V_M_elems_V_2_1_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03640_write,
        if_dout => mp_in_V_M_elems_V_2_1_2_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_2_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02439_read);

    mp_in_V_M_elems_V_2_1_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03641_din,
        if_full_n => mp_in_V_M_elems_V_2_1_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03641_write,
        if_dout => mp_in_V_M_elems_V_2_1_3_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_3_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02440_read);

    mp_in_V_M_elems_V_2_1_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03642_din,
        if_full_n => mp_in_V_M_elems_V_2_1_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03642_write,
        if_dout => mp_in_V_M_elems_V_2_1_4_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_4_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02441_read);

    mp_in_V_M_elems_V_2_1_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03643_din,
        if_full_n => mp_in_V_M_elems_V_2_1_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03643_write,
        if_dout => mp_in_V_M_elems_V_2_1_5_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_5_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02442_read);

    mp_in_V_M_elems_V_2_1_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03644_din,
        if_full_n => mp_in_V_M_elems_V_2_1_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03644_write,
        if_dout => mp_in_V_M_elems_V_2_1_6_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_6_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02443_read);

    mp_in_V_M_elems_V_2_1_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03645_din,
        if_full_n => mp_in_V_M_elems_V_2_1_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_03645_write,
        if_dout => mp_in_V_M_elems_V_2_1_7_dout,
        if_empty_n => mp_in_V_M_elems_V_2_1_7_empty_n,
        if_read => message_passing_pe20_U0_embeddings_per_node_0_0_0_0_02444_read);

    mp_in_V_M_elems_V_3_0_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_047_din,
        if_full_n => mp_in_V_M_elems_V_3_0_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_047_write,
        if_dout => mp_in_V_M_elems_V_3_0_0_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_0_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0345_read);

    mp_in_V_M_elems_V_3_0_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04746_din,
        if_full_n => mp_in_V_M_elems_V_3_0_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04746_write,
        if_dout => mp_in_V_M_elems_V_3_0_1_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_1_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0346_read);

    mp_in_V_M_elems_V_3_0_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04747_din,
        if_full_n => mp_in_V_M_elems_V_3_0_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04747_write,
        if_dout => mp_in_V_M_elems_V_3_0_2_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_2_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0347_read);

    mp_in_V_M_elems_V_3_0_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04748_din,
        if_full_n => mp_in_V_M_elems_V_3_0_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04748_write,
        if_dout => mp_in_V_M_elems_V_3_0_3_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_3_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0348_read);

    mp_in_V_M_elems_V_3_0_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04749_din,
        if_full_n => mp_in_V_M_elems_V_3_0_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04749_write,
        if_dout => mp_in_V_M_elems_V_3_0_4_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_4_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0349_read);

    mp_in_V_M_elems_V_3_0_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04750_din,
        if_full_n => mp_in_V_M_elems_V_3_0_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04750_write,
        if_dout => mp_in_V_M_elems_V_3_0_5_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_5_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0350_read);

    mp_in_V_M_elems_V_3_0_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04751_din,
        if_full_n => mp_in_V_M_elems_V_3_0_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04751_write,
        if_dout => mp_in_V_M_elems_V_3_0_6_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_6_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0351_read);

    mp_in_V_M_elems_V_3_0_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04752_din,
        if_full_n => mp_in_V_M_elems_V_3_0_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04752_write,
        if_dout => mp_in_V_M_elems_V_3_0_7_dout,
        if_empty_n => mp_in_V_M_elems_V_3_0_7_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_0352_read);

    mp_in_V_M_elems_V_3_1_0_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04853_din,
        if_full_n => mp_in_V_M_elems_V_3_1_0_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04853_write,
        if_dout => mp_in_V_M_elems_V_3_1_0_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_0_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_035_read);

    mp_in_V_M_elems_V_3_1_1_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04854_din,
        if_full_n => mp_in_V_M_elems_V_3_1_1_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04854_write,
        if_dout => mp_in_V_M_elems_V_3_1_1_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_1_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03553_read);

    mp_in_V_M_elems_V_3_1_2_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04855_din,
        if_full_n => mp_in_V_M_elems_V_3_1_2_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04855_write,
        if_dout => mp_in_V_M_elems_V_3_1_2_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_2_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03554_read);

    mp_in_V_M_elems_V_3_1_3_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04856_din,
        if_full_n => mp_in_V_M_elems_V_3_1_3_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04856_write,
        if_dout => mp_in_V_M_elems_V_3_1_3_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_3_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03555_read);

    mp_in_V_M_elems_V_3_1_4_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04857_din,
        if_full_n => mp_in_V_M_elems_V_3_1_4_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04857_write,
        if_dout => mp_in_V_M_elems_V_3_1_4_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_4_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03556_read);

    mp_in_V_M_elems_V_3_1_5_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04858_din,
        if_full_n => mp_in_V_M_elems_V_3_1_5_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04858_write,
        if_dout => mp_in_V_M_elems_V_3_1_5_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_5_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03557_read);

    mp_in_V_M_elems_V_3_1_6_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04859_din,
        if_full_n => mp_in_V_M_elems_V_3_1_6_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04859_write,
        if_dout => mp_in_V_M_elems_V_3_1_6_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_6_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03558_read);

    mp_in_V_M_elems_V_3_1_7_U : component GIN_compute_graphs_fifo_w16_d260_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04860_din,
        if_full_n => mp_in_V_M_elems_V_3_1_7_full_n,
        if_write => ne_to_mp_adapter_U0_mp_in_0_0_0_0_04860_write,
        if_dout => mp_in_V_M_elems_V_3_1_7_dout,
        if_empty_n => mp_in_V_M_elems_V_3_1_7_empty_n,
        if_read => message_passing_pe21_U0_embeddings_per_node_0_0_0_0_03559_read);





    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_message_passing_pe18_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_message_passing_pe18_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_message_passing_pe18_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_message_passing_pe18_U0_ap_ready <= ap_sync_message_passing_pe18_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_message_passing_pe19_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_message_passing_pe19_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_message_passing_pe19_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_message_passing_pe19_U0_ap_ready <= ap_sync_message_passing_pe19_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_message_passing_pe20_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_message_passing_pe20_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_message_passing_pe20_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_message_passing_pe20_U0_ap_ready <= ap_sync_message_passing_pe20_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_message_passing_pe21_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_message_passing_pe21_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_message_passing_pe21_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_message_passing_pe21_U0_ap_ready <= ap_sync_message_passing_pe21_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_ne_to_mp_adapter_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_ne_to_mp_adapter_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_ne_to_mp_adapter_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_ne_to_mp_adapter_U0_ap_ready <= ap_sync_ne_to_mp_adapter_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_done <= ap_sync_done;
    ap_idle <= (ne_to_mp_adapter_U0_ap_idle and message_passing_pe21_U0_ap_idle and message_passing_pe20_U0_ap_idle and message_passing_pe19_U0_ap_idle and message_passing_pe18_U0_ap_idle and entry_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (message_passing_pe21_U0_ap_done and message_passing_pe20_U0_ap_done and message_passing_pe19_U0_ap_done and message_passing_pe18_U0_ap_done);
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_message_passing_pe18_U0_ap_ready <= (message_passing_pe18_U0_ap_ready or ap_sync_reg_message_passing_pe18_U0_ap_ready);
    ap_sync_message_passing_pe19_U0_ap_ready <= (message_passing_pe19_U0_ap_ready or ap_sync_reg_message_passing_pe19_U0_ap_ready);
    ap_sync_message_passing_pe20_U0_ap_ready <= (message_passing_pe20_U0_ap_ready or ap_sync_reg_message_passing_pe20_U0_ap_ready);
    ap_sync_message_passing_pe21_U0_ap_ready <= (message_passing_pe21_U0_ap_ready or ap_sync_reg_message_passing_pe21_U0_ap_ready);
    ap_sync_ne_to_mp_adapter_U0_ap_ready <= (ne_to_mp_adapter_U0_ap_ready or ap_sync_reg_ne_to_mp_adapter_U0_ap_ready);
    ap_sync_ready <= (ap_sync_ne_to_mp_adapter_U0_ap_ready and ap_sync_message_passing_pe21_U0_ap_ready and ap_sync_message_passing_pe20_U0_ap_ready and ap_sync_message_passing_pe19_U0_ap_ready and ap_sync_message_passing_pe18_U0_ap_ready and ap_sync_entry_proc_U0_ap_ready);
    degree_tables_1_0_address0 <= message_passing_pe18_U0_degree_tables_1_0_address0;
    degree_tables_1_0_address1 <= ap_const_lv9_0;
    degree_tables_1_0_ce0 <= message_passing_pe18_U0_degree_tables_1_0_ce0;
    degree_tables_1_0_ce1 <= ap_const_logic_0;
    degree_tables_1_0_d0 <= ap_const_lv64_0;
    degree_tables_1_0_d1 <= ap_const_lv64_0;
    degree_tables_1_0_we0 <= ap_const_logic_0;
    degree_tables_1_0_we1 <= ap_const_logic_0;
    degree_tables_1_1_address0 <= message_passing_pe19_U0_degree_tables_1_1_address0;
    degree_tables_1_1_address1 <= ap_const_lv9_0;
    degree_tables_1_1_ce0 <= message_passing_pe19_U0_degree_tables_1_1_ce0;
    degree_tables_1_1_ce1 <= ap_const_logic_0;
    degree_tables_1_1_d0 <= ap_const_lv64_0;
    degree_tables_1_1_d1 <= ap_const_lv64_0;
    degree_tables_1_1_we0 <= ap_const_logic_0;
    degree_tables_1_1_we1 <= ap_const_logic_0;
    degree_tables_1_2_address0 <= message_passing_pe20_U0_degree_tables_1_2_address0;
    degree_tables_1_2_address1 <= ap_const_lv9_0;
    degree_tables_1_2_ce0 <= message_passing_pe20_U0_degree_tables_1_2_ce0;
    degree_tables_1_2_ce1 <= ap_const_logic_0;
    degree_tables_1_2_d0 <= ap_const_lv64_0;
    degree_tables_1_2_d1 <= ap_const_lv64_0;
    degree_tables_1_2_we0 <= ap_const_logic_0;
    degree_tables_1_2_we1 <= ap_const_logic_0;
    degree_tables_1_3_address0 <= message_passing_pe21_U0_degree_tables_1_3_address0;
    degree_tables_1_3_address1 <= ap_const_lv9_0;
    degree_tables_1_3_ce0 <= message_passing_pe21_U0_degree_tables_1_3_ce0;
    degree_tables_1_3_ce1 <= ap_const_logic_0;
    degree_tables_1_3_d0 <= ap_const_lv64_0;
    degree_tables_1_3_d1 <= ap_const_lv64_0;
    degree_tables_1_3_we0 <= ap_const_logic_0;
    degree_tables_1_3_we1 <= ap_const_logic_0;
    edge_attrs_1_0_address0 <= message_passing_pe18_U0_edge_attrs_1_0_address0;
    edge_attrs_1_0_address1 <= ap_const_lv9_0;
    edge_attrs_1_0_ce0 <= message_passing_pe18_U0_edge_attrs_1_0_ce0;
    edge_attrs_1_0_ce1 <= ap_const_logic_0;
    edge_attrs_1_0_d0 <= ap_const_lv71_0;
    edge_attrs_1_0_d1 <= ap_const_lv71_0;
    edge_attrs_1_0_we0 <= ap_const_logic_0;
    edge_attrs_1_0_we1 <= ap_const_logic_0;
    edge_attrs_1_1_address0 <= message_passing_pe19_U0_edge_attrs_1_1_address0;
    edge_attrs_1_1_address1 <= ap_const_lv9_0;
    edge_attrs_1_1_ce0 <= message_passing_pe19_U0_edge_attrs_1_1_ce0;
    edge_attrs_1_1_ce1 <= ap_const_logic_0;
    edge_attrs_1_1_d0 <= ap_const_lv71_0;
    edge_attrs_1_1_d1 <= ap_const_lv71_0;
    edge_attrs_1_1_we0 <= ap_const_logic_0;
    edge_attrs_1_1_we1 <= ap_const_logic_0;
    edge_attrs_1_2_address0 <= message_passing_pe20_U0_edge_attrs_1_2_address0;
    edge_attrs_1_2_address1 <= ap_const_lv9_0;
    edge_attrs_1_2_ce0 <= message_passing_pe20_U0_edge_attrs_1_2_ce0;
    edge_attrs_1_2_ce1 <= ap_const_logic_0;
    edge_attrs_1_2_d0 <= ap_const_lv71_0;
    edge_attrs_1_2_d1 <= ap_const_lv71_0;
    edge_attrs_1_2_we0 <= ap_const_logic_0;
    edge_attrs_1_2_we1 <= ap_const_logic_0;
    edge_attrs_1_3_address0 <= message_passing_pe21_U0_edge_attrs_1_3_address0;
    edge_attrs_1_3_address1 <= ap_const_lv9_0;
    edge_attrs_1_3_ce0 <= message_passing_pe21_U0_edge_attrs_1_3_ce0;
    edge_attrs_1_3_ce1 <= ap_const_logic_0;
    edge_attrs_1_3_d0 <= ap_const_lv71_0;
    edge_attrs_1_3_d1 <= ap_const_lv71_0;
    edge_attrs_1_3_we0 <= ap_const_logic_0;
    edge_attrs_1_3_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_0_address0;
    edge_embedding_weights_V_0_0_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_0_address1;
    edge_embedding_weights_V_0_0_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_0_address2;
    edge_embedding_weights_V_0_0_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_0_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce0;
    edge_embedding_weights_V_0_0_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce1;
    edge_embedding_weights_V_0_0_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_0_ce2;
    edge_embedding_weights_V_0_0_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_0_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_0_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_1_address0;
    edge_embedding_weights_V_0_1_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_1_address1;
    edge_embedding_weights_V_0_1_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_1_address2;
    edge_embedding_weights_V_0_1_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_1_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce0;
    edge_embedding_weights_V_0_1_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce1;
    edge_embedding_weights_V_0_1_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_1_ce2;
    edge_embedding_weights_V_0_1_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_1_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_1_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_2_address0;
    edge_embedding_weights_V_0_2_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_2_address1;
    edge_embedding_weights_V_0_2_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_2_address2;
    edge_embedding_weights_V_0_2_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_2_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce0;
    edge_embedding_weights_V_0_2_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce1;
    edge_embedding_weights_V_0_2_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_2_ce2;
    edge_embedding_weights_V_0_2_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_2_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_2_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_3_address0;
    edge_embedding_weights_V_0_3_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_3_address1;
    edge_embedding_weights_V_0_3_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_3_address2;
    edge_embedding_weights_V_0_3_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_3_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce0;
    edge_embedding_weights_V_0_3_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce1;
    edge_embedding_weights_V_0_3_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_3_ce2;
    edge_embedding_weights_V_0_3_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_3_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_3_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_4_address0;
    edge_embedding_weights_V_0_4_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_4_address1;
    edge_embedding_weights_V_0_4_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_4_address2;
    edge_embedding_weights_V_0_4_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_4_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce0;
    edge_embedding_weights_V_0_4_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce1;
    edge_embedding_weights_V_0_4_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_4_ce2;
    edge_embedding_weights_V_0_4_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_4_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_4_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_5_address0;
    edge_embedding_weights_V_0_5_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_5_address1;
    edge_embedding_weights_V_0_5_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_5_address2;
    edge_embedding_weights_V_0_5_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_5_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce0;
    edge_embedding_weights_V_0_5_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce1;
    edge_embedding_weights_V_0_5_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_5_ce2;
    edge_embedding_weights_V_0_5_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_5_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_5_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_6_address0;
    edge_embedding_weights_V_0_6_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_6_address1;
    edge_embedding_weights_V_0_6_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_6_address2;
    edge_embedding_weights_V_0_6_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_6_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce0;
    edge_embedding_weights_V_0_6_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce1;
    edge_embedding_weights_V_0_6_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_6_ce2;
    edge_embedding_weights_V_0_6_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_6_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_6_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_address0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_7_address0;
    edge_embedding_weights_V_0_7_address1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_7_address1;
    edge_embedding_weights_V_0_7_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_7_address2;
    edge_embedding_weights_V_0_7_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_0_7_ce0 <= message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce0;
    edge_embedding_weights_V_0_7_ce1 <= message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce1;
    edge_embedding_weights_V_0_7_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce2 <= message_passing_pe18_U0_edge_embedding_weights_V_0_7_ce2;
    edge_embedding_weights_V_0_7_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_0_7_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_0_7_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_0_address0;
    edge_embedding_weights_V_1_0_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_0_address1;
    edge_embedding_weights_V_1_0_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_0_address2;
    edge_embedding_weights_V_1_0_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_0_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce0;
    edge_embedding_weights_V_1_0_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce1;
    edge_embedding_weights_V_1_0_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_0_ce2;
    edge_embedding_weights_V_1_0_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_0_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_0_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_1_address0;
    edge_embedding_weights_V_1_1_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_1_address1;
    edge_embedding_weights_V_1_1_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_1_address2;
    edge_embedding_weights_V_1_1_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_1_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce0;
    edge_embedding_weights_V_1_1_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce1;
    edge_embedding_weights_V_1_1_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_1_ce2;
    edge_embedding_weights_V_1_1_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_1_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_1_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_2_address0;
    edge_embedding_weights_V_1_2_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_2_address1;
    edge_embedding_weights_V_1_2_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_2_address2;
    edge_embedding_weights_V_1_2_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_2_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce0;
    edge_embedding_weights_V_1_2_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce1;
    edge_embedding_weights_V_1_2_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_2_ce2;
    edge_embedding_weights_V_1_2_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_2_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_2_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_3_address0;
    edge_embedding_weights_V_1_3_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_3_address1;
    edge_embedding_weights_V_1_3_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_3_address2;
    edge_embedding_weights_V_1_3_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_3_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce0;
    edge_embedding_weights_V_1_3_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce1;
    edge_embedding_weights_V_1_3_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_3_ce2;
    edge_embedding_weights_V_1_3_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_3_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_3_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_4_address0;
    edge_embedding_weights_V_1_4_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_4_address1;
    edge_embedding_weights_V_1_4_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_4_address2;
    edge_embedding_weights_V_1_4_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_4_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce0;
    edge_embedding_weights_V_1_4_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce1;
    edge_embedding_weights_V_1_4_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_4_ce2;
    edge_embedding_weights_V_1_4_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_4_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_4_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_5_address0;
    edge_embedding_weights_V_1_5_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_5_address1;
    edge_embedding_weights_V_1_5_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_5_address2;
    edge_embedding_weights_V_1_5_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_5_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce0;
    edge_embedding_weights_V_1_5_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce1;
    edge_embedding_weights_V_1_5_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_5_ce2;
    edge_embedding_weights_V_1_5_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_5_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_5_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_6_address0;
    edge_embedding_weights_V_1_6_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_6_address1;
    edge_embedding_weights_V_1_6_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_6_address2;
    edge_embedding_weights_V_1_6_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_6_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce0;
    edge_embedding_weights_V_1_6_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce1;
    edge_embedding_weights_V_1_6_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_6_ce2;
    edge_embedding_weights_V_1_6_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_6_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_6_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_address0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_7_address0;
    edge_embedding_weights_V_1_7_address1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_7_address1;
    edge_embedding_weights_V_1_7_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_7_address2;
    edge_embedding_weights_V_1_7_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_1_7_ce0 <= message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce0;
    edge_embedding_weights_V_1_7_ce1 <= message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce1;
    edge_embedding_weights_V_1_7_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce2 <= message_passing_pe19_U0_edge_embedding_weights_V_1_7_ce2;
    edge_embedding_weights_V_1_7_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_1_7_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_1_7_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_0_address0;
    edge_embedding_weights_V_2_0_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_0_address1;
    edge_embedding_weights_V_2_0_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_0_address2;
    edge_embedding_weights_V_2_0_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_0_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce0;
    edge_embedding_weights_V_2_0_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce1;
    edge_embedding_weights_V_2_0_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_0_ce2;
    edge_embedding_weights_V_2_0_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_0_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_0_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_1_address0;
    edge_embedding_weights_V_2_1_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_1_address1;
    edge_embedding_weights_V_2_1_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_1_address2;
    edge_embedding_weights_V_2_1_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_1_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce0;
    edge_embedding_weights_V_2_1_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce1;
    edge_embedding_weights_V_2_1_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_1_ce2;
    edge_embedding_weights_V_2_1_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_1_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_1_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_2_address0;
    edge_embedding_weights_V_2_2_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_2_address1;
    edge_embedding_weights_V_2_2_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_2_address2;
    edge_embedding_weights_V_2_2_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_2_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce0;
    edge_embedding_weights_V_2_2_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce1;
    edge_embedding_weights_V_2_2_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_2_ce2;
    edge_embedding_weights_V_2_2_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_2_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_2_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_3_address0;
    edge_embedding_weights_V_2_3_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_3_address1;
    edge_embedding_weights_V_2_3_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_3_address2;
    edge_embedding_weights_V_2_3_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_3_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce0;
    edge_embedding_weights_V_2_3_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce1;
    edge_embedding_weights_V_2_3_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_3_ce2;
    edge_embedding_weights_V_2_3_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_3_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_3_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_4_address0;
    edge_embedding_weights_V_2_4_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_4_address1;
    edge_embedding_weights_V_2_4_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_4_address2;
    edge_embedding_weights_V_2_4_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_4_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce0;
    edge_embedding_weights_V_2_4_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce1;
    edge_embedding_weights_V_2_4_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_4_ce2;
    edge_embedding_weights_V_2_4_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_4_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_4_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_5_address0;
    edge_embedding_weights_V_2_5_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_5_address1;
    edge_embedding_weights_V_2_5_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_5_address2;
    edge_embedding_weights_V_2_5_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_5_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce0;
    edge_embedding_weights_V_2_5_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce1;
    edge_embedding_weights_V_2_5_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_5_ce2;
    edge_embedding_weights_V_2_5_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_5_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_5_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_6_address0;
    edge_embedding_weights_V_2_6_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_6_address1;
    edge_embedding_weights_V_2_6_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_6_address2;
    edge_embedding_weights_V_2_6_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_6_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce0;
    edge_embedding_weights_V_2_6_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce1;
    edge_embedding_weights_V_2_6_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_6_ce2;
    edge_embedding_weights_V_2_6_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_6_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_6_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_address0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_7_address0;
    edge_embedding_weights_V_2_7_address1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_7_address1;
    edge_embedding_weights_V_2_7_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_7_address2;
    edge_embedding_weights_V_2_7_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_2_7_ce0 <= message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce0;
    edge_embedding_weights_V_2_7_ce1 <= message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce1;
    edge_embedding_weights_V_2_7_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce2 <= message_passing_pe20_U0_edge_embedding_weights_V_2_7_ce2;
    edge_embedding_weights_V_2_7_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_2_7_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_2_7_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_0_address0;
    edge_embedding_weights_V_3_0_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_0_address1;
    edge_embedding_weights_V_3_0_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_0_address2;
    edge_embedding_weights_V_3_0_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_0_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce0;
    edge_embedding_weights_V_3_0_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce1;
    edge_embedding_weights_V_3_0_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_0_ce2;
    edge_embedding_weights_V_3_0_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_0_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_0_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_1_address0;
    edge_embedding_weights_V_3_1_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_1_address1;
    edge_embedding_weights_V_3_1_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_1_address2;
    edge_embedding_weights_V_3_1_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_1_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce0;
    edge_embedding_weights_V_3_1_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce1;
    edge_embedding_weights_V_3_1_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_1_ce2;
    edge_embedding_weights_V_3_1_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_1_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_1_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_2_address0;
    edge_embedding_weights_V_3_2_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_2_address1;
    edge_embedding_weights_V_3_2_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_2_address2;
    edge_embedding_weights_V_3_2_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_2_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce0;
    edge_embedding_weights_V_3_2_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce1;
    edge_embedding_weights_V_3_2_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_2_ce2;
    edge_embedding_weights_V_3_2_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_2_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_2_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_3_address0;
    edge_embedding_weights_V_3_3_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_3_address1;
    edge_embedding_weights_V_3_3_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_3_address2;
    edge_embedding_weights_V_3_3_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_3_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce0;
    edge_embedding_weights_V_3_3_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce1;
    edge_embedding_weights_V_3_3_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_3_ce2;
    edge_embedding_weights_V_3_3_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_3_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_3_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_4_address0;
    edge_embedding_weights_V_3_4_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_4_address1;
    edge_embedding_weights_V_3_4_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_4_address2;
    edge_embedding_weights_V_3_4_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_4_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce0;
    edge_embedding_weights_V_3_4_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce1;
    edge_embedding_weights_V_3_4_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_4_ce2;
    edge_embedding_weights_V_3_4_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_4_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_4_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_5_address0;
    edge_embedding_weights_V_3_5_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_5_address1;
    edge_embedding_weights_V_3_5_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_5_address2;
    edge_embedding_weights_V_3_5_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_5_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce0;
    edge_embedding_weights_V_3_5_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce1;
    edge_embedding_weights_V_3_5_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_5_ce2;
    edge_embedding_weights_V_3_5_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_5_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_5_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_6_address0;
    edge_embedding_weights_V_3_6_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_6_address1;
    edge_embedding_weights_V_3_6_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_6_address2;
    edge_embedding_weights_V_3_6_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_6_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce0;
    edge_embedding_weights_V_3_6_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce1;
    edge_embedding_weights_V_3_6_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_6_ce2;
    edge_embedding_weights_V_3_6_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_6_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_6_we9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_address0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_7_address0;
    edge_embedding_weights_V_3_7_address1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_7_address1;
    edge_embedding_weights_V_3_7_address10 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address11 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address12 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address13 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address14 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address15 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address16 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_7_address2;
    edge_embedding_weights_V_3_7_address3 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address4 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address5 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address6 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address7 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address8 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_address9 <= ap_const_lv10_0;
    edge_embedding_weights_V_3_7_ce0 <= message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce0;
    edge_embedding_weights_V_3_7_ce1 <= message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce1;
    edge_embedding_weights_V_3_7_ce10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce2 <= message_passing_pe21_U0_edge_embedding_weights_V_3_7_ce2;
    edge_embedding_weights_V_3_7_ce3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_ce9 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_d0 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d1 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d10 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d11 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d12 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d13 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d14 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d15 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d16 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d2 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d3 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d4 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d5 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d6 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d7 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d8 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_d9 <= ap_const_lv16_0;
    edge_embedding_weights_V_3_7_we0 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we1 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we10 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we11 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we12 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we13 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we14 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we15 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we16 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we2 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we3 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we4 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we5 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we6 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we7 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we8 <= ap_const_logic_0;
    edge_embedding_weights_V_3_7_we9 <= ap_const_logic_0;
    entry_proc_U0_ap_continue <= ap_const_logic_1;
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    message10_address0 <= message_passing_pe18_U0_message12_address0;
    message10_address1 <= message_passing_pe18_U0_message12_address1;
    message10_ce0 <= message_passing_pe18_U0_message12_ce0;
    message10_ce1 <= message_passing_pe18_U0_message12_ce1;
    message10_d0 <= message_passing_pe18_U0_message12_d0;
    message10_d1 <= ap_const_lv16_0;
    message10_we0 <= message_passing_pe18_U0_message12_we0;
    message10_we1 <= ap_const_logic_0;
    message211_address0 <= message_passing_pe19_U0_message413_address0;
    message211_address1 <= message_passing_pe19_U0_message413_address1;
    message211_ce0 <= message_passing_pe19_U0_message413_ce0;
    message211_ce1 <= message_passing_pe19_U0_message413_ce1;
    message211_d0 <= message_passing_pe19_U0_message413_d0;
    message211_d1 <= ap_const_lv16_0;
    message211_we0 <= message_passing_pe19_U0_message413_we0;
    message211_we1 <= ap_const_logic_0;
    message212_address0 <= message_passing_pe19_U0_message414_address0;
    message212_address1 <= message_passing_pe19_U0_message414_address1;
    message212_ce0 <= message_passing_pe19_U0_message414_ce0;
    message212_ce1 <= message_passing_pe19_U0_message414_ce1;
    message212_d0 <= message_passing_pe19_U0_message414_d0;
    message212_d1 <= ap_const_lv16_0;
    message212_we0 <= message_passing_pe19_U0_message414_we0;
    message212_we1 <= ap_const_logic_0;
    message213_address0 <= message_passing_pe19_U0_message415_address0;
    message213_address1 <= message_passing_pe19_U0_message415_address1;
    message213_ce0 <= message_passing_pe19_U0_message415_ce0;
    message213_ce1 <= message_passing_pe19_U0_message415_ce1;
    message213_d0 <= message_passing_pe19_U0_message415_d0;
    message213_d1 <= ap_const_lv16_0;
    message213_we0 <= message_passing_pe19_U0_message415_we0;
    message213_we1 <= ap_const_logic_0;
    message214_address0 <= message_passing_pe19_U0_message416_address0;
    message214_address1 <= message_passing_pe19_U0_message416_address1;
    message214_ce0 <= message_passing_pe19_U0_message416_ce0;
    message214_ce1 <= message_passing_pe19_U0_message416_ce1;
    message214_d0 <= message_passing_pe19_U0_message416_d0;
    message214_d1 <= ap_const_lv16_0;
    message214_we0 <= message_passing_pe19_U0_message416_we0;
    message214_we1 <= ap_const_logic_0;
    message215_address0 <= message_passing_pe19_U0_message417_address0;
    message215_address1 <= message_passing_pe19_U0_message417_address1;
    message215_ce0 <= message_passing_pe19_U0_message417_ce0;
    message215_ce1 <= message_passing_pe19_U0_message417_ce1;
    message215_d0 <= message_passing_pe19_U0_message417_d0;
    message215_d1 <= ap_const_lv16_0;
    message215_we0 <= message_passing_pe19_U0_message417_we0;
    message215_we1 <= ap_const_logic_0;
    message216_address0 <= message_passing_pe19_U0_message418_address0;
    message216_address1 <= message_passing_pe19_U0_message418_address1;
    message216_ce0 <= message_passing_pe19_U0_message418_ce0;
    message216_ce1 <= message_passing_pe19_U0_message418_ce1;
    message216_d0 <= message_passing_pe19_U0_message418_d0;
    message216_d1 <= ap_const_lv16_0;
    message216_we0 <= message_passing_pe19_U0_message418_we0;
    message216_we1 <= ap_const_logic_0;
    message217_address0 <= message_passing_pe19_U0_message419_address0;
    message217_address1 <= message_passing_pe19_U0_message419_address1;
    message217_ce0 <= message_passing_pe19_U0_message419_ce0;
    message217_ce1 <= message_passing_pe19_U0_message419_ce1;
    message217_d0 <= message_passing_pe19_U0_message419_d0;
    message217_d1 <= ap_const_lv16_0;
    message217_we0 <= message_passing_pe19_U0_message419_we0;
    message217_we1 <= ap_const_logic_0;
    message2_address0 <= message_passing_pe19_U0_message4_address0;
    message2_address1 <= message_passing_pe19_U0_message4_address1;
    message2_ce0 <= message_passing_pe19_U0_message4_ce0;
    message2_ce1 <= message_passing_pe19_U0_message4_ce1;
    message2_d0 <= message_passing_pe19_U0_message4_d0;
    message2_d1 <= ap_const_lv16_0;
    message2_we0 <= message_passing_pe19_U0_message4_we0;
    message2_we1 <= ap_const_logic_0;
    message318_address0 <= message_passing_pe20_U0_message520_address0;
    message318_address1 <= message_passing_pe20_U0_message520_address1;
    message318_ce0 <= message_passing_pe20_U0_message520_ce0;
    message318_ce1 <= message_passing_pe20_U0_message520_ce1;
    message318_d0 <= message_passing_pe20_U0_message520_d0;
    message318_d1 <= ap_const_lv16_0;
    message318_we0 <= message_passing_pe20_U0_message520_we0;
    message318_we1 <= ap_const_logic_0;
    message319_address0 <= message_passing_pe20_U0_message521_address0;
    message319_address1 <= message_passing_pe20_U0_message521_address1;
    message319_ce0 <= message_passing_pe20_U0_message521_ce0;
    message319_ce1 <= message_passing_pe20_U0_message521_ce1;
    message319_d0 <= message_passing_pe20_U0_message521_d0;
    message319_d1 <= ap_const_lv16_0;
    message319_we0 <= message_passing_pe20_U0_message521_we0;
    message319_we1 <= ap_const_logic_0;
    message320_address0 <= message_passing_pe20_U0_message522_address0;
    message320_address1 <= message_passing_pe20_U0_message522_address1;
    message320_ce0 <= message_passing_pe20_U0_message522_ce0;
    message320_ce1 <= message_passing_pe20_U0_message522_ce1;
    message320_d0 <= message_passing_pe20_U0_message522_d0;
    message320_d1 <= ap_const_lv16_0;
    message320_we0 <= message_passing_pe20_U0_message522_we0;
    message320_we1 <= ap_const_logic_0;
    message321_address0 <= message_passing_pe20_U0_message523_address0;
    message321_address1 <= message_passing_pe20_U0_message523_address1;
    message321_ce0 <= message_passing_pe20_U0_message523_ce0;
    message321_ce1 <= message_passing_pe20_U0_message523_ce1;
    message321_d0 <= message_passing_pe20_U0_message523_d0;
    message321_d1 <= ap_const_lv16_0;
    message321_we0 <= message_passing_pe20_U0_message523_we0;
    message321_we1 <= ap_const_logic_0;
    message322_address0 <= message_passing_pe20_U0_message524_address0;
    message322_address1 <= message_passing_pe20_U0_message524_address1;
    message322_ce0 <= message_passing_pe20_U0_message524_ce0;
    message322_ce1 <= message_passing_pe20_U0_message524_ce1;
    message322_d0 <= message_passing_pe20_U0_message524_d0;
    message322_d1 <= ap_const_lv16_0;
    message322_we0 <= message_passing_pe20_U0_message524_we0;
    message322_we1 <= ap_const_logic_0;
    message323_address0 <= message_passing_pe20_U0_message525_address0;
    message323_address1 <= message_passing_pe20_U0_message525_address1;
    message323_ce0 <= message_passing_pe20_U0_message525_ce0;
    message323_ce1 <= message_passing_pe20_U0_message525_ce1;
    message323_d0 <= message_passing_pe20_U0_message525_d0;
    message323_d1 <= ap_const_lv16_0;
    message323_we0 <= message_passing_pe20_U0_message525_we0;
    message323_we1 <= ap_const_logic_0;
    message324_address0 <= message_passing_pe20_U0_message526_address0;
    message324_address1 <= message_passing_pe20_U0_message526_address1;
    message324_ce0 <= message_passing_pe20_U0_message526_ce0;
    message324_ce1 <= message_passing_pe20_U0_message526_ce1;
    message324_d0 <= message_passing_pe20_U0_message526_d0;
    message324_d1 <= ap_const_lv16_0;
    message324_we0 <= message_passing_pe20_U0_message526_we0;
    message324_we1 <= ap_const_logic_0;
    message3_address0 <= message_passing_pe20_U0_message5_address0;
    message3_address1 <= message_passing_pe20_U0_message5_address1;
    message3_ce0 <= message_passing_pe20_U0_message5_ce0;
    message3_ce1 <= message_passing_pe20_U0_message5_ce1;
    message3_d0 <= message_passing_pe20_U0_message5_d0;
    message3_d1 <= ap_const_lv16_0;
    message3_we0 <= message_passing_pe20_U0_message5_we0;
    message3_we1 <= ap_const_logic_0;
    message425_address0 <= message_passing_pe21_U0_message627_address0;
    message425_address1 <= message_passing_pe21_U0_message627_address1;
    message425_ce0 <= message_passing_pe21_U0_message627_ce0;
    message425_ce1 <= message_passing_pe21_U0_message627_ce1;
    message425_d0 <= message_passing_pe21_U0_message627_d0;
    message425_d1 <= ap_const_lv16_0;
    message425_we0 <= message_passing_pe21_U0_message627_we0;
    message425_we1 <= ap_const_logic_0;
    message426_address0 <= message_passing_pe21_U0_message628_address0;
    message426_address1 <= message_passing_pe21_U0_message628_address1;
    message426_ce0 <= message_passing_pe21_U0_message628_ce0;
    message426_ce1 <= message_passing_pe21_U0_message628_ce1;
    message426_d0 <= message_passing_pe21_U0_message628_d0;
    message426_d1 <= ap_const_lv16_0;
    message426_we0 <= message_passing_pe21_U0_message628_we0;
    message426_we1 <= ap_const_logic_0;
    message427_address0 <= message_passing_pe21_U0_message629_address0;
    message427_address1 <= message_passing_pe21_U0_message629_address1;
    message427_ce0 <= message_passing_pe21_U0_message629_ce0;
    message427_ce1 <= message_passing_pe21_U0_message629_ce1;
    message427_d0 <= message_passing_pe21_U0_message629_d0;
    message427_d1 <= ap_const_lv16_0;
    message427_we0 <= message_passing_pe21_U0_message629_we0;
    message427_we1 <= ap_const_logic_0;
    message428_address0 <= message_passing_pe21_U0_message630_address0;
    message428_address1 <= message_passing_pe21_U0_message630_address1;
    message428_ce0 <= message_passing_pe21_U0_message630_ce0;
    message428_ce1 <= message_passing_pe21_U0_message630_ce1;
    message428_d0 <= message_passing_pe21_U0_message630_d0;
    message428_d1 <= ap_const_lv16_0;
    message428_we0 <= message_passing_pe21_U0_message630_we0;
    message428_we1 <= ap_const_logic_0;
    message429_address0 <= message_passing_pe21_U0_message631_address0;
    message429_address1 <= message_passing_pe21_U0_message631_address1;
    message429_ce0 <= message_passing_pe21_U0_message631_ce0;
    message429_ce1 <= message_passing_pe21_U0_message631_ce1;
    message429_d0 <= message_passing_pe21_U0_message631_d0;
    message429_d1 <= ap_const_lv16_0;
    message429_we0 <= message_passing_pe21_U0_message631_we0;
    message429_we1 <= ap_const_logic_0;
    message430_address0 <= message_passing_pe21_U0_message632_address0;
    message430_address1 <= message_passing_pe21_U0_message632_address1;
    message430_ce0 <= message_passing_pe21_U0_message632_ce0;
    message430_ce1 <= message_passing_pe21_U0_message632_ce1;
    message430_d0 <= message_passing_pe21_U0_message632_d0;
    message430_d1 <= ap_const_lv16_0;
    message430_we0 <= message_passing_pe21_U0_message632_we0;
    message430_we1 <= ap_const_logic_0;
    message431_address0 <= message_passing_pe21_U0_message633_address0;
    message431_address1 <= message_passing_pe21_U0_message633_address1;
    message431_ce0 <= message_passing_pe21_U0_message633_ce0;
    message431_ce1 <= message_passing_pe21_U0_message633_ce1;
    message431_d0 <= message_passing_pe21_U0_message633_d0;
    message431_d1 <= ap_const_lv16_0;
    message431_we0 <= message_passing_pe21_U0_message633_we0;
    message431_we1 <= ap_const_logic_0;
    message432_address0 <= message_passing_pe21_U0_message634_address0;
    message432_address1 <= message_passing_pe21_U0_message634_address1;
    message432_ce0 <= message_passing_pe21_U0_message634_ce0;
    message432_ce1 <= message_passing_pe21_U0_message634_ce1;
    message432_d0 <= message_passing_pe21_U0_message634_d0;
    message432_d1 <= ap_const_lv16_0;
    message432_we0 <= message_passing_pe21_U0_message634_we0;
    message432_we1 <= ap_const_logic_0;
    message4_address0 <= message_passing_pe18_U0_message6_address0;
    message4_address1 <= message_passing_pe18_U0_message6_address1;
    message4_ce0 <= message_passing_pe18_U0_message6_ce0;
    message4_ce1 <= message_passing_pe18_U0_message6_ce1;
    message4_d0 <= message_passing_pe18_U0_message6_d0;
    message4_d1 <= ap_const_lv16_0;
    message4_we0 <= message_passing_pe18_U0_message6_we0;
    message4_we1 <= ap_const_logic_0;
    message5_address0 <= message_passing_pe18_U0_message7_address0;
    message5_address1 <= message_passing_pe18_U0_message7_address1;
    message5_ce0 <= message_passing_pe18_U0_message7_ce0;
    message5_ce1 <= message_passing_pe18_U0_message7_ce1;
    message5_d0 <= message_passing_pe18_U0_message7_d0;
    message5_d1 <= ap_const_lv16_0;
    message5_we0 <= message_passing_pe18_U0_message7_we0;
    message5_we1 <= ap_const_logic_0;
    message6_address0 <= message_passing_pe18_U0_message8_address0;
    message6_address1 <= message_passing_pe18_U0_message8_address1;
    message6_ce0 <= message_passing_pe18_U0_message8_ce0;
    message6_ce1 <= message_passing_pe18_U0_message8_ce1;
    message6_d0 <= message_passing_pe18_U0_message8_d0;
    message6_d1 <= ap_const_lv16_0;
    message6_we0 <= message_passing_pe18_U0_message8_we0;
    message6_we1 <= ap_const_logic_0;
    message7_address0 <= message_passing_pe18_U0_message9_address0;
    message7_address1 <= message_passing_pe18_U0_message9_address1;
    message7_ce0 <= message_passing_pe18_U0_message9_ce0;
    message7_ce1 <= message_passing_pe18_U0_message9_ce1;
    message7_d0 <= message_passing_pe18_U0_message9_d0;
    message7_d1 <= ap_const_lv16_0;
    message7_we0 <= message_passing_pe18_U0_message9_we0;
    message7_we1 <= ap_const_logic_0;
    message8_address0 <= message_passing_pe18_U0_message10_address0;
    message8_address1 <= message_passing_pe18_U0_message10_address1;
    message8_ce0 <= message_passing_pe18_U0_message10_ce0;
    message8_ce1 <= message_passing_pe18_U0_message10_ce1;
    message8_d0 <= message_passing_pe18_U0_message10_d0;
    message8_d1 <= ap_const_lv16_0;
    message8_we0 <= message_passing_pe18_U0_message10_we0;
    message8_we1 <= ap_const_logic_0;
    message9_address0 <= message_passing_pe18_U0_message11_address0;
    message9_address1 <= message_passing_pe18_U0_message11_address1;
    message9_ce0 <= message_passing_pe18_U0_message11_ce0;
    message9_ce1 <= message_passing_pe18_U0_message11_ce1;
    message9_d0 <= message_passing_pe18_U0_message11_d0;
    message9_d1 <= ap_const_lv16_0;
    message9_we0 <= message_passing_pe18_U0_message11_we0;
    message9_we1 <= ap_const_logic_0;
    message_address0 <= message_passing_pe18_U0_message_address0;
    message_address1 <= message_passing_pe18_U0_message_address1;
    message_ce0 <= message_passing_pe18_U0_message_ce0;
    message_ce1 <= message_passing_pe18_U0_message_ce1;
    message_d0 <= message_passing_pe18_U0_message_d0;
    message_d1 <= ap_const_lv16_0;
    message_passing_pe18_U0_ap_continue <= ap_sync_continue;
    message_passing_pe18_U0_ap_start <= ((ap_sync_reg_message_passing_pe18_U0_ap_ready xor ap_const_logic_1) and ap_start);
    message_passing_pe19_U0_ap_continue <= ap_sync_continue;
    message_passing_pe19_U0_ap_start <= ((ap_sync_reg_message_passing_pe19_U0_ap_ready xor ap_const_logic_1) and ap_start);
    message_passing_pe20_U0_ap_continue <= ap_sync_continue;
    message_passing_pe20_U0_ap_start <= ((ap_sync_reg_message_passing_pe20_U0_ap_ready xor ap_const_logic_1) and ap_start);
    message_passing_pe21_U0_ap_continue <= ap_sync_continue;
    message_passing_pe21_U0_ap_start <= ((ap_sync_reg_message_passing_pe21_U0_ap_ready xor ap_const_logic_1) and ap_start);
    message_we0 <= message_passing_pe18_U0_message_we0;
    message_we1 <= ap_const_logic_0;
    ne_out_0_0_0_0_012_read <= ne_to_mp_adapter_U0_ne_out_0_0_0_0_012_read;
    ne_out_0_0_0_0_013_read <= ne_to_mp_adapter_U0_ne_out_0_0_0_0_013_read;
    ne_out_0_0_0_0_01_read <= ne_to_mp_adapter_U0_ne_out_0_0_0_0_01_read;
    ne_out_0_0_0_0_0_read <= ne_to_mp_adapter_U0_ne_out_0_0_0_0_0_read;
    ne_to_mp_adapter_U0_ap_continue <= ap_const_logic_1;
    ne_to_mp_adapter_U0_ap_start <= ((ap_sync_reg_ne_to_mp_adapter_U0_ap_ready xor ap_const_logic_1) and ap_start);
    neighbor_tables_1_0_address0 <= message_passing_pe18_U0_neighbor_tables_1_0_address0;
    neighbor_tables_1_0_address1 <= ap_const_lv9_0;
    neighbor_tables_1_0_ce0 <= message_passing_pe18_U0_neighbor_tables_1_0_ce0;
    neighbor_tables_1_0_ce1 <= ap_const_logic_0;
    neighbor_tables_1_0_d0 <= ap_const_lv7_0;
    neighbor_tables_1_0_d1 <= ap_const_lv7_0;
    neighbor_tables_1_0_we0 <= ap_const_logic_0;
    neighbor_tables_1_0_we1 <= ap_const_logic_0;
    neighbor_tables_1_1_address0 <= message_passing_pe19_U0_neighbor_tables_1_1_address0;
    neighbor_tables_1_1_address1 <= ap_const_lv9_0;
    neighbor_tables_1_1_ce0 <= message_passing_pe19_U0_neighbor_tables_1_1_ce0;
    neighbor_tables_1_1_ce1 <= ap_const_logic_0;
    neighbor_tables_1_1_d0 <= ap_const_lv7_0;
    neighbor_tables_1_1_d1 <= ap_const_lv7_0;
    neighbor_tables_1_1_we0 <= ap_const_logic_0;
    neighbor_tables_1_1_we1 <= ap_const_logic_0;
    neighbor_tables_1_2_address0 <= message_passing_pe20_U0_neighbor_tables_1_2_address0;
    neighbor_tables_1_2_address1 <= ap_const_lv9_0;
    neighbor_tables_1_2_ce0 <= message_passing_pe20_U0_neighbor_tables_1_2_ce0;
    neighbor_tables_1_2_ce1 <= ap_const_logic_0;
    neighbor_tables_1_2_d0 <= ap_const_lv7_0;
    neighbor_tables_1_2_d1 <= ap_const_lv7_0;
    neighbor_tables_1_2_we0 <= ap_const_logic_0;
    neighbor_tables_1_2_we1 <= ap_const_logic_0;
    neighbor_tables_1_3_address0 <= message_passing_pe21_U0_neighbor_tables_1_3_address0;
    neighbor_tables_1_3_address1 <= ap_const_lv9_0;
    neighbor_tables_1_3_ce0 <= message_passing_pe21_U0_neighbor_tables_1_3_ce0;
    neighbor_tables_1_3_ce1 <= ap_const_logic_0;
    neighbor_tables_1_3_d0 <= ap_const_lv7_0;
    neighbor_tables_1_3_d1 <= ap_const_lv7_0;
    neighbor_tables_1_3_we0 <= ap_const_logic_0;
    neighbor_tables_1_3_we1 <= ap_const_logic_0;
    pes_per_node_address0 <= ne_to_mp_adapter_U0_pes_per_node_address0;
    pes_per_node_address1 <= ap_const_lv8_0;
    pes_per_node_ce0 <= ne_to_mp_adapter_U0_pes_per_node_ce0;
    pes_per_node_ce1 <= ap_const_logic_0;
    pes_per_node_d0 <= ap_const_lv8_0;
    pes_per_node_d1 <= ap_const_lv8_0;
    pes_per_node_we0 <= ap_const_logic_0;
    pes_per_node_we1 <= ap_const_logic_0;
end behav;
