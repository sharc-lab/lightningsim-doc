// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_graphs_load_graph_Pipeline_VITIS_LOOP_122_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        num_of_edges,
        full_pe_degree_tables_address0,
        full_pe_degree_tables_ce0,
        full_pe_degree_tables_we0,
        full_pe_degree_tables_d0,
        full_pe_degree_tables_q0,
        edge_list_in,
        trunc_ln127_2,
        degree_table_1_address0,
        degree_table_1_ce0,
        degree_table_1_we0,
        degree_table_1_d0,
        degree_table_1_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [1023:0] m_axi_mem_WDATA;
output  [127:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [1023:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [31:0] num_of_edges;
output  [8:0] full_pe_degree_tables_address0;
output   full_pe_degree_tables_ce0;
output  [15:0] full_pe_degree_tables_we0;
output  [127:0] full_pe_degree_tables_d0;
input  [127:0] full_pe_degree_tables_q0;
input  [63:0] edge_list_in;
input  [6:0] trunc_ln127_2;
output  [8:0] degree_table_1_address0;
output   degree_table_1_ce0;
output   degree_table_1_we0;
output  [31:0] degree_table_1_d0;
input  [31:0] degree_table_1_q0;

reg ap_idle;
reg m_axi_mem_ARVALID;
reg m_axi_mem_RREADY;
reg[8:0] full_pe_degree_tables_address0;
reg full_pe_degree_tables_ce0;
reg[15:0] full_pe_degree_tables_we0;
reg[8:0] degree_table_1_address0;
reg degree_table_1_ce0;
reg degree_table_1_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_state36_pp0_stage2_iter11;
wire    ap_block_state39_pp0_stage2_iter12;
wire    ap_block_state42_pp0_stage2_iter13;
wire    ap_block_state45_pp0_stage2_iter14;
wire    ap_block_state48_pp0_stage2_iter15;
wire    ap_block_state51_pp0_stage2_iter16;
wire    ap_block_state54_pp0_stage2_iter17;
wire    ap_block_state57_pp0_stage2_iter18;
wire    ap_block_state60_pp0_stage2_iter19;
wire    ap_block_state63_pp0_stage2_iter20;
wire    ap_block_state66_pp0_stage2_iter21;
wire    ap_block_state69_pp0_stage2_iter22;
reg   [0:0] icmp_ln122_reg_703;
reg   [0:0] icmp_ln122_reg_703_pp0_iter23_reg;
reg    ap_block_state72_pp0_stage2_iter23;
wire    ap_block_state75_pp0_stage2_iter24;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    mem_blk_n_R;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln127_reg_712;
reg   [0:0] icmp_ln127_reg_712_pp0_iter23_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_state34_pp0_stage0_iter11;
wire    ap_block_state37_pp0_stage0_iter12;
wire    ap_block_state40_pp0_stage0_iter13;
wire    ap_block_state43_pp0_stage0_iter14;
wire    ap_block_state46_pp0_stage0_iter15;
wire    ap_block_state49_pp0_stage0_iter16;
wire    ap_block_state52_pp0_stage0_iter17;
wire    ap_block_state55_pp0_stage0_iter18;
wire    ap_block_state58_pp0_stage0_iter19;
wire    ap_block_state61_pp0_stage0_iter20;
wire    ap_block_state64_pp0_stage0_iter21;
wire    ap_block_state67_pp0_stage0_iter22;
wire    ap_block_state70_pp0_stage0_iter23;
reg    ap_predicate_op181_read_state73;
reg    ap_block_state73_pp0_stage0_iter24;
wire    ap_block_state76_pp0_stage0_iter25;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln122_fu_212_p2;
reg   [0:0] icmp_ln122_reg_703_pp0_iter1_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter2_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter3_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter4_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter5_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter6_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter7_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter8_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter9_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter10_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter11_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter12_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter13_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter14_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter15_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter16_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter17_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter18_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter19_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter20_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter21_reg;
reg   [0:0] icmp_ln122_reg_703_pp0_iter22_reg;
wire   [6:0] add_ln127_1_fu_254_p2;
reg   [6:0] add_ln127_1_reg_707;
reg   [6:0] add_ln127_1_reg_707_pp0_iter1_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter2_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter3_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter4_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter5_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter6_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter7_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter8_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter9_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter10_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter11_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter12_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter13_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter14_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter15_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter16_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter17_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter18_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter19_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter20_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter21_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter22_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter23_reg;
reg   [6:0] add_ln127_1_reg_707_pp0_iter24_reg;
wire   [0:0] icmp_ln127_fu_260_p2;
reg   [0:0] icmp_ln127_reg_712_pp0_iter1_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter2_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter3_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter4_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter5_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter6_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter7_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter8_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter9_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter10_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter11_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter12_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter13_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter14_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter15_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter16_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter17_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter18_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter19_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter20_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter21_reg;
reg   [0:0] icmp_ln127_reg_712_pp0_iter22_reg;
reg   [56:0] trunc_ln_reg_716;
wire   [31:0] select_ln127_fu_276_p3;
reg   [31:0] select_ln127_reg_721;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_state35_pp0_stage1_iter11;
wire    ap_block_state38_pp0_stage1_iter12;
wire    ap_block_state41_pp0_stage1_iter13;
wire    ap_block_state44_pp0_stage1_iter14;
wire    ap_block_state47_pp0_stage1_iter15;
wire    ap_block_state50_pp0_stage1_iter16;
wire    ap_block_state53_pp0_stage1_iter17;
wire    ap_block_state56_pp0_stage1_iter18;
wire    ap_block_state59_pp0_stage1_iter19;
wire    ap_block_state62_pp0_stage1_iter20;
wire    ap_block_state65_pp0_stage1_iter21;
wire    ap_block_state68_pp0_stage1_iter22;
wire    ap_block_state71_pp0_stage1_iter23;
wire    ap_block_state74_pp0_stage1_iter24;
reg    ap_block_pp0_stage1_11001;
reg   [1023:0] mem_addr_read_reg_732;
reg    ap_block_pp0_stage2_11001;
wire   [1:0] edge_v_cast_fu_327_p4;
reg   [1:0] edge_v_cast_reg_742;
reg   [0:0] tmp_1294_reg_747;
wire   [3:0] sub_ln130_1_fu_359_p2;
reg   [3:0] sub_ln130_1_reg_752;
wire   [63:0] zext_ln131_fu_365_p1;
reg   [63:0] zext_ln131_reg_757;
reg   [8:0] degree_table_1_addr_reg_763;
reg   [8:0] full_pe_degree_tables_addr_reg_768;
wire   [31:0] add_ln131_fu_390_p2;
reg   [31:0] add_ln131_reg_773;
wire   [3:0] select_ln130_fu_407_p3;
reg   [3:0] select_ln130_reg_779;
wire   [31:0] add_ln132_fu_541_p2;
reg   [31:0] add_ln132_reg_784;
wire   [0:0] icmp_ln132_1_fu_547_p2;
reg   [0:0] icmp_ln132_1_reg_789;
wire   [7:0] tmp_1297_fu_553_p3;
reg   [7:0] tmp_1297_reg_795;
wire   [7:0] sub_ln132_4_fu_565_p2;
reg   [7:0] sub_ln132_4_reg_800;
wire   [127:0] and_ln132_1_fu_613_p2;
reg   [127:0] and_ln132_1_reg_805;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [1023:0] ap_phi_reg_pp0_iter0_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter1_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter2_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter3_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter4_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter5_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter6_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter7_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter8_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter9_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter10_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter11_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter12_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter13_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter14_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter15_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter16_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter17_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter18_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter19_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter20_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter21_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter22_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter23_empty_reg_183;
reg   [1023:0] ap_phi_reg_pp0_iter24_empty_reg_183;
wire  signed [63:0] sext_ln127_fu_289_p1;
reg   [63:0] reuse_addr_reg_fu_116;
wire    ap_loop_init;
reg   [31:0] reuse_reg_fu_120;
reg   [31:0] i_2_fu_124;
reg   [31:0] ap_sig_allocacmp_i;
wire   [31:0] add_ln122_fu_218_p2;
wire   [15:0] shl_ln132_2_fu_675_p2;
wire   [34:0] shl_ln_fu_224_p3;
wire   [3:0] trunc_ln127_fu_236_p1;
wire   [63:0] zext_ln127_fu_232_p1;
wire   [6:0] trunc_ln127_3_fu_240_p3;
wire   [63:0] add_ln127_fu_248_p2;
wire   [9:0] shl_ln127_1_fu_306_p3;
wire   [2047:0] tmp_fu_299_p3;
wire   [2047:0] zext_ln127_1_fu_313_p1;
wire   [2047:0] lshr_ln127_fu_317_p2;
wire   [1:0] sub_ln130_fu_345_p2;
wire   [3:0] p_and_t_cast_fu_351_p3;
wire   [8:0] edge_u_fu_323_p1;
wire   [0:0] addr_cmp_fu_377_p2;
wire   [31:0] tmp_1299_fu_382_p3;
wire   [3:0] tmp_s_fu_400_p3;
wire   [8:0] tmp_837_fu_421_p3;
wire   [8:0] empty_365_fu_429_p2;
wire   [2:0] empty_364_fu_417_p1;
wire   [7:0] tmp_1295_fu_441_p3;
wire   [7:0] trunc_ln132_fu_449_p1;
wire   [0:0] icmp_ln132_fu_435_p2;
wire   [7:0] sub_ln132_fu_463_p2;
wire   [7:0] sub_ln132_2_fu_475_p2;
reg   [127:0] tmp_1296_fu_453_p4;
wire   [7:0] sub_ln132_1_fu_469_p2;
wire   [7:0] select_ln132_fu_481_p3;
wire   [7:0] select_ln132_2_fu_497_p3;
wire   [7:0] sub_ln132_3_fu_505_p2;
wire   [127:0] select_ln132_1_fu_489_p3;
wire   [127:0] zext_ln132_fu_511_p1;
wire   [127:0] zext_ln132_1_fu_515_p1;
wire   [127:0] lshr_ln132_fu_519_p2;
wire   [127:0] lshr_ln132_1_fu_525_p2;
wire   [127:0] and_ln132_fu_531_p2;
wire   [31:0] trunc_ln132_1_fu_537_p1;
wire   [2:0] empty_363_fu_413_p1;
wire   [7:0] trunc_ln132_2_fu_561_p1;
wire   [7:0] select_ln132_3_fu_571_p3;
wire   [7:0] select_ln132_4_fu_579_p3;
wire   [7:0] sub_ln132_5_fu_587_p2;
wire   [127:0] zext_ln132_4_fu_593_p1;
wire   [127:0] zext_ln132_5_fu_597_p1;
wire   [127:0] shl_ln132_1_fu_601_p2;
wire   [127:0] lshr_ln132_2_fu_607_p2;
wire   [7:0] select_ln132_5_fu_626_p3;
wire   [127:0] zext_ln132_2_fu_623_p1;
wire   [127:0] zext_ln132_3_fu_631_p1;
wire   [127:0] shl_ln132_fu_635_p2;
reg   [127:0] tmp_1298_fu_641_p4;
wire   [127:0] select_ln132_6_fu_651_p3;
wire   [5:0] udiv_fu_664_p3;
wire   [15:0] zext_ln132_6_fu_671_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter24_stage0;
reg    ap_idle_pp0_0to23;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to25;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

GIN_compute_graphs_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter24_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter25 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln127_reg_712_pp0_iter23_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter24_empty_reg_183 <= m_axi_mem_RDATA;
    end else if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter24_empty_reg_183 <= ap_phi_reg_pp0_iter23_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln122_fu_212_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_2_fu_124 <= add_ln122_fu_218_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_2_fu_124 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_addr_reg_fu_116 <= 64'd18446744073709551615;
    end else if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reuse_addr_reg_fu_116 <= zext_ln131_reg_757;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg_fu_120 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter25 == 1'b1)) begin
            reuse_reg_fu_120 <= add_ln131_reg_773;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln127_1_reg_707 <= add_ln127_1_fu_254_p2;
        icmp_ln127_reg_712 <= icmp_ln127_fu_260_p2;
        select_ln127_reg_721[1 : 0] <= select_ln127_fu_276_p3[1 : 0];
        trunc_ln_reg_716 <= {{add_ln127_fu_248_p2[63:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln127_1_reg_707_pp0_iter10_reg <= add_ln127_1_reg_707_pp0_iter9_reg;
        add_ln127_1_reg_707_pp0_iter11_reg <= add_ln127_1_reg_707_pp0_iter10_reg;
        add_ln127_1_reg_707_pp0_iter12_reg <= add_ln127_1_reg_707_pp0_iter11_reg;
        add_ln127_1_reg_707_pp0_iter13_reg <= add_ln127_1_reg_707_pp0_iter12_reg;
        add_ln127_1_reg_707_pp0_iter14_reg <= add_ln127_1_reg_707_pp0_iter13_reg;
        add_ln127_1_reg_707_pp0_iter15_reg <= add_ln127_1_reg_707_pp0_iter14_reg;
        add_ln127_1_reg_707_pp0_iter16_reg <= add_ln127_1_reg_707_pp0_iter15_reg;
        add_ln127_1_reg_707_pp0_iter17_reg <= add_ln127_1_reg_707_pp0_iter16_reg;
        add_ln127_1_reg_707_pp0_iter18_reg <= add_ln127_1_reg_707_pp0_iter17_reg;
        add_ln127_1_reg_707_pp0_iter19_reg <= add_ln127_1_reg_707_pp0_iter18_reg;
        add_ln127_1_reg_707_pp0_iter1_reg <= add_ln127_1_reg_707;
        add_ln127_1_reg_707_pp0_iter20_reg <= add_ln127_1_reg_707_pp0_iter19_reg;
        add_ln127_1_reg_707_pp0_iter21_reg <= add_ln127_1_reg_707_pp0_iter20_reg;
        add_ln127_1_reg_707_pp0_iter22_reg <= add_ln127_1_reg_707_pp0_iter21_reg;
        add_ln127_1_reg_707_pp0_iter23_reg <= add_ln127_1_reg_707_pp0_iter22_reg;
        add_ln127_1_reg_707_pp0_iter24_reg <= add_ln127_1_reg_707_pp0_iter23_reg;
        add_ln127_1_reg_707_pp0_iter2_reg <= add_ln127_1_reg_707_pp0_iter1_reg;
        add_ln127_1_reg_707_pp0_iter3_reg <= add_ln127_1_reg_707_pp0_iter2_reg;
        add_ln127_1_reg_707_pp0_iter4_reg <= add_ln127_1_reg_707_pp0_iter3_reg;
        add_ln127_1_reg_707_pp0_iter5_reg <= add_ln127_1_reg_707_pp0_iter4_reg;
        add_ln127_1_reg_707_pp0_iter6_reg <= add_ln127_1_reg_707_pp0_iter5_reg;
        add_ln127_1_reg_707_pp0_iter7_reg <= add_ln127_1_reg_707_pp0_iter6_reg;
        add_ln127_1_reg_707_pp0_iter8_reg <= add_ln127_1_reg_707_pp0_iter7_reg;
        add_ln127_1_reg_707_pp0_iter9_reg <= add_ln127_1_reg_707_pp0_iter8_reg;
        icmp_ln122_reg_703 <= icmp_ln122_fu_212_p2;
        icmp_ln122_reg_703_pp0_iter10_reg <= icmp_ln122_reg_703_pp0_iter9_reg;
        icmp_ln122_reg_703_pp0_iter11_reg <= icmp_ln122_reg_703_pp0_iter10_reg;
        icmp_ln122_reg_703_pp0_iter12_reg <= icmp_ln122_reg_703_pp0_iter11_reg;
        icmp_ln122_reg_703_pp0_iter13_reg <= icmp_ln122_reg_703_pp0_iter12_reg;
        icmp_ln122_reg_703_pp0_iter14_reg <= icmp_ln122_reg_703_pp0_iter13_reg;
        icmp_ln122_reg_703_pp0_iter15_reg <= icmp_ln122_reg_703_pp0_iter14_reg;
        icmp_ln122_reg_703_pp0_iter16_reg <= icmp_ln122_reg_703_pp0_iter15_reg;
        icmp_ln122_reg_703_pp0_iter17_reg <= icmp_ln122_reg_703_pp0_iter16_reg;
        icmp_ln122_reg_703_pp0_iter18_reg <= icmp_ln122_reg_703_pp0_iter17_reg;
        icmp_ln122_reg_703_pp0_iter19_reg <= icmp_ln122_reg_703_pp0_iter18_reg;
        icmp_ln122_reg_703_pp0_iter1_reg <= icmp_ln122_reg_703;
        icmp_ln122_reg_703_pp0_iter20_reg <= icmp_ln122_reg_703_pp0_iter19_reg;
        icmp_ln122_reg_703_pp0_iter21_reg <= icmp_ln122_reg_703_pp0_iter20_reg;
        icmp_ln122_reg_703_pp0_iter22_reg <= icmp_ln122_reg_703_pp0_iter21_reg;
        icmp_ln122_reg_703_pp0_iter23_reg <= icmp_ln122_reg_703_pp0_iter22_reg;
        icmp_ln122_reg_703_pp0_iter2_reg <= icmp_ln122_reg_703_pp0_iter1_reg;
        icmp_ln122_reg_703_pp0_iter3_reg <= icmp_ln122_reg_703_pp0_iter2_reg;
        icmp_ln122_reg_703_pp0_iter4_reg <= icmp_ln122_reg_703_pp0_iter3_reg;
        icmp_ln122_reg_703_pp0_iter5_reg <= icmp_ln122_reg_703_pp0_iter4_reg;
        icmp_ln122_reg_703_pp0_iter6_reg <= icmp_ln122_reg_703_pp0_iter5_reg;
        icmp_ln122_reg_703_pp0_iter7_reg <= icmp_ln122_reg_703_pp0_iter6_reg;
        icmp_ln122_reg_703_pp0_iter8_reg <= icmp_ln122_reg_703_pp0_iter7_reg;
        icmp_ln122_reg_703_pp0_iter9_reg <= icmp_ln122_reg_703_pp0_iter8_reg;
        icmp_ln127_reg_712_pp0_iter10_reg <= icmp_ln127_reg_712_pp0_iter9_reg;
        icmp_ln127_reg_712_pp0_iter11_reg <= icmp_ln127_reg_712_pp0_iter10_reg;
        icmp_ln127_reg_712_pp0_iter12_reg <= icmp_ln127_reg_712_pp0_iter11_reg;
        icmp_ln127_reg_712_pp0_iter13_reg <= icmp_ln127_reg_712_pp0_iter12_reg;
        icmp_ln127_reg_712_pp0_iter14_reg <= icmp_ln127_reg_712_pp0_iter13_reg;
        icmp_ln127_reg_712_pp0_iter15_reg <= icmp_ln127_reg_712_pp0_iter14_reg;
        icmp_ln127_reg_712_pp0_iter16_reg <= icmp_ln127_reg_712_pp0_iter15_reg;
        icmp_ln127_reg_712_pp0_iter17_reg <= icmp_ln127_reg_712_pp0_iter16_reg;
        icmp_ln127_reg_712_pp0_iter18_reg <= icmp_ln127_reg_712_pp0_iter17_reg;
        icmp_ln127_reg_712_pp0_iter19_reg <= icmp_ln127_reg_712_pp0_iter18_reg;
        icmp_ln127_reg_712_pp0_iter1_reg <= icmp_ln127_reg_712;
        icmp_ln127_reg_712_pp0_iter20_reg <= icmp_ln127_reg_712_pp0_iter19_reg;
        icmp_ln127_reg_712_pp0_iter21_reg <= icmp_ln127_reg_712_pp0_iter20_reg;
        icmp_ln127_reg_712_pp0_iter22_reg <= icmp_ln127_reg_712_pp0_iter21_reg;
        icmp_ln127_reg_712_pp0_iter23_reg <= icmp_ln127_reg_712_pp0_iter22_reg;
        icmp_ln127_reg_712_pp0_iter2_reg <= icmp_ln127_reg_712_pp0_iter1_reg;
        icmp_ln127_reg_712_pp0_iter3_reg <= icmp_ln127_reg_712_pp0_iter2_reg;
        icmp_ln127_reg_712_pp0_iter4_reg <= icmp_ln127_reg_712_pp0_iter3_reg;
        icmp_ln127_reg_712_pp0_iter5_reg <= icmp_ln127_reg_712_pp0_iter4_reg;
        icmp_ln127_reg_712_pp0_iter6_reg <= icmp_ln127_reg_712_pp0_iter5_reg;
        icmp_ln127_reg_712_pp0_iter7_reg <= icmp_ln127_reg_712_pp0_iter6_reg;
        icmp_ln127_reg_712_pp0_iter8_reg <= icmp_ln127_reg_712_pp0_iter7_reg;
        icmp_ln127_reg_712_pp0_iter9_reg <= icmp_ln127_reg_712_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln131_reg_773 <= add_ln131_fu_390_p2;
        add_ln132_reg_784 <= add_ln132_fu_541_p2;
        and_ln132_1_reg_805 <= and_ln132_1_fu_613_p2;
        icmp_ln132_1_reg_789 <= icmp_ln132_1_fu_547_p2;
        select_ln130_reg_779 <= select_ln130_fu_407_p3;
        sub_ln132_4_reg_800[7 : 5] <= sub_ln132_4_fu_565_p2[7 : 5];
        tmp_1297_reg_795[7 : 5] <= tmp_1297_fu_553_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter10_empty_reg_183 <= ap_phi_reg_pp0_iter9_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter11_empty_reg_183 <= ap_phi_reg_pp0_iter10_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter12_empty_reg_183 <= ap_phi_reg_pp0_iter11_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter13_empty_reg_183 <= ap_phi_reg_pp0_iter12_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter14_empty_reg_183 <= ap_phi_reg_pp0_iter13_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter15_empty_reg_183 <= ap_phi_reg_pp0_iter14_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter16_empty_reg_183 <= ap_phi_reg_pp0_iter15_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter17_empty_reg_183 <= ap_phi_reg_pp0_iter16_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter18_empty_reg_183 <= ap_phi_reg_pp0_iter17_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter19_empty_reg_183 <= ap_phi_reg_pp0_iter18_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter1_empty_reg_183 <= ap_phi_reg_pp0_iter0_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter20_empty_reg_183 <= ap_phi_reg_pp0_iter19_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter21_empty_reg_183 <= ap_phi_reg_pp0_iter20_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter22_empty_reg_183 <= ap_phi_reg_pp0_iter21_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter23_empty_reg_183 <= ap_phi_reg_pp0_iter22_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter2_empty_reg_183 <= ap_phi_reg_pp0_iter1_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter3_empty_reg_183 <= ap_phi_reg_pp0_iter2_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter4_empty_reg_183 <= ap_phi_reg_pp0_iter3_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter5_empty_reg_183 <= ap_phi_reg_pp0_iter4_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter6_empty_reg_183 <= ap_phi_reg_pp0_iter5_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter7_empty_reg_183 <= ap_phi_reg_pp0_iter6_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter8_empty_reg_183 <= ap_phi_reg_pp0_iter7_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter9_empty_reg_183 <= ap_phi_reg_pp0_iter8_empty_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        degree_table_1_addr_reg_763 <= zext_ln131_fu_365_p1;
        edge_v_cast_reg_742 <= {{lshr_ln127_fu_317_p2[33:32]}};
        full_pe_degree_tables_addr_reg_768 <= zext_ln131_fu_365_p1;
        sub_ln130_1_reg_752 <= sub_ln130_1_fu_359_p2;
        tmp_1294_reg_747 <= lshr_ln127_fu_317_p2[32'd63];
        zext_ln131_reg_757[8 : 0] <= zext_ln131_fu_365_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0))) begin
        mem_addr_read_reg_732 <= m_axi_mem_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln122_reg_703 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter24_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter24_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter24_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to23 = 1'b1;
    end else begin
        ap_idle_pp0_0to23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to25 = 1'b1;
    end else begin
        ap_idle_pp0_1to25 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 32'd0;
    end else begin
        ap_sig_allocacmp_i = i_2_fu_124;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        degree_table_1_address0 = degree_table_1_addr_reg_763;
    end else if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        degree_table_1_address0 = zext_ln131_fu_365_p1;
    end else begin
        degree_table_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        degree_table_1_ce0 = 1'b1;
    end else begin
        degree_table_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        degree_table_1_we0 = 1'b1;
    end else begin
        degree_table_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        full_pe_degree_tables_address0 = full_pe_degree_tables_addr_reg_768;
    end else if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        full_pe_degree_tables_address0 = zext_ln131_fu_365_p1;
    end else begin
        full_pe_degree_tables_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        full_pe_degree_tables_ce0 = 1'b1;
    end else begin
        full_pe_degree_tables_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        full_pe_degree_tables_we0 = shl_ln132_2_fu_675_p2;
    end else begin
        full_pe_degree_tables_we0 = 16'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln122_reg_703 == 1'd0))) begin
        m_axi_mem_ARVALID = 1'b1;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (ap_predicate_op181_read_state73 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0)))) begin
        m_axi_mem_RREADY = 1'b1;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln122_reg_703 == 1'd0))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln127_reg_712_pp0_iter23_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0)))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to23 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter24_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to25 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln122_fu_218_p2 = (ap_sig_allocacmp_i + 32'd1);

assign add_ln127_1_fu_254_p2 = (trunc_ln127_3_fu_240_p3 + trunc_ln127_2);

assign add_ln127_fu_248_p2 = (zext_ln127_fu_232_p1 + edge_list_in);

assign add_ln131_fu_390_p2 = (tmp_1299_fu_382_p3 + 32'd1);

assign add_ln132_fu_541_p2 = (trunc_ln132_1_fu_537_p1 + 32'd1);

assign addr_cmp_fu_377_p2 = ((reuse_addr_reg_fu_116 == zext_ln131_reg_757) ? 1'b1 : 1'b0);

assign and_ln132_1_fu_613_p2 = (shl_ln132_1_fu_601_p2 & lshr_ln132_2_fu_607_p2);

assign and_ln132_fu_531_p2 = (lshr_ln132_fu_519_p2 & lshr_ln132_1_fu_525_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter24 == 1'b1) & (ap_predicate_op181_read_state73 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter24 == 1'b1) & (ap_predicate_op181_read_state73 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((icmp_ln122_reg_703 == 1'd0) & (m_axi_mem_ARREADY == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_pp0_stage2_iter23 = ((icmp_ln122_reg_703_pp0_iter23_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state73_pp0_stage0_iter24 = ((ap_predicate_op181_read_state73 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_state74_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_empty_reg_183 = 'bx;

always @ (*) begin
    ap_predicate_op181_read_state73 = ((icmp_ln127_reg_712_pp0_iter23_reg == 1'd1) & (icmp_ln122_reg_703_pp0_iter23_reg == 1'd0));
end

assign degree_table_1_d0 = add_ln131_reg_773;

assign edge_u_fu_323_p1 = lshr_ln127_fu_317_p2[8:0];

assign edge_v_cast_fu_327_p4 = {{lshr_ln127_fu_317_p2[33:32]}};

assign empty_363_fu_413_p1 = select_ln130_fu_407_p3[2:0];

assign empty_364_fu_417_p1 = select_ln130_fu_407_p3[2:0];

assign empty_365_fu_429_p2 = (tmp_837_fu_421_p3 | 9'd31);

assign full_pe_degree_tables_d0 = (select_ln132_6_fu_651_p3 & and_ln132_1_reg_805);

assign icmp_ln122_fu_212_p2 = ((ap_sig_allocacmp_i == num_of_edges) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_260_p2 = ((add_ln127_1_fu_254_p2 > 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln132_1_fu_547_p2 = ((tmp_837_fu_421_p3 > empty_365_fu_429_p2) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_435_p2 = ((tmp_837_fu_421_p3 > empty_365_fu_429_p2) ? 1'b1 : 1'b0);

assign lshr_ln127_fu_317_p2 = tmp_fu_299_p3 >> zext_ln127_1_fu_313_p1;

assign lshr_ln132_1_fu_525_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln132_1_fu_515_p1;

assign lshr_ln132_2_fu_607_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln132_5_fu_597_p1;

assign lshr_ln132_fu_519_p2 = select_ln132_1_fu_489_p3 >> zext_ln132_fu_511_p1;

assign m_axi_mem_ARADDR = sext_ln127_fu_289_p1;

assign m_axi_mem_ARBURST = 2'd0;

assign m_axi_mem_ARCACHE = 4'd0;

assign m_axi_mem_ARID = 1'd0;

assign m_axi_mem_ARLEN = select_ln127_reg_721;

assign m_axi_mem_ARLOCK = 2'd0;

assign m_axi_mem_ARPROT = 3'd0;

assign m_axi_mem_ARQOS = 4'd0;

assign m_axi_mem_ARREGION = 4'd0;

assign m_axi_mem_ARSIZE = 3'd0;

assign m_axi_mem_ARUSER = 1'd0;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 1024'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 128'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign p_and_t_cast_fu_351_p3 = {{2'd0}, {sub_ln130_fu_345_p2}};

assign select_ln127_fu_276_p3 = ((icmp_ln127_fu_260_p2[0:0] == 1'b1) ? 32'd2 : 32'd1);

assign select_ln130_fu_407_p3 = ((tmp_1294_reg_747[0:0] == 1'b1) ? sub_ln130_1_reg_752 : tmp_s_fu_400_p3);

assign select_ln132_1_fu_489_p3 = ((icmp_ln132_fu_435_p2[0:0] == 1'b1) ? tmp_1296_fu_453_p4 : full_pe_degree_tables_q0);

assign select_ln132_2_fu_497_p3 = ((icmp_ln132_fu_435_p2[0:0] == 1'b1) ? sub_ln132_1_fu_469_p2 : tmp_1295_fu_441_p3);

assign select_ln132_3_fu_571_p3 = ((icmp_ln132_1_fu_547_p2[0:0] == 1'b1) ? tmp_1297_fu_553_p3 : trunc_ln132_2_fu_561_p1);

assign select_ln132_4_fu_579_p3 = ((icmp_ln132_1_fu_547_p2[0:0] == 1'b1) ? trunc_ln132_2_fu_561_p1 : tmp_1297_fu_553_p3);

assign select_ln132_5_fu_626_p3 = ((icmp_ln132_1_reg_789[0:0] == 1'b1) ? sub_ln132_4_reg_800 : tmp_1297_reg_795);

assign select_ln132_6_fu_651_p3 = ((icmp_ln132_1_reg_789[0:0] == 1'b1) ? tmp_1298_fu_641_p4 : shl_ln132_fu_635_p2);

assign select_ln132_fu_481_p3 = ((icmp_ln132_fu_435_p2[0:0] == 1'b1) ? sub_ln132_fu_463_p2 : sub_ln132_2_fu_475_p2);

assign sext_ln127_fu_289_p1 = $signed(trunc_ln_reg_716);

assign shl_ln127_1_fu_306_p3 = {{add_ln127_1_reg_707_pp0_iter24_reg}, {3'd0}};

assign shl_ln132_1_fu_601_p2 = 128'd340282366920938463463374607431768211455 << zext_ln132_4_fu_593_p1;

assign shl_ln132_2_fu_675_p2 = 16'd15 << zext_ln132_6_fu_671_p1;

assign shl_ln132_fu_635_p2 = zext_ln132_2_fu_623_p1 << zext_ln132_3_fu_631_p1;

assign shl_ln_fu_224_p3 = {{ap_sig_allocacmp_i}, {3'd0}};

assign sub_ln130_1_fu_359_p2 = (4'd0 - p_and_t_cast_fu_351_p3);

assign sub_ln130_fu_345_p2 = (2'd0 - edge_v_cast_fu_327_p4);

assign sub_ln132_1_fu_469_p2 = (8'd127 - tmp_1295_fu_441_p3);

assign sub_ln132_2_fu_475_p2 = (trunc_ln132_fu_449_p1 - tmp_1295_fu_441_p3);

assign sub_ln132_3_fu_505_p2 = (8'd127 - select_ln132_fu_481_p3);

assign sub_ln132_4_fu_565_p2 = (8'd127 - tmp_1297_fu_553_p3);

assign sub_ln132_5_fu_587_p2 = (8'd127 - select_ln132_3_fu_571_p3);

assign sub_ln132_fu_463_p2 = (tmp_1295_fu_441_p3 - trunc_ln132_fu_449_p1);

assign tmp_1295_fu_441_p3 = {{empty_364_fu_417_p1}, {5'd0}};

integer ap_tvar_int_0;

always @ (full_pe_degree_tables_q0) begin
    for (ap_tvar_int_0 = 128 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 127 - 0) begin
            tmp_1296_fu_453_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1296_fu_453_p4[ap_tvar_int_0] = full_pe_degree_tables_q0[127 - ap_tvar_int_0];
        end
    end
end

assign tmp_1297_fu_553_p3 = {{empty_363_fu_413_p1}, {5'd0}};

integer ap_tvar_int_1;

always @ (shl_ln132_fu_635_p2) begin
    for (ap_tvar_int_1 = 128 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 127 - 0) begin
            tmp_1298_fu_641_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_1298_fu_641_p4[ap_tvar_int_1] = shl_ln132_fu_635_p2[127 - ap_tvar_int_1];
        end
    end
end

assign tmp_1299_fu_382_p3 = ((addr_cmp_fu_377_p2[0:0] == 1'b1) ? reuse_reg_fu_120 : degree_table_1_q0);

assign tmp_837_fu_421_p3 = {{select_ln130_fu_407_p3}, {5'd0}};

assign tmp_fu_299_p3 = {{ap_phi_reg_pp0_iter24_empty_reg_183}, {mem_addr_read_reg_732}};

assign tmp_s_fu_400_p3 = {{2'd0}, {edge_v_cast_reg_742}};

assign trunc_ln127_3_fu_240_p3 = {{trunc_ln127_fu_236_p1}, {3'd0}};

assign trunc_ln127_fu_236_p1 = ap_sig_allocacmp_i[3:0];

assign trunc_ln132_1_fu_537_p1 = and_ln132_fu_531_p2[31:0];

assign trunc_ln132_2_fu_561_p1 = empty_365_fu_429_p2[7:0];

assign trunc_ln132_fu_449_p1 = empty_365_fu_429_p2[7:0];

assign udiv_fu_664_p3 = {{select_ln130_reg_779}, {2'd0}};

assign zext_ln127_1_fu_313_p1 = shl_ln127_1_fu_306_p3;

assign zext_ln127_fu_232_p1 = shl_ln_fu_224_p3;

assign zext_ln131_fu_365_p1 = edge_u_fu_323_p1;

assign zext_ln132_1_fu_515_p1 = sub_ln132_3_fu_505_p2;

assign zext_ln132_2_fu_623_p1 = add_ln132_reg_784;

assign zext_ln132_3_fu_631_p1 = select_ln132_5_fu_626_p3;

assign zext_ln132_4_fu_593_p1 = select_ln132_4_fu_579_p3;

assign zext_ln132_5_fu_597_p1 = sub_ln132_5_fu_587_p2;

assign zext_ln132_6_fu_671_p1 = udiv_fu_664_p3;

assign zext_ln132_fu_511_p1 = select_ln132_2_fu_497_p3;

always @ (posedge ap_clk) begin
    select_ln127_reg_721[31:2] <= 30'b000000000000000000000000000000;
    zext_ln131_reg_757[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_1297_reg_795[4:0] <= 5'b00000;
    sub_ln132_4_reg_800[4:0] <= 5'b11111;
end

endmodule //GIN_compute_graphs_load_graph_Pipeline_VITIS_LOOP_122_3
