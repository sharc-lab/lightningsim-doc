// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_graphs_message_passing_pe19_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        embeddings_per_node_0_0_0_0_012_dout,
        embeddings_per_node_0_0_0_0_012_empty_n,
        embeddings_per_node_0_0_0_0_012_read,
        embeddings_per_node_0_0_0_0_01216_dout,
        embeddings_per_node_0_0_0_0_01216_empty_n,
        embeddings_per_node_0_0_0_0_01216_read,
        embeddings_per_node_0_0_0_0_01217_dout,
        embeddings_per_node_0_0_0_0_01217_empty_n,
        embeddings_per_node_0_0_0_0_01217_read,
        embeddings_per_node_0_0_0_0_01218_dout,
        embeddings_per_node_0_0_0_0_01218_empty_n,
        embeddings_per_node_0_0_0_0_01218_read,
        embeddings_per_node_0_0_0_0_01219_dout,
        embeddings_per_node_0_0_0_0_01219_empty_n,
        embeddings_per_node_0_0_0_0_01219_read,
        embeddings_per_node_0_0_0_0_01220_dout,
        embeddings_per_node_0_0_0_0_01220_empty_n,
        embeddings_per_node_0_0_0_0_01220_read,
        embeddings_per_node_0_0_0_0_01221_dout,
        embeddings_per_node_0_0_0_0_01221_empty_n,
        embeddings_per_node_0_0_0_0_01221_read,
        embeddings_per_node_0_0_0_0_01222_dout,
        embeddings_per_node_0_0_0_0_01222_empty_n,
        embeddings_per_node_0_0_0_0_01222_read,
        embeddings_per_node_0_0_0_0_013_dout,
        embeddings_per_node_0_0_0_0_013_empty_n,
        embeddings_per_node_0_0_0_0_013_read,
        embeddings_per_node_0_0_0_0_01323_dout,
        embeddings_per_node_0_0_0_0_01323_empty_n,
        embeddings_per_node_0_0_0_0_01323_read,
        embeddings_per_node_0_0_0_0_01324_dout,
        embeddings_per_node_0_0_0_0_01324_empty_n,
        embeddings_per_node_0_0_0_0_01324_read,
        embeddings_per_node_0_0_0_0_01325_dout,
        embeddings_per_node_0_0_0_0_01325_empty_n,
        embeddings_per_node_0_0_0_0_01325_read,
        embeddings_per_node_0_0_0_0_01326_dout,
        embeddings_per_node_0_0_0_0_01326_empty_n,
        embeddings_per_node_0_0_0_0_01326_read,
        embeddings_per_node_0_0_0_0_01327_dout,
        embeddings_per_node_0_0_0_0_01327_empty_n,
        embeddings_per_node_0_0_0_0_01327_read,
        embeddings_per_node_0_0_0_0_01328_dout,
        embeddings_per_node_0_0_0_0_01328_empty_n,
        embeddings_per_node_0_0_0_0_01328_read,
        embeddings_per_node_0_0_0_0_01329_dout,
        embeddings_per_node_0_0_0_0_01329_empty_n,
        embeddings_per_node_0_0_0_0_01329_read,
        bound,
        mul_ln712,
        message4_address0,
        message4_ce0,
        message4_we0,
        message4_d0,
        message4_address1,
        message4_ce1,
        message4_q1,
        message413_address0,
        message413_ce0,
        message413_we0,
        message413_d0,
        message413_address1,
        message413_ce1,
        message413_q1,
        message414_address0,
        message414_ce0,
        message414_we0,
        message414_d0,
        message414_address1,
        message414_ce1,
        message414_q1,
        message415_address0,
        message415_ce0,
        message415_we0,
        message415_d0,
        message415_address1,
        message415_ce1,
        message415_q1,
        message416_address0,
        message416_ce0,
        message416_we0,
        message416_d0,
        message416_address1,
        message416_ce1,
        message416_q1,
        message417_address0,
        message417_ce0,
        message417_we0,
        message417_d0,
        message417_address1,
        message417_ce1,
        message417_q1,
        message418_address0,
        message418_ce0,
        message418_we0,
        message418_d0,
        message418_address1,
        message418_ce1,
        message418_q1,
        message419_address0,
        message419_ce0,
        message419_we0,
        message419_d0,
        message419_address1,
        message419_ce1,
        message419_q1,
        edge_embedding_weights_V_1_0_address0,
        edge_embedding_weights_V_1_0_ce0,
        edge_embedding_weights_V_1_0_q0,
        edge_embedding_weights_V_1_0_address1,
        edge_embedding_weights_V_1_0_ce1,
        edge_embedding_weights_V_1_0_q1,
        edge_embedding_weights_V_1_0_address2,
        edge_embedding_weights_V_1_0_ce2,
        edge_embedding_weights_V_1_0_q2,
        edge_embedding_weights_V_1_1_address0,
        edge_embedding_weights_V_1_1_ce0,
        edge_embedding_weights_V_1_1_q0,
        edge_embedding_weights_V_1_1_address1,
        edge_embedding_weights_V_1_1_ce1,
        edge_embedding_weights_V_1_1_q1,
        edge_embedding_weights_V_1_1_address2,
        edge_embedding_weights_V_1_1_ce2,
        edge_embedding_weights_V_1_1_q2,
        edge_embedding_weights_V_1_2_address0,
        edge_embedding_weights_V_1_2_ce0,
        edge_embedding_weights_V_1_2_q0,
        edge_embedding_weights_V_1_2_address1,
        edge_embedding_weights_V_1_2_ce1,
        edge_embedding_weights_V_1_2_q1,
        edge_embedding_weights_V_1_2_address2,
        edge_embedding_weights_V_1_2_ce2,
        edge_embedding_weights_V_1_2_q2,
        edge_embedding_weights_V_1_3_address0,
        edge_embedding_weights_V_1_3_ce0,
        edge_embedding_weights_V_1_3_q0,
        edge_embedding_weights_V_1_3_address1,
        edge_embedding_weights_V_1_3_ce1,
        edge_embedding_weights_V_1_3_q1,
        edge_embedding_weights_V_1_3_address2,
        edge_embedding_weights_V_1_3_ce2,
        edge_embedding_weights_V_1_3_q2,
        neighbor_tables_1_1_address0,
        neighbor_tables_1_1_ce0,
        neighbor_tables_1_1_q0,
        edge_attrs_1_1_address0,
        edge_attrs_1_1_ce0,
        edge_attrs_1_1_q0,
        degree_tables_1_1_address0,
        degree_tables_1_1_ce0,
        degree_tables_1_1_q0,
        edge_embedding_weights_V_1_4_address0,
        edge_embedding_weights_V_1_4_ce0,
        edge_embedding_weights_V_1_4_q0,
        edge_embedding_weights_V_1_4_address1,
        edge_embedding_weights_V_1_4_ce1,
        edge_embedding_weights_V_1_4_q1,
        edge_embedding_weights_V_1_4_address2,
        edge_embedding_weights_V_1_4_ce2,
        edge_embedding_weights_V_1_4_q2,
        edge_embedding_weights_V_1_5_address0,
        edge_embedding_weights_V_1_5_ce0,
        edge_embedding_weights_V_1_5_q0,
        edge_embedding_weights_V_1_5_address1,
        edge_embedding_weights_V_1_5_ce1,
        edge_embedding_weights_V_1_5_q1,
        edge_embedding_weights_V_1_5_address2,
        edge_embedding_weights_V_1_5_ce2,
        edge_embedding_weights_V_1_5_q2,
        edge_embedding_weights_V_1_6_address0,
        edge_embedding_weights_V_1_6_ce0,
        edge_embedding_weights_V_1_6_q0,
        edge_embedding_weights_V_1_6_address1,
        edge_embedding_weights_V_1_6_ce1,
        edge_embedding_weights_V_1_6_q1,
        edge_embedding_weights_V_1_6_address2,
        edge_embedding_weights_V_1_6_ce2,
        edge_embedding_weights_V_1_6_q2,
        edge_embedding_weights_V_1_7_address0,
        edge_embedding_weights_V_1_7_ce0,
        edge_embedding_weights_V_1_7_q0,
        edge_embedding_weights_V_1_7_address1,
        edge_embedding_weights_V_1_7_ce1,
        edge_embedding_weights_V_1_7_q1,
        edge_embedding_weights_V_1_7_address2,
        edge_embedding_weights_V_1_7_ce2,
        edge_embedding_weights_V_1_7_q2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] embeddings_per_node_0_0_0_0_012_dout;
input   embeddings_per_node_0_0_0_0_012_empty_n;
output   embeddings_per_node_0_0_0_0_012_read;
input  [15:0] embeddings_per_node_0_0_0_0_01216_dout;
input   embeddings_per_node_0_0_0_0_01216_empty_n;
output   embeddings_per_node_0_0_0_0_01216_read;
input  [15:0] embeddings_per_node_0_0_0_0_01217_dout;
input   embeddings_per_node_0_0_0_0_01217_empty_n;
output   embeddings_per_node_0_0_0_0_01217_read;
input  [15:0] embeddings_per_node_0_0_0_0_01218_dout;
input   embeddings_per_node_0_0_0_0_01218_empty_n;
output   embeddings_per_node_0_0_0_0_01218_read;
input  [15:0] embeddings_per_node_0_0_0_0_01219_dout;
input   embeddings_per_node_0_0_0_0_01219_empty_n;
output   embeddings_per_node_0_0_0_0_01219_read;
input  [15:0] embeddings_per_node_0_0_0_0_01220_dout;
input   embeddings_per_node_0_0_0_0_01220_empty_n;
output   embeddings_per_node_0_0_0_0_01220_read;
input  [15:0] embeddings_per_node_0_0_0_0_01221_dout;
input   embeddings_per_node_0_0_0_0_01221_empty_n;
output   embeddings_per_node_0_0_0_0_01221_read;
input  [15:0] embeddings_per_node_0_0_0_0_01222_dout;
input   embeddings_per_node_0_0_0_0_01222_empty_n;
output   embeddings_per_node_0_0_0_0_01222_read;
input  [15:0] embeddings_per_node_0_0_0_0_013_dout;
input   embeddings_per_node_0_0_0_0_013_empty_n;
output   embeddings_per_node_0_0_0_0_013_read;
input  [15:0] embeddings_per_node_0_0_0_0_01323_dout;
input   embeddings_per_node_0_0_0_0_01323_empty_n;
output   embeddings_per_node_0_0_0_0_01323_read;
input  [15:0] embeddings_per_node_0_0_0_0_01324_dout;
input   embeddings_per_node_0_0_0_0_01324_empty_n;
output   embeddings_per_node_0_0_0_0_01324_read;
input  [15:0] embeddings_per_node_0_0_0_0_01325_dout;
input   embeddings_per_node_0_0_0_0_01325_empty_n;
output   embeddings_per_node_0_0_0_0_01325_read;
input  [15:0] embeddings_per_node_0_0_0_0_01326_dout;
input   embeddings_per_node_0_0_0_0_01326_empty_n;
output   embeddings_per_node_0_0_0_0_01326_read;
input  [15:0] embeddings_per_node_0_0_0_0_01327_dout;
input   embeddings_per_node_0_0_0_0_01327_empty_n;
output   embeddings_per_node_0_0_0_0_01327_read;
input  [15:0] embeddings_per_node_0_0_0_0_01328_dout;
input   embeddings_per_node_0_0_0_0_01328_empty_n;
output   embeddings_per_node_0_0_0_0_01328_read;
input  [15:0] embeddings_per_node_0_0_0_0_01329_dout;
input   embeddings_per_node_0_0_0_0_01329_empty_n;
output   embeddings_per_node_0_0_0_0_01329_read;
input  [35:0] bound;
input  [6:0] mul_ln712;
output  [10:0] message4_address0;
output   message4_ce0;
output   message4_we0;
output  [15:0] message4_d0;
output  [10:0] message4_address1;
output   message4_ce1;
input  [15:0] message4_q1;
output  [10:0] message413_address0;
output   message413_ce0;
output   message413_we0;
output  [15:0] message413_d0;
output  [10:0] message413_address1;
output   message413_ce1;
input  [15:0] message413_q1;
output  [10:0] message414_address0;
output   message414_ce0;
output   message414_we0;
output  [15:0] message414_d0;
output  [10:0] message414_address1;
output   message414_ce1;
input  [15:0] message414_q1;
output  [10:0] message415_address0;
output   message415_ce0;
output   message415_we0;
output  [15:0] message415_d0;
output  [10:0] message415_address1;
output   message415_ce1;
input  [15:0] message415_q1;
output  [10:0] message416_address0;
output   message416_ce0;
output   message416_we0;
output  [15:0] message416_d0;
output  [10:0] message416_address1;
output   message416_ce1;
input  [15:0] message416_q1;
output  [10:0] message417_address0;
output   message417_ce0;
output   message417_we0;
output  [15:0] message417_d0;
output  [10:0] message417_address1;
output   message417_ce1;
input  [15:0] message417_q1;
output  [10:0] message418_address0;
output   message418_ce0;
output   message418_we0;
output  [15:0] message418_d0;
output  [10:0] message418_address1;
output   message418_ce1;
input  [15:0] message418_q1;
output  [10:0] message419_address0;
output   message419_ce0;
output   message419_we0;
output  [15:0] message419_d0;
output  [10:0] message419_address1;
output   message419_ce1;
input  [15:0] message419_q1;
output  [9:0] edge_embedding_weights_V_1_0_address0;
output   edge_embedding_weights_V_1_0_ce0;
input  [15:0] edge_embedding_weights_V_1_0_q0;
output  [9:0] edge_embedding_weights_V_1_0_address1;
output   edge_embedding_weights_V_1_0_ce1;
input  [15:0] edge_embedding_weights_V_1_0_q1;
output  [9:0] edge_embedding_weights_V_1_0_address2;
output   edge_embedding_weights_V_1_0_ce2;
input  [15:0] edge_embedding_weights_V_1_0_q2;
output  [9:0] edge_embedding_weights_V_1_1_address0;
output   edge_embedding_weights_V_1_1_ce0;
input  [15:0] edge_embedding_weights_V_1_1_q0;
output  [9:0] edge_embedding_weights_V_1_1_address1;
output   edge_embedding_weights_V_1_1_ce1;
input  [15:0] edge_embedding_weights_V_1_1_q1;
output  [9:0] edge_embedding_weights_V_1_1_address2;
output   edge_embedding_weights_V_1_1_ce2;
input  [15:0] edge_embedding_weights_V_1_1_q2;
output  [9:0] edge_embedding_weights_V_1_2_address0;
output   edge_embedding_weights_V_1_2_ce0;
input  [15:0] edge_embedding_weights_V_1_2_q0;
output  [9:0] edge_embedding_weights_V_1_2_address1;
output   edge_embedding_weights_V_1_2_ce1;
input  [15:0] edge_embedding_weights_V_1_2_q1;
output  [9:0] edge_embedding_weights_V_1_2_address2;
output   edge_embedding_weights_V_1_2_ce2;
input  [15:0] edge_embedding_weights_V_1_2_q2;
output  [9:0] edge_embedding_weights_V_1_3_address0;
output   edge_embedding_weights_V_1_3_ce0;
input  [15:0] edge_embedding_weights_V_1_3_q0;
output  [9:0] edge_embedding_weights_V_1_3_address1;
output   edge_embedding_weights_V_1_3_ce1;
input  [15:0] edge_embedding_weights_V_1_3_q1;
output  [9:0] edge_embedding_weights_V_1_3_address2;
output   edge_embedding_weights_V_1_3_ce2;
input  [15:0] edge_embedding_weights_V_1_3_q2;
output  [8:0] neighbor_tables_1_1_address0;
output   neighbor_tables_1_1_ce0;
input  [6:0] neighbor_tables_1_1_q0;
output  [8:0] edge_attrs_1_1_address0;
output   edge_attrs_1_1_ce0;
input  [70:0] edge_attrs_1_1_q0;
output  [8:0] degree_tables_1_1_address0;
output   degree_tables_1_1_ce0;
input  [63:0] degree_tables_1_1_q0;
output  [9:0] edge_embedding_weights_V_1_4_address0;
output   edge_embedding_weights_V_1_4_ce0;
input  [15:0] edge_embedding_weights_V_1_4_q0;
output  [9:0] edge_embedding_weights_V_1_4_address1;
output   edge_embedding_weights_V_1_4_ce1;
input  [15:0] edge_embedding_weights_V_1_4_q1;
output  [9:0] edge_embedding_weights_V_1_4_address2;
output   edge_embedding_weights_V_1_4_ce2;
input  [15:0] edge_embedding_weights_V_1_4_q2;
output  [9:0] edge_embedding_weights_V_1_5_address0;
output   edge_embedding_weights_V_1_5_ce0;
input  [15:0] edge_embedding_weights_V_1_5_q0;
output  [9:0] edge_embedding_weights_V_1_5_address1;
output   edge_embedding_weights_V_1_5_ce1;
input  [15:0] edge_embedding_weights_V_1_5_q1;
output  [9:0] edge_embedding_weights_V_1_5_address2;
output   edge_embedding_weights_V_1_5_ce2;
input  [15:0] edge_embedding_weights_V_1_5_q2;
output  [9:0] edge_embedding_weights_V_1_6_address0;
output   edge_embedding_weights_V_1_6_ce0;
input  [15:0] edge_embedding_weights_V_1_6_q0;
output  [9:0] edge_embedding_weights_V_1_6_address1;
output   edge_embedding_weights_V_1_6_ce1;
input  [15:0] edge_embedding_weights_V_1_6_q1;
output  [9:0] edge_embedding_weights_V_1_6_address2;
output   edge_embedding_weights_V_1_6_ce2;
input  [15:0] edge_embedding_weights_V_1_6_q2;
output  [9:0] edge_embedding_weights_V_1_7_address0;
output   edge_embedding_weights_V_1_7_ce0;
input  [15:0] edge_embedding_weights_V_1_7_q0;
output  [9:0] edge_embedding_weights_V_1_7_address1;
output   edge_embedding_weights_V_1_7_ce1;
input  [15:0] edge_embedding_weights_V_1_7_q1;
output  [9:0] edge_embedding_weights_V_1_7_address2;
output   edge_embedding_weights_V_1_7_ce2;
input  [15:0] edge_embedding_weights_V_1_7_q2;

reg ap_idle;
reg embeddings_per_node_0_0_0_0_012_read;
reg embeddings_per_node_0_0_0_0_01216_read;
reg embeddings_per_node_0_0_0_0_01217_read;
reg embeddings_per_node_0_0_0_0_01218_read;
reg embeddings_per_node_0_0_0_0_01219_read;
reg embeddings_per_node_0_0_0_0_01220_read;
reg embeddings_per_node_0_0_0_0_01221_read;
reg embeddings_per_node_0_0_0_0_01222_read;
reg embeddings_per_node_0_0_0_0_013_read;
reg embeddings_per_node_0_0_0_0_01323_read;
reg embeddings_per_node_0_0_0_0_01324_read;
reg embeddings_per_node_0_0_0_0_01325_read;
reg embeddings_per_node_0_0_0_0_01326_read;
reg embeddings_per_node_0_0_0_0_01327_read;
reg embeddings_per_node_0_0_0_0_01328_read;
reg embeddings_per_node_0_0_0_0_01329_read;
reg message4_ce0;
reg message4_we0;
reg message4_ce1;
reg message413_ce0;
reg message413_we0;
reg message413_ce1;
reg message414_ce0;
reg message414_we0;
reg message414_ce1;
reg message415_ce0;
reg message415_we0;
reg message415_ce1;
reg message416_ce0;
reg message416_we0;
reg message416_ce1;
reg message417_ce0;
reg message417_we0;
reg message417_ce1;
reg message418_ce0;
reg message418_we0;
reg message418_ce1;
reg message419_ce0;
reg message419_we0;
reg message419_ce1;
reg edge_embedding_weights_V_1_0_ce0;
reg edge_embedding_weights_V_1_0_ce1;
reg edge_embedding_weights_V_1_0_ce2;
reg edge_embedding_weights_V_1_1_ce0;
reg edge_embedding_weights_V_1_1_ce1;
reg edge_embedding_weights_V_1_1_ce2;
reg edge_embedding_weights_V_1_2_ce0;
reg edge_embedding_weights_V_1_2_ce1;
reg edge_embedding_weights_V_1_2_ce2;
reg edge_embedding_weights_V_1_3_ce0;
reg edge_embedding_weights_V_1_3_ce1;
reg edge_embedding_weights_V_1_3_ce2;
reg neighbor_tables_1_1_ce0;
reg edge_attrs_1_1_ce0;
reg degree_tables_1_1_ce0;
reg edge_embedding_weights_V_1_4_ce0;
reg edge_embedding_weights_V_1_4_ce1;
reg edge_embedding_weights_V_1_4_ce2;
reg edge_embedding_weights_V_1_5_ce0;
reg edge_embedding_weights_V_1_5_ce1;
reg edge_embedding_weights_V_1_5_ce2;
reg edge_embedding_weights_V_1_6_ce0;
reg edge_embedding_weights_V_1_6_ce1;
reg edge_embedding_weights_V_1_6_ce2;
reg edge_embedding_weights_V_1_7_ce0;
reg edge_embedding_weights_V_1_7_ce1;
reg edge_embedding_weights_V_1_7_ce2;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    io_acc_block_signal_op158;
reg   [0:0] icmp_ln43_reg_2428;
reg   [0:0] icmp_ln43_reg_2428_pp0_iter2_reg;
reg   [0:0] icmp_ln65_reg_2498;
reg   [0:0] trunc_ln145_reg_2502;
reg    ap_predicate_op158_read_state4;
wire    io_acc_block_signal_op168;
reg    ap_predicate_op168_read_state4;
reg    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln43_fu_1161_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    embeddings_per_node_0_0_0_0_012_blk_n;
wire    ap_block_pp0_stage0;
reg    embeddings_per_node_0_0_0_0_01216_blk_n;
reg    embeddings_per_node_0_0_0_0_01217_blk_n;
reg    embeddings_per_node_0_0_0_0_01218_blk_n;
reg    embeddings_per_node_0_0_0_0_01219_blk_n;
reg    embeddings_per_node_0_0_0_0_01220_blk_n;
reg    embeddings_per_node_0_0_0_0_01221_blk_n;
reg    embeddings_per_node_0_0_0_0_01222_blk_n;
reg    embeddings_per_node_0_0_0_0_013_blk_n;
reg    embeddings_per_node_0_0_0_0_01323_blk_n;
reg    embeddings_per_node_0_0_0_0_01324_blk_n;
reg    embeddings_per_node_0_0_0_0_01325_blk_n;
reg    embeddings_per_node_0_0_0_0_01326_blk_n;
reg    embeddings_per_node_0_0_0_0_01327_blk_n;
reg    embeddings_per_node_0_0_0_0_01328_blk_n;
reg    embeddings_per_node_0_0_0_0_01329_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] mul_ln712_cast_fu_1119_p1;
reg   [7:0] mul_ln712_cast_reg_2421;
reg   [0:0] icmp_ln43_reg_2428_pp0_iter3_reg;
reg   [0:0] icmp_ln43_reg_2428_pp0_iter4_reg;
reg   [0:0] icmp_ln43_reg_2428_pp0_iter5_reg;
reg   [0:0] icmp_ln43_reg_2428_pp0_iter6_reg;
reg   [31:0] nd_idx_2_load_reg_2432;
wire   [3:0] select_ln43_fu_1196_p3;
reg   [3:0] select_ln43_reg_2438;
reg   [3:0] select_ln43_reg_2438_pp0_iter2_reg;
reg   [3:0] select_ln43_reg_2438_pp0_iter3_reg;
reg   [3:0] select_ln43_reg_2438_pp0_iter4_reg;
wire   [31:0] select_ln43_10_fu_1212_p3;
reg   [31:0] select_ln43_10_reg_2445;
wire   [63:0] zext_ln43_3_fu_1236_p1;
reg   [63:0] zext_ln43_3_reg_2453;
reg   [63:0] zext_ln43_3_reg_2453_pp0_iter2_reg;
wire   [0:0] icmp_ln79_fu_1252_p2;
reg   [0:0] icmp_ln79_reg_2468;
reg   [0:0] icmp_ln79_reg_2468_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_2468_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_2468_pp0_iter4_reg;
reg   [0:0] icmp_ln79_reg_2468_pp0_iter5_reg;
reg   [0:0] icmp_ln79_reg_2468_pp0_iter6_reg;
wire   [7:0] add_ln712_879_fu_1310_p2;
reg   [7:0] add_ln712_879_reg_2472;
wire   [5:0] trunc_ln712_fu_1315_p1;
reg   [5:0] trunc_ln712_reg_2478;
reg   [6:0] idxprom34_165_mid2_v_v_reg_2483;
reg   [6:0] idxprom34_280_mid2_v_v_reg_2488;
wire   [31:0] e_end_fu_1388_p3;
reg   [31:0] e_end_reg_2493;
wire   [0:0] icmp_ln65_fu_1403_p2;
reg   [0:0] icmp_ln65_reg_2498_pp0_iter3_reg;
reg   [0:0] icmp_ln65_reg_2498_pp0_iter4_reg;
wire   [0:0] trunc_ln145_fu_1408_p1;
wire   [63:0] zext_ln50_fu_1538_p1;
reg   [63:0] zext_ln50_reg_2526;
wire   [9:0] zext_ln712_53_fu_1549_p1;
reg   [9:0] zext_ln712_53_reg_2538;
reg   [9:0] zext_ln712_53_reg_2538_pp0_iter4_reg;
wire   [9:0] add_ln712_896_fu_1566_p2;
reg   [9:0] add_ln712_896_reg_2550;
wire   [9:0] add_ln712_897_fu_1572_p2;
reg   [9:0] add_ln712_897_reg_2555;
reg   [6:0] neighbor_tables_1_1_load_reg_2575;
reg   [15:0] edge_embed_V_18_reg_2666;
reg   [15:0] edge_embed_V_18_reg_2666_pp0_iter5_reg;
wire   [14:0] trunc_ln712_88_fu_1680_p1;
reg   [14:0] trunc_ln712_88_reg_2671;
reg   [14:0] trunc_ln712_88_reg_2671_pp0_iter5_reg;
reg   [15:0] edge_embed_V_19_reg_2676;
reg   [15:0] edge_embed_V_19_reg_2676_pp0_iter5_reg;
wire   [14:0] trunc_ln712_92_fu_1684_p1;
reg   [14:0] trunc_ln712_92_reg_2681;
reg   [14:0] trunc_ln712_92_reg_2681_pp0_iter5_reg;
reg   [15:0] edge_embed_V_20_reg_2686;
reg   [15:0] edge_embed_V_20_reg_2686_pp0_iter5_reg;
wire   [14:0] trunc_ln712_96_fu_1688_p1;
reg   [14:0] trunc_ln712_96_reg_2691;
reg   [14:0] trunc_ln712_96_reg_2691_pp0_iter5_reg;
reg   [15:0] edge_embed_V_21_reg_2696;
reg   [15:0] edge_embed_V_21_reg_2696_pp0_iter5_reg;
wire   [14:0] trunc_ln712_100_fu_1692_p1;
reg   [14:0] trunc_ln712_100_reg_2701;
reg   [14:0] trunc_ln712_100_reg_2701_pp0_iter5_reg;
wire   [10:0] zext_ln712_52_fu_1720_p1;
reg   [10:0] zext_ln712_52_reg_2706;
reg   [10:0] message416_addr_reg_2711;
reg   [10:0] message416_addr_reg_2711_pp0_iter6_reg;
reg   [10:0] message417_addr_reg_2717;
reg   [10:0] message417_addr_reg_2717_pp0_iter6_reg;
reg   [10:0] message418_addr_reg_2723;
reg   [10:0] message418_addr_reg_2723_pp0_iter6_reg;
reg   [10:0] message419_addr_reg_2729;
reg   [10:0] message419_addr_reg_2729_pp0_iter6_reg;
wire   [15:0] mp_ins_M_elems_V_0_q1;
wire   [15:0] mp_ins_M_elems_V_1_q1;
wire   [15:0] mp_ins_M_elems_V_2_q1;
wire   [15:0] mp_ins_M_elems_V_3_q1;
wire   [15:0] mp_ins_M_elems_V_4_q1;
wire   [15:0] mp_ins_M_elems_V_5_q1;
wire   [15:0] mp_ins_M_elems_V_6_q1;
wire   [15:0] mp_ins_M_elems_V_7_q1;
reg   [15:0] edge_embedding_weights_V_1_4_load_reg_2775;
reg   [15:0] edge_embedding_weights_V_1_4_load_1_reg_2780;
wire   [14:0] add_ln89_59_fu_1745_p2;
reg   [14:0] add_ln89_59_reg_2785;
reg   [15:0] edge_embedding_weights_V_1_5_load_reg_2790;
reg   [15:0] edge_embedding_weights_V_1_5_load_1_reg_2795;
wire   [14:0] add_ln89_62_fu_1759_p2;
reg   [14:0] add_ln89_62_reg_2800;
reg   [15:0] edge_embedding_weights_V_1_6_load_reg_2805;
reg   [15:0] edge_embedding_weights_V_1_6_load_1_reg_2810;
wire   [14:0] add_ln89_65_fu_1773_p2;
reg   [14:0] add_ln89_65_reg_2815;
reg   [15:0] edge_embedding_weights_V_1_7_load_reg_2820;
reg   [15:0] edge_embedding_weights_V_1_7_load_1_reg_2825;
wire   [14:0] add_ln89_68_fu_1787_p2;
reg   [14:0] add_ln89_68_reg_2830;
wire   [15:0] add_ln712_880_fu_1863_p2;
reg   [15:0] add_ln712_880_reg_2895;
wire   [15:0] add_ln712_884_fu_1918_p2;
reg   [15:0] add_ln712_884_reg_2900;
wire   [15:0] add_ln712_888_fu_1973_p2;
reg   [15:0] add_ln712_888_reg_2905;
wire   [15:0] add_ln712_892_fu_2028_p2;
reg   [15:0] add_ln712_892_reg_2910;
reg   [10:0] message4_addr_reg_2915;
reg   [10:0] message4_addr_reg_2915_pp0_iter8_reg;
reg   [10:0] message413_addr_reg_2921;
reg   [10:0] message413_addr_reg_2921_pp0_iter8_reg;
reg   [10:0] message414_addr_reg_2927;
reg   [10:0] message414_addr_reg_2927_pp0_iter8_reg;
reg   [10:0] message415_addr_reg_2933;
reg   [10:0] message415_addr_reg_2933_pp0_iter8_reg;
reg   [15:0] edge_embed_V_reg_2939;
reg   [15:0] edge_embedding_weights_V_1_0_load_reg_2944;
wire   [14:0] trunc_ln712_71_fu_2041_p1;
reg   [14:0] trunc_ln712_71_reg_2949;
wire   [14:0] trunc_ln712_72_fu_2045_p1;
reg   [14:0] trunc_ln712_72_reg_2954;
wire   [15:0] add_ln712_862_fu_2057_p2;
reg   [15:0] add_ln712_862_reg_2959;
wire   [14:0] add_ln89_47_fu_2063_p2;
reg   [14:0] add_ln89_47_reg_2964;
reg   [15:0] edge_embed_V_15_reg_2969;
reg   [15:0] edge_embedding_weights_V_1_1_load_reg_2974;
wire   [14:0] trunc_ln712_75_fu_2069_p1;
reg   [14:0] trunc_ln712_75_reg_2979;
wire   [14:0] trunc_ln712_76_fu_2073_p1;
reg   [14:0] trunc_ln712_76_reg_2984;
wire   [15:0] add_ln712_866_fu_2085_p2;
reg   [15:0] add_ln712_866_reg_2989;
wire   [14:0] add_ln89_50_fu_2091_p2;
reg   [14:0] add_ln89_50_reg_2994;
reg   [15:0] edge_embed_V_16_reg_2999;
reg   [15:0] edge_embedding_weights_V_1_2_load_reg_3004;
wire   [14:0] trunc_ln712_79_fu_2097_p1;
reg   [14:0] trunc_ln712_79_reg_3009;
wire   [14:0] trunc_ln712_80_fu_2101_p1;
reg   [14:0] trunc_ln712_80_reg_3014;
wire   [15:0] add_ln712_870_fu_2113_p2;
reg   [15:0] add_ln712_870_reg_3019;
wire   [14:0] add_ln89_53_fu_2119_p2;
reg   [14:0] add_ln89_53_reg_3024;
reg   [15:0] edge_embed_V_17_reg_3029;
reg   [15:0] edge_embedding_weights_V_1_3_load_reg_3034;
wire   [14:0] trunc_ln712_83_fu_2125_p1;
reg   [14:0] trunc_ln712_83_reg_3039;
wire   [14:0] trunc_ln712_84_fu_2129_p1;
reg   [14:0] trunc_ln712_84_reg_3044;
wire   [15:0] add_ln712_874_fu_2141_p2;
reg   [15:0] add_ln712_874_reg_3049;
wire   [14:0] add_ln89_56_fu_2147_p2;
reg   [14:0] add_ln89_56_reg_3054;
wire   [15:0] add_ln712_864_fu_2191_p2;
reg   [15:0] add_ln712_864_reg_3059;
wire   [15:0] add_ln712_868_fu_2235_p2;
reg   [15:0] add_ln712_868_reg_3064;
wire   [15:0] add_ln712_872_fu_2279_p2;
reg   [15:0] add_ln712_872_reg_3069;
wire   [15:0] add_ln712_876_fu_2323_p2;
reg   [15:0] add_ln712_876_reg_3074;
wire   [3:0] mp_ins_M_elems_V_0_address0;
reg    mp_ins_M_elems_V_0_ce0;
reg    mp_ins_M_elems_V_0_we0;
wire   [3:0] mp_ins_M_elems_V_0_address1;
reg    mp_ins_M_elems_V_0_ce1;
wire   [3:0] mp_ins_M_elems_V_1_address0;
reg    mp_ins_M_elems_V_1_ce0;
reg    mp_ins_M_elems_V_1_we0;
wire   [3:0] mp_ins_M_elems_V_1_address1;
reg    mp_ins_M_elems_V_1_ce1;
wire   [3:0] mp_ins_M_elems_V_2_address0;
reg    mp_ins_M_elems_V_2_ce0;
reg    mp_ins_M_elems_V_2_we0;
wire   [3:0] mp_ins_M_elems_V_2_address1;
reg    mp_ins_M_elems_V_2_ce1;
wire   [3:0] mp_ins_M_elems_V_3_address0;
reg    mp_ins_M_elems_V_3_ce0;
reg    mp_ins_M_elems_V_3_we0;
wire   [3:0] mp_ins_M_elems_V_3_address1;
reg    mp_ins_M_elems_V_3_ce1;
wire   [3:0] mp_ins_M_elems_V_4_address0;
reg    mp_ins_M_elems_V_4_ce0;
reg    mp_ins_M_elems_V_4_we0;
wire   [3:0] mp_ins_M_elems_V_4_address1;
reg    mp_ins_M_elems_V_4_ce1;
wire   [3:0] mp_ins_M_elems_V_5_address0;
reg    mp_ins_M_elems_V_5_ce0;
reg    mp_ins_M_elems_V_5_we0;
wire   [3:0] mp_ins_M_elems_V_5_address1;
reg    mp_ins_M_elems_V_5_ce1;
wire   [3:0] mp_ins_M_elems_V_6_address0;
reg    mp_ins_M_elems_V_6_ce0;
reg    mp_ins_M_elems_V_6_we0;
wire   [3:0] mp_ins_M_elems_V_6_address1;
reg    mp_ins_M_elems_V_6_ce1;
wire   [3:0] mp_ins_M_elems_V_7_address0;
reg    mp_ins_M_elems_V_7_ce0;
reg    mp_ins_M_elems_V_7_we0;
wire   [3:0] mp_ins_M_elems_V_7_address1;
reg    mp_ins_M_elems_V_7_ce1;
reg   [15:0] ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951;
reg   [15:0] ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962;
reg   [15:0] ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973;
reg   [15:0] ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984;
reg   [15:0] ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995;
reg   [15:0] ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006;
reg   [15:0] ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017;
reg   [15:0] ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4;
wire   [15:0] ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_reg_1039;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_reg_1039;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_reg_1039;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_reg_1039;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_reg_1039;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_reg_1039;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_reg_1039;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_251_reg_1049;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_251_reg_1049;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_251_reg_1049;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_251_reg_1049;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_251_reg_1049;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_251_reg_1049;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_251_reg_1049;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_252_reg_1059;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_252_reg_1059;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_252_reg_1059;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_252_reg_1059;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_252_reg_1059;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_252_reg_1059;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_252_reg_1059;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_253_reg_1069;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_253_reg_1069;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_253_reg_1069;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_253_reg_1069;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_253_reg_1069;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_253_reg_1069;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_253_reg_1069;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_254_reg_1079;
reg   [15:0] ap_phi_reg_pp0_iter7_empty_254_reg_1079;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_255_reg_1089;
reg   [15:0] ap_phi_reg_pp0_iter7_empty_255_reg_1089;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_256_reg_1099;
reg   [15:0] ap_phi_reg_pp0_iter7_empty_256_reg_1099;
wire   [15:0] ap_phi_reg_pp0_iter0_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter1_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter2_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter3_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter4_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter5_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter6_empty_257_reg_1109;
reg   [15:0] ap_phi_reg_pp0_iter7_empty_257_reg_1109;
wire   [63:0] zext_ln57_fu_1241_p1;
wire   [63:0] zext_ln712_57_fu_1558_p1;
wire   [63:0] zext_ln712_58_fu_1666_p1;
wire   [63:0] zext_ln712_59_fu_1673_p1;
wire   [63:0] zext_ln712_61_fu_1729_p1;
wire   [63:0] zext_ln712_54_fu_1793_p1;
wire   [63:0] zext_ln712_55_fu_1800_p1;
wire   [63:0] zext_ln712_56_fu_1807_p1;
wire   [63:0] zext_ln712_60_fu_2034_p1;
reg   [31:0] node_nd_2_fu_180;
wire   [31:0] node_nd_fu_1373_p3;
reg   [31:0] nd_idx_2_fu_184;
wire   [31:0] nd_idx_fu_1381_p3;
reg   [31:0] ap_sig_allocacmp_nd_idx_2_load;
wire    ap_loop_init;
reg   [31:0] e_end_2_fu_188;
reg   [31:0] ap_sig_allocacmp_e_end_2_load;
reg   [31:0] e_start_2_fu_192;
wire   [31:0] e_start_fu_1396_p3;
reg   [6:0] dim_fu_196;
wire   [6:0] add_ln50_1_fu_1264_p2;
reg   [3:0] i_fu_200;
wire   [3:0] add_ln50_fu_1258_p2;
reg   [31:0] e_fu_204;
reg   [35:0] indvar_flatten_fu_208;
wire   [35:0] add_ln43_9_fu_1166_p2;
wire   [0:0] icmp_ln50_fu_1190_p2;
wire   [31:0] add_ln43_fu_1184_p2;
wire   [8:0] trunc_ln43_fu_1220_p1;
wire   [8:0] trunc_ln43_5_fu_1224_p1;
wire   [8:0] select_ln43_12_fu_1228_p3;
wire   [6:0] select_ln43_9_fu_1204_p3;
wire   [6:0] or_ln78_fu_1246_p2;
wire   [6:0] trunc_ln43_6_fu_1302_p1;
wire   [7:0] zext_ln712_46_fu_1306_p1;
wire  signed [31:0] sext_ln55_fu_1339_p0;
wire   [32:0] zext_ln43_fu_1299_p1;
wire  signed [32:0] sext_ln55_fu_1339_p1;
wire   [31:0] node_degree_fu_1358_p4;
wire   [0:0] icmp_ln55_fu_1343_p2;
wire   [31:0] node_nd_4_fu_1354_p1;
wire   [31:0] nd_idx_4_fu_1349_p2;
wire  signed [31:0] e_end_fu_1388_p1;
wire   [31:0] e_end_4_fu_1368_p2;
wire   [9:0] p_shl4_cast_fu_1430_p3;
wire   [9:0] p_shl5_cast_fu_1437_p3;
wire   [6:0] add_ln43_7_fu_1450_p2;
wire   [7:0] zext_ln712_48_fu_1455_p1;
wire   [7:0] add_ln712_883_fu_1459_p2;
wire   [5:0] trunc_ln712_69_fu_1468_p1;
wire   [9:0] p_shl2_cast_fu_1472_p3;
wire   [9:0] p_shl3_cast_fu_1480_p3;
wire   [6:0] add_ln43_8_fu_1494_p2;
wire   [7:0] zext_ln712_50_fu_1499_p1;
wire   [7:0] add_ln712_887_fu_1503_p2;
wire   [5:0] trunc_ln712_70_fu_1512_p1;
wire   [9:0] p_shl_cast_fu_1516_p3;
wire   [9:0] p_shl1_cast_fu_1524_p3;
wire   [9:0] sub_ln712_7_fu_1444_p2;
wire   [9:0] add_ln712_895_fu_1552_p2;
wire   [9:0] sub_ln712_8_fu_1488_p2;
wire   [9:0] sub_ln712_9_fu_1532_p2;
wire   [8:0] tmp_s_fu_1703_p3;
wire   [10:0] tmp_fu_1696_p3;
wire   [10:0] zext_ln712_45_fu_1710_p1;
wire   [10:0] sub_ln712_fu_1714_p2;
wire   [10:0] add_ln712_899_fu_1723_p2;
wire   [14:0] trunc_ln712_89_fu_1737_p1;
wire   [14:0] trunc_ln712_90_fu_1741_p1;
wire   [14:0] trunc_ln712_93_fu_1751_p1;
wire   [14:0] trunc_ln712_94_fu_1755_p1;
wire   [14:0] trunc_ln712_97_fu_1765_p1;
wire   [14:0] trunc_ln712_98_fu_1769_p1;
wire   [14:0] trunc_ln712_101_fu_1779_p1;
wire   [14:0] trunc_ln712_102_fu_1783_p1;
wire   [9:0] grp_fu_2329_p3;
wire   [9:0] grp_fu_2337_p3;
wire   [9:0] grp_fu_2345_p3;
wire   [15:0] add_ln712_878_fu_1822_p2;
wire   [15:0] add_ln712_877_fu_1818_p2;
wire   [14:0] trunc_ln712_87_fu_1814_p1;
wire   [14:0] add_ln89_58_fu_1833_p2;
wire   [15:0] total_embed_V_18_fu_1827_p2;
wire   [0:0] p_Result_421_fu_1843_p3;
wire   [14:0] add_ln89_60_fu_1838_p2;
wire   [14:0] select_ln24_21_fu_1851_p3;
wire   [15:0] zext_ln712_18_fu_1859_p1;
wire   [15:0] add_ln712_882_fu_1877_p2;
wire   [15:0] add_ln712_881_fu_1873_p2;
wire   [14:0] trunc_ln712_91_fu_1869_p1;
wire   [14:0] add_ln89_61_fu_1888_p2;
wire   [15:0] total_embed_V_19_fu_1882_p2;
wire   [0:0] p_Result_422_fu_1898_p3;
wire   [14:0] add_ln89_63_fu_1893_p2;
wire   [14:0] select_ln24_22_fu_1906_p3;
wire   [15:0] zext_ln712_19_fu_1914_p1;
wire   [15:0] add_ln712_886_fu_1932_p2;
wire   [15:0] add_ln712_885_fu_1928_p2;
wire   [14:0] trunc_ln712_95_fu_1924_p1;
wire   [14:0] add_ln89_64_fu_1943_p2;
wire   [15:0] total_embed_V_20_fu_1937_p2;
wire   [0:0] p_Result_423_fu_1953_p3;
wire   [14:0] add_ln89_66_fu_1948_p2;
wire   [14:0] select_ln24_23_fu_1961_p3;
wire   [15:0] zext_ln712_20_fu_1969_p1;
wire   [15:0] add_ln712_890_fu_1987_p2;
wire   [15:0] add_ln712_889_fu_1983_p2;
wire   [14:0] trunc_ln712_99_fu_1979_p1;
wire   [14:0] add_ln89_67_fu_1998_p2;
wire   [15:0] total_embed_V_21_fu_1992_p2;
wire   [0:0] p_Result_424_fu_2008_p3;
wire   [14:0] add_ln89_69_fu_2003_p2;
wire   [14:0] select_ln24_24_fu_2016_p3;
wire   [15:0] zext_ln712_21_fu_2024_p1;
wire   [10:0] grp_fu_2353_p3;
wire   [14:0] trunc_ln712_73_fu_2049_p1;
wire   [14:0] trunc_ln712_74_fu_2053_p1;
wire   [14:0] trunc_ln712_77_fu_2077_p1;
wire   [14:0] trunc_ln712_78_fu_2081_p1;
wire   [14:0] trunc_ln712_81_fu_2105_p1;
wire   [14:0] trunc_ln712_82_fu_2109_p1;
wire   [14:0] trunc_ln712_85_fu_2133_p1;
wire   [14:0] trunc_ln712_86_fu_2137_p1;
wire   [15:0] add_ln712_fu_2153_p2;
wire   [14:0] add_ln89_fu_2162_p2;
wire   [15:0] total_embed_V_fu_2157_p2;
wire   [0:0] p_Result_s_fu_2171_p3;
wire   [14:0] add_ln89_48_fu_2166_p2;
wire   [14:0] select_ln24_fu_2179_p3;
wire   [15:0] zext_ln712_fu_2187_p1;
wire   [15:0] add_ln712_865_fu_2197_p2;
wire   [14:0] add_ln89_49_fu_2206_p2;
wire   [15:0] total_embed_V_15_fu_2201_p2;
wire   [0:0] p_Result_418_fu_2215_p3;
wire   [14:0] add_ln89_51_fu_2210_p2;
wire   [14:0] select_ln24_18_fu_2223_p3;
wire   [15:0] zext_ln712_15_fu_2231_p1;
wire   [15:0] add_ln712_869_fu_2241_p2;
wire   [14:0] add_ln89_52_fu_2250_p2;
wire   [15:0] total_embed_V_16_fu_2245_p2;
wire   [0:0] p_Result_419_fu_2259_p3;
wire   [14:0] add_ln89_54_fu_2254_p2;
wire   [14:0] select_ln24_19_fu_2267_p3;
wire   [15:0] zext_ln712_16_fu_2275_p1;
wire   [15:0] add_ln712_873_fu_2285_p2;
wire   [14:0] add_ln89_55_fu_2294_p2;
wire   [15:0] total_embed_V_17_fu_2289_p2;
wire   [0:0] p_Result_420_fu_2303_p3;
wire   [14:0] add_ln89_57_fu_2298_p2;
wire   [14:0] select_ln24_20_fu_2311_p3;
wire   [15:0] zext_ln712_17_fu_2319_p1;
wire   [7:0] grp_fu_2329_p0;
wire   [3:0] grp_fu_2329_p1;
wire   [3:0] grp_fu_2329_p2;
wire   [7:0] grp_fu_2337_p0;
wire   [3:0] grp_fu_2337_p1;
wire   [3:0] grp_fu_2337_p2;
wire   [7:0] grp_fu_2345_p0;
wire   [3:0] grp_fu_2345_p1;
wire   [3:0] grp_fu_2345_p2;
wire   [6:0] grp_fu_2353_p0;
wire   [3:0] grp_fu_2353_p1;
wire   [3:0] grp_fu_2353_p2;
reg    grp_fu_2329_ce;
reg    grp_fu_2337_ce;
reg    grp_fu_2345_ce;
reg    grp_fu_2353_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_289;
reg    ap_enable_state6_pp0_iter5_stage0;
reg    ap_enable_operation_353;
reg    ap_enable_state7_pp0_iter6_stage0;
reg    ap_enable_operation_442;
reg    ap_enable_state8_pp0_iter7_stage0;
reg    ap_enable_operation_295;
reg    ap_enable_operation_364;
reg    ap_enable_operation_443;
reg    ap_enable_operation_301;
reg    ap_enable_operation_375;
reg    ap_enable_operation_444;
reg    ap_enable_operation_307;
reg    ap_enable_operation_386;
reg    ap_enable_operation_445;
wire    ap_enable_operation_411;
wire    ap_enable_operation_454;
reg    ap_enable_state9_pp0_iter8_stage0;
wire    ap_enable_operation_483;
reg    ap_enable_state10_pp0_iter9_stage0;
wire    ap_enable_operation_421;
wire    ap_enable_operation_463;
wire    ap_enable_operation_484;
wire    ap_enable_operation_431;
wire    ap_enable_operation_472;
wire    ap_enable_operation_485;
wire    ap_enable_operation_441;
wire    ap_enable_operation_481;
wire    ap_enable_operation_486;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [9:0] grp_fu_2329_p00;
wire   [9:0] grp_fu_2337_p00;
wire   [9:0] grp_fu_2345_p00;
wire   [10:0] grp_fu_2353_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_0_address0),
    .ce0(mp_ins_M_elems_V_0_ce0),
    .we0(mp_ins_M_elems_V_0_we0),
    .d0(ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4),
    .address1(mp_ins_M_elems_V_0_address1),
    .ce1(mp_ins_M_elems_V_0_ce1),
    .q1(mp_ins_M_elems_V_0_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_1_address0),
    .ce0(mp_ins_M_elems_V_1_ce0),
    .we0(mp_ins_M_elems_V_1_we0),
    .d0(ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4),
    .address1(mp_ins_M_elems_V_1_address1),
    .ce1(mp_ins_M_elems_V_1_ce1),
    .q1(mp_ins_M_elems_V_1_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_2_address0),
    .ce0(mp_ins_M_elems_V_2_ce0),
    .we0(mp_ins_M_elems_V_2_we0),
    .d0(ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4),
    .address1(mp_ins_M_elems_V_2_address1),
    .ce1(mp_ins_M_elems_V_2_ce1),
    .q1(mp_ins_M_elems_V_2_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_3_address0),
    .ce0(mp_ins_M_elems_V_3_ce0),
    .we0(mp_ins_M_elems_V_3_we0),
    .d0(ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4),
    .address1(mp_ins_M_elems_V_3_address1),
    .ce1(mp_ins_M_elems_V_3_ce1),
    .q1(mp_ins_M_elems_V_3_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_4_address0),
    .ce0(mp_ins_M_elems_V_4_ce0),
    .we0(mp_ins_M_elems_V_4_we0),
    .d0(ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4),
    .address1(mp_ins_M_elems_V_4_address1),
    .ce1(mp_ins_M_elems_V_4_ce1),
    .q1(mp_ins_M_elems_V_4_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_5_address0),
    .ce0(mp_ins_M_elems_V_5_ce0),
    .we0(mp_ins_M_elems_V_5_we0),
    .d0(ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4),
    .address1(mp_ins_M_elems_V_5_address1),
    .ce1(mp_ins_M_elems_V_5_ce1),
    .q1(mp_ins_M_elems_V_5_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_6_address0),
    .ce0(mp_ins_M_elems_V_6_ce0),
    .we0(mp_ins_M_elems_V_6_we0),
    .d0(ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4),
    .address1(mp_ins_M_elems_V_6_address1),
    .ce1(mp_ins_M_elems_V_6_ce1),
    .q1(mp_ins_M_elems_V_6_q1)
);

GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
mp_ins_M_elems_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mp_ins_M_elems_V_7_address0),
    .ce0(mp_ins_M_elems_V_7_ce0),
    .we0(mp_ins_M_elems_V_7_we0),
    .d0(ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4),
    .address1(mp_ins_M_elems_V_7_address1),
    .ce1(mp_ins_M_elems_V_7_ce1),
    .q1(mp_ins_M_elems_V_7_q1)
);

GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_8ns_4ns_4ns_10_4_1_U6313(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2329_p0),
    .din1(grp_fu_2329_p1),
    .din2(grp_fu_2329_p2),
    .ce(grp_fu_2329_ce),
    .dout(grp_fu_2329_p3)
);

GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_8ns_4ns_4ns_10_4_1_U6314(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2337_p0),
    .din1(grp_fu_2337_p1),
    .din2(grp_fu_2337_p2),
    .ce(grp_fu_2337_ce),
    .dout(grp_fu_2337_p3)
);

GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_8ns_4ns_4ns_10_4_1_U6315(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2345_p0),
    .din1(grp_fu_2345_p1),
    .din2(grp_fu_2345_p2),
    .ce(grp_fu_2345_ce),
    .dout(grp_fu_2345_p3)
);

GIN_compute_graphs_mac_muladd_7ns_4ns_4ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
mac_muladd_7ns_4ns_4ns_11_4_1_U6316(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2353_p0),
    .din1(grp_fu_2353_p1),
    .din2(grp_fu_2353_p2),
    .ce(grp_fu_2353_ce),
    .dout(grp_fu_2353_p3)
);

GIN_compute_graphs_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_251_reg_1049 <= ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_251_reg_1049 <= ap_phi_reg_pp0_iter3_empty_251_reg_1049;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_252_reg_1059 <= ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_252_reg_1059 <= ap_phi_reg_pp0_iter3_empty_252_reg_1059;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_253_reg_1069 <= ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_253_reg_1069 <= ap_phi_reg_pp0_iter3_empty_253_reg_1069;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_254_reg_1079 <= ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_254_reg_1079 <= ap_phi_reg_pp0_iter3_empty_254_reg_1079;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_255_reg_1089 <= ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_255_reg_1089 <= ap_phi_reg_pp0_iter3_empty_255_reg_1089;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_256_reg_1099 <= ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_256_reg_1099 <= ap_phi_reg_pp0_iter3_empty_256_reg_1099;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_257_reg_1109 <= ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_257_reg_1109 <= ap_phi_reg_pp0_iter3_empty_257_reg_1109;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_empty_reg_1039 <= ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_empty_reg_1039 <= ap_phi_reg_pp0_iter3_empty_reg_1039;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_251_reg_1049 <= mp_ins_M_elems_V_6_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_251_reg_1049 <= ap_phi_reg_pp0_iter5_empty_251_reg_1049;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_252_reg_1059 <= mp_ins_M_elems_V_5_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_252_reg_1059 <= ap_phi_reg_pp0_iter5_empty_252_reg_1059;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_253_reg_1069 <= mp_ins_M_elems_V_4_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_253_reg_1069 <= ap_phi_reg_pp0_iter5_empty_253_reg_1069;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_254_reg_1079 <= mp_ins_M_elems_V_3_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_254_reg_1079 <= ap_phi_reg_pp0_iter5_empty_254_reg_1079;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_255_reg_1089 <= mp_ins_M_elems_V_2_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_255_reg_1089 <= ap_phi_reg_pp0_iter5_empty_255_reg_1089;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_256_reg_1099 <= mp_ins_M_elems_V_1_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_256_reg_1099 <= ap_phi_reg_pp0_iter5_empty_256_reg_1099;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_257_reg_1109 <= mp_ins_M_elems_V_0_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_257_reg_1109 <= ap_phi_reg_pp0_iter5_empty_257_reg_1109;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln65_reg_2498_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_empty_reg_1039 <= mp_ins_M_elems_V_7_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_empty_reg_1039 <= ap_phi_reg_pp0_iter5_empty_reg_1039;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            dim_fu_196 <= 7'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_1161_p2 == 1'd0))) begin
            dim_fu_196 <= add_ln50_1_fu_1264_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            e_end_2_fu_188 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            e_end_2_fu_188 <= e_end_reg_2493;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            e_fu_204 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_1161_p2 == 1'd0))) begin
            e_fu_204 <= select_ln43_10_fu_1212_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            e_start_2_fu_192 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            e_start_2_fu_192 <= e_start_fu_1396_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_200 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_1161_p2 == 1'd0))) begin
            i_fu_200 <= add_ln50_fu_1258_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_208 <= 36'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_1161_p2 == 1'd0))) begin
            indvar_flatten_fu_208 <= add_ln43_9_fu_1166_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            nd_idx_2_fu_184 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            nd_idx_2_fu_184 <= nd_idx_fu_1381_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln712_862_reg_2959 <= add_ln712_862_fu_2057_p2;
        add_ln712_864_reg_3059 <= add_ln712_864_fu_2191_p2;
        add_ln712_866_reg_2989 <= add_ln712_866_fu_2085_p2;
        add_ln712_868_reg_3064 <= add_ln712_868_fu_2235_p2;
        add_ln712_870_reg_3019 <= add_ln712_870_fu_2113_p2;
        add_ln712_872_reg_3069 <= add_ln712_872_fu_2279_p2;
        add_ln712_874_reg_3049 <= add_ln712_874_fu_2141_p2;
        add_ln712_876_reg_3074 <= add_ln712_876_fu_2323_p2;
        add_ln89_47_reg_2964 <= add_ln89_47_fu_2063_p2;
        add_ln89_50_reg_2994 <= add_ln89_50_fu_2091_p2;
        add_ln89_53_reg_3024 <= add_ln89_53_fu_2119_p2;
        add_ln89_56_reg_3054 <= add_ln89_56_fu_2147_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        edge_embed_V_18_reg_2666_pp0_iter5_reg <= edge_embed_V_18_reg_2666;
        edge_embed_V_19_reg_2676_pp0_iter5_reg <= edge_embed_V_19_reg_2676;
        edge_embed_V_20_reg_2686_pp0_iter5_reg <= edge_embed_V_20_reg_2686;
        edge_embed_V_21_reg_2696_pp0_iter5_reg <= edge_embed_V_21_reg_2696;
        icmp_ln43_reg_2428_pp0_iter2_reg <= icmp_ln43_reg_2428;
        icmp_ln43_reg_2428_pp0_iter3_reg <= icmp_ln43_reg_2428_pp0_iter2_reg;
        icmp_ln43_reg_2428_pp0_iter4_reg <= icmp_ln43_reg_2428_pp0_iter3_reg;
        icmp_ln43_reg_2428_pp0_iter5_reg <= icmp_ln43_reg_2428_pp0_iter4_reg;
        icmp_ln43_reg_2428_pp0_iter6_reg <= icmp_ln43_reg_2428_pp0_iter5_reg;
        icmp_ln65_reg_2498_pp0_iter3_reg <= icmp_ln65_reg_2498;
        icmp_ln65_reg_2498_pp0_iter4_reg <= icmp_ln65_reg_2498_pp0_iter3_reg;
        icmp_ln79_reg_2468_pp0_iter2_reg <= icmp_ln79_reg_2468;
        icmp_ln79_reg_2468_pp0_iter3_reg <= icmp_ln79_reg_2468_pp0_iter2_reg;
        icmp_ln79_reg_2468_pp0_iter4_reg <= icmp_ln79_reg_2468_pp0_iter3_reg;
        icmp_ln79_reg_2468_pp0_iter5_reg <= icmp_ln79_reg_2468_pp0_iter4_reg;
        icmp_ln79_reg_2468_pp0_iter6_reg <= icmp_ln79_reg_2468_pp0_iter5_reg;
        message413_addr_reg_2921_pp0_iter8_reg <= message413_addr_reg_2921;
        message414_addr_reg_2927_pp0_iter8_reg <= message414_addr_reg_2927;
        message415_addr_reg_2933_pp0_iter8_reg <= message415_addr_reg_2933;
        message416_addr_reg_2711_pp0_iter6_reg <= message416_addr_reg_2711;
        message417_addr_reg_2717_pp0_iter6_reg <= message417_addr_reg_2717;
        message418_addr_reg_2723_pp0_iter6_reg <= message418_addr_reg_2723;
        message419_addr_reg_2729_pp0_iter6_reg <= message419_addr_reg_2729;
        message4_addr_reg_2915_pp0_iter8_reg <= message4_addr_reg_2915;
        select_ln43_reg_2438_pp0_iter2_reg <= select_ln43_reg_2438;
        select_ln43_reg_2438_pp0_iter3_reg <= select_ln43_reg_2438_pp0_iter2_reg;
        select_ln43_reg_2438_pp0_iter4_reg <= select_ln43_reg_2438_pp0_iter3_reg;
        trunc_ln712_100_reg_2701_pp0_iter5_reg <= trunc_ln712_100_reg_2701;
        trunc_ln712_71_reg_2949 <= trunc_ln712_71_fu_2041_p1;
        trunc_ln712_72_reg_2954 <= trunc_ln712_72_fu_2045_p1;
        trunc_ln712_75_reg_2979 <= trunc_ln712_75_fu_2069_p1;
        trunc_ln712_76_reg_2984 <= trunc_ln712_76_fu_2073_p1;
        trunc_ln712_79_reg_3009 <= trunc_ln712_79_fu_2097_p1;
        trunc_ln712_80_reg_3014 <= trunc_ln712_80_fu_2101_p1;
        trunc_ln712_83_reg_3039 <= trunc_ln712_83_fu_2125_p1;
        trunc_ln712_84_reg_3044 <= trunc_ln712_84_fu_2129_p1;
        trunc_ln712_88_reg_2671_pp0_iter5_reg <= trunc_ln712_88_reg_2671;
        trunc_ln712_92_reg_2681_pp0_iter5_reg <= trunc_ln712_92_reg_2681;
        trunc_ln712_96_reg_2691_pp0_iter5_reg <= trunc_ln712_96_reg_2691;
        zext_ln43_3_reg_2453_pp0_iter2_reg[8 : 0] <= zext_ln43_3_reg_2453[8 : 0];
        zext_ln712_53_reg_2538_pp0_iter4_reg[3 : 0] <= zext_ln712_53_reg_2538[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_2428 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln712_879_reg_2472 <= add_ln712_879_fu_1310_p2;
        e_end_reg_2493 <= e_end_fu_1388_p3;
        icmp_ln65_reg_2498 <= icmp_ln65_fu_1403_p2;
        idxprom34_165_mid2_v_v_reg_2483 <= {{edge_attrs_1_1_q0[38:32]}};
        idxprom34_280_mid2_v_v_reg_2488 <= {{edge_attrs_1_1_q0[70:64]}};
        trunc_ln712_reg_2478 <= trunc_ln712_fu_1315_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_2468_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln712_880_reg_2895 <= add_ln712_880_fu_1863_p2;
        add_ln712_884_reg_2900 <= add_ln712_884_fu_1918_p2;
        add_ln712_888_reg_2905 <= add_ln712_888_fu_1973_p2;
        add_ln712_892_reg_2910 <= add_ln712_892_fu_2028_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln712_896_reg_2550 <= add_ln712_896_fu_1566_p2;
        add_ln712_897_reg_2555 <= add_ln712_897_fu_1572_p2;
        zext_ln50_reg_2526[3 : 0] <= zext_ln50_fu_1538_p1[3 : 0];
        zext_ln712_53_reg_2538[3 : 0] <= zext_ln712_53_fu_1549_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_2468_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln89_59_reg_2785 <= add_ln89_59_fu_1745_p2;
        add_ln89_62_reg_2800 <= add_ln89_62_fu_1759_p2;
        add_ln89_65_reg_2815 <= add_ln89_65_fu_1773_p2;
        add_ln89_68_reg_2830 <= add_ln89_68_fu_1787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln43_reg_2428 <= icmp_ln43_fu_1161_p2;
        mul_ln712_cast_reg_2421[6 : 0] <= mul_ln712_cast_fu_1119_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_empty_251_reg_1049 <= ap_phi_reg_pp0_iter0_empty_251_reg_1049;
        ap_phi_reg_pp0_iter1_empty_252_reg_1059 <= ap_phi_reg_pp0_iter0_empty_252_reg_1059;
        ap_phi_reg_pp0_iter1_empty_253_reg_1069 <= ap_phi_reg_pp0_iter0_empty_253_reg_1069;
        ap_phi_reg_pp0_iter1_empty_254_reg_1079 <= ap_phi_reg_pp0_iter0_empty_254_reg_1079;
        ap_phi_reg_pp0_iter1_empty_255_reg_1089 <= ap_phi_reg_pp0_iter0_empty_255_reg_1089;
        ap_phi_reg_pp0_iter1_empty_256_reg_1099 <= ap_phi_reg_pp0_iter0_empty_256_reg_1099;
        ap_phi_reg_pp0_iter1_empty_257_reg_1109 <= ap_phi_reg_pp0_iter0_empty_257_reg_1109;
        ap_phi_reg_pp0_iter1_empty_reg_1039 <= ap_phi_reg_pp0_iter0_empty_reg_1039;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_empty_251_reg_1049 <= ap_phi_reg_pp0_iter1_empty_251_reg_1049;
        ap_phi_reg_pp0_iter2_empty_252_reg_1059 <= ap_phi_reg_pp0_iter1_empty_252_reg_1059;
        ap_phi_reg_pp0_iter2_empty_253_reg_1069 <= ap_phi_reg_pp0_iter1_empty_253_reg_1069;
        ap_phi_reg_pp0_iter2_empty_254_reg_1079 <= ap_phi_reg_pp0_iter1_empty_254_reg_1079;
        ap_phi_reg_pp0_iter2_empty_255_reg_1089 <= ap_phi_reg_pp0_iter1_empty_255_reg_1089;
        ap_phi_reg_pp0_iter2_empty_256_reg_1099 <= ap_phi_reg_pp0_iter1_empty_256_reg_1099;
        ap_phi_reg_pp0_iter2_empty_257_reg_1109 <= ap_phi_reg_pp0_iter1_empty_257_reg_1109;
        ap_phi_reg_pp0_iter2_empty_reg_1039 <= ap_phi_reg_pp0_iter1_empty_reg_1039;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_empty_251_reg_1049 <= ap_phi_reg_pp0_iter2_empty_251_reg_1049;
        ap_phi_reg_pp0_iter3_empty_252_reg_1059 <= ap_phi_reg_pp0_iter2_empty_252_reg_1059;
        ap_phi_reg_pp0_iter3_empty_253_reg_1069 <= ap_phi_reg_pp0_iter2_empty_253_reg_1069;
        ap_phi_reg_pp0_iter3_empty_254_reg_1079 <= ap_phi_reg_pp0_iter2_empty_254_reg_1079;
        ap_phi_reg_pp0_iter3_empty_255_reg_1089 <= ap_phi_reg_pp0_iter2_empty_255_reg_1089;
        ap_phi_reg_pp0_iter3_empty_256_reg_1099 <= ap_phi_reg_pp0_iter2_empty_256_reg_1099;
        ap_phi_reg_pp0_iter3_empty_257_reg_1109 <= ap_phi_reg_pp0_iter2_empty_257_reg_1109;
        ap_phi_reg_pp0_iter3_empty_reg_1039 <= ap_phi_reg_pp0_iter2_empty_reg_1039;
        node_nd_2_fu_180 <= node_nd_fu_1373_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_empty_251_reg_1049 <= ap_phi_reg_pp0_iter4_empty_251_reg_1049;
        ap_phi_reg_pp0_iter5_empty_252_reg_1059 <= ap_phi_reg_pp0_iter4_empty_252_reg_1059;
        ap_phi_reg_pp0_iter5_empty_253_reg_1069 <= ap_phi_reg_pp0_iter4_empty_253_reg_1069;
        ap_phi_reg_pp0_iter5_empty_254_reg_1079 <= ap_phi_reg_pp0_iter4_empty_254_reg_1079;
        ap_phi_reg_pp0_iter5_empty_255_reg_1089 <= ap_phi_reg_pp0_iter4_empty_255_reg_1089;
        ap_phi_reg_pp0_iter5_empty_256_reg_1099 <= ap_phi_reg_pp0_iter4_empty_256_reg_1099;
        ap_phi_reg_pp0_iter5_empty_257_reg_1109 <= ap_phi_reg_pp0_iter4_empty_257_reg_1109;
        ap_phi_reg_pp0_iter5_empty_reg_1039 <= ap_phi_reg_pp0_iter4_empty_reg_1039;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_empty_254_reg_1079 <= ap_phi_reg_pp0_iter6_empty_254_reg_1079;
        ap_phi_reg_pp0_iter7_empty_255_reg_1089 <= ap_phi_reg_pp0_iter6_empty_255_reg_1089;
        ap_phi_reg_pp0_iter7_empty_256_reg_1099 <= ap_phi_reg_pp0_iter6_empty_256_reg_1099;
        ap_phi_reg_pp0_iter7_empty_257_reg_1109 <= ap_phi_reg_pp0_iter6_empty_257_reg_1109;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embed_V_15_reg_2969 <= edge_embedding_weights_V_1_1_q2;
        edge_embed_V_16_reg_2999 <= edge_embedding_weights_V_1_2_q2;
        edge_embed_V_17_reg_3029 <= edge_embedding_weights_V_1_3_q2;
        edge_embed_V_reg_2939 <= edge_embedding_weights_V_1_0_q2;
        edge_embedding_weights_V_1_0_load_reg_2944 <= edge_embedding_weights_V_1_0_q1;
        edge_embedding_weights_V_1_1_load_reg_2974 <= edge_embedding_weights_V_1_1_q1;
        edge_embedding_weights_V_1_2_load_reg_3004 <= edge_embedding_weights_V_1_2_q1;
        edge_embedding_weights_V_1_3_load_reg_3034 <= edge_embedding_weights_V_1_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_2468_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embed_V_18_reg_2666 <= edge_embedding_weights_V_1_4_q2;
        edge_embed_V_19_reg_2676 <= edge_embedding_weights_V_1_5_q2;
        edge_embed_V_20_reg_2686 <= edge_embedding_weights_V_1_6_q2;
        edge_embed_V_21_reg_2696 <= edge_embedding_weights_V_1_7_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_2468_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_4_load_1_reg_2780 <= edge_embedding_weights_V_1_4_q0;
        edge_embedding_weights_V_1_4_load_reg_2775 <= edge_embedding_weights_V_1_4_q1;
        edge_embedding_weights_V_1_5_load_1_reg_2795 <= edge_embedding_weights_V_1_5_q0;
        edge_embedding_weights_V_1_5_load_reg_2790 <= edge_embedding_weights_V_1_5_q1;
        edge_embedding_weights_V_1_6_load_1_reg_2810 <= edge_embedding_weights_V_1_6_q0;
        edge_embedding_weights_V_1_6_load_reg_2805 <= edge_embedding_weights_V_1_6_q1;
        edge_embedding_weights_V_1_7_load_1_reg_2825 <= edge_embedding_weights_V_1_7_q0;
        edge_embedding_weights_V_1_7_load_reg_2820 <= edge_embedding_weights_V_1_7_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_1161_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln79_reg_2468 <= icmp_ln79_fu_1252_p2;
        nd_idx_2_load_reg_2432 <= ap_sig_allocacmp_nd_idx_2_load;
        select_ln43_10_reg_2445 <= select_ln43_10_fu_1212_p3;
        select_ln43_reg_2438 <= select_ln43_fu_1196_p3;
        zext_ln43_3_reg_2453[8 : 0] <= zext_ln43_3_fu_1236_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_2428_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message413_addr_reg_2921 <= zext_ln712_60_fu_2034_p1;
        message414_addr_reg_2927 <= zext_ln712_60_fu_2034_p1;
        message415_addr_reg_2933 <= zext_ln712_60_fu_2034_p1;
        message4_addr_reg_2915 <= zext_ln712_60_fu_2034_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_2428_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message416_addr_reg_2711 <= zext_ln712_61_fu_1729_p1;
        message417_addr_reg_2717 <= zext_ln712_61_fu_1729_p1;
        message418_addr_reg_2723 <= zext_ln712_61_fu_1729_p1;
        message419_addr_reg_2729 <= zext_ln712_61_fu_1729_p1;
        zext_ln712_52_reg_2706[3 : 0] <= zext_ln712_52_fu_1720_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_2428_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_1_load_reg_2575 <= neighbor_tables_1_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1403_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln145_reg_2502 <= trunc_ln145_fu_1408_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_2468_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln712_100_reg_2701 <= trunc_ln712_100_fu_1692_p1;
        trunc_ln712_88_reg_2671 <= trunc_ln712_88_fu_1680_p1;
        trunc_ln712_92_reg_2681 <= trunc_ln712_92_fu_1684_p1;
        trunc_ln712_96_reg_2691 <= trunc_ln712_96_fu_1688_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_1161_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 = embeddings_per_node_0_0_0_0_012_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 = embeddings_per_node_0_0_0_0_013_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 = embeddings_per_node_0_0_0_0_01216_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 = embeddings_per_node_0_0_0_0_01323_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 = embeddings_per_node_0_0_0_0_01217_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 = embeddings_per_node_0_0_0_0_01324_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 = embeddings_per_node_0_0_0_0_01218_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 = embeddings_per_node_0_0_0_0_01325_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 = embeddings_per_node_0_0_0_0_01219_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 = embeddings_per_node_0_0_0_0_01326_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 = embeddings_per_node_0_0_0_0_01220_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 = embeddings_per_node_0_0_0_0_01327_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 = embeddings_per_node_0_0_0_0_01221_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 = embeddings_per_node_0_0_0_0_01328_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0))) begin
        if ((trunc_ln145_reg_2502 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 = embeddings_per_node_0_0_0_0_01222_dout;
        end else if ((trunc_ln145_reg_2502 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 = embeddings_per_node_0_0_0_0_01329_dout;
        end else begin
            ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_e_end_2_load = e_end_reg_2493;
    end else begin
        ap_sig_allocacmp_e_end_2_load = e_end_2_fu_188;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_nd_idx_2_load = nd_idx_fu_1381_p3;
    end else begin
        ap_sig_allocacmp_nd_idx_2_load = nd_idx_2_fu_184;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        degree_tables_1_1_ce0 = 1'b1;
    end else begin
        degree_tables_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_1_ce0 = 1'b1;
    end else begin
        edge_attrs_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_0_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_0_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_0_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_1_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_1_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_1_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_2_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_2_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_2_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_3_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_3_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_3_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_4_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_4_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_4_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_4_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_5_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_5_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_5_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_5_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_6_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_6_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_6_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_6_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_7_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_7_ce1 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_embedding_weights_V_1_7_ce2 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_7_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01216_blk_n = embeddings_per_node_0_0_0_0_01216_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01216_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01216_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01216_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01217_blk_n = embeddings_per_node_0_0_0_0_01217_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01217_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01217_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01217_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01218_blk_n = embeddings_per_node_0_0_0_0_01218_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01218_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01218_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01218_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01219_blk_n = embeddings_per_node_0_0_0_0_01219_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01219_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01219_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01219_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01220_blk_n = embeddings_per_node_0_0_0_0_01220_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01220_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01220_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01220_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01221_blk_n = embeddings_per_node_0_0_0_0_01221_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01221_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01221_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01221_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01222_blk_n = embeddings_per_node_0_0_0_0_01222_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01222_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01222_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01222_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_012_blk_n = embeddings_per_node_0_0_0_0_012_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_012_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_012_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_012_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01323_blk_n = embeddings_per_node_0_0_0_0_01323_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01323_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01323_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01323_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01324_blk_n = embeddings_per_node_0_0_0_0_01324_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01324_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01324_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01324_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01325_blk_n = embeddings_per_node_0_0_0_0_01325_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01325_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01325_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01325_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01326_blk_n = embeddings_per_node_0_0_0_0_01326_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01326_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01326_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01326_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01327_blk_n = embeddings_per_node_0_0_0_0_01327_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01327_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01327_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01327_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01328_blk_n = embeddings_per_node_0_0_0_0_01328_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01328_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01328_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01328_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01329_blk_n = embeddings_per_node_0_0_0_0_01329_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_01329_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_01329_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_01329_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_013_blk_n = embeddings_per_node_0_0_0_0_013_empty_n;
    end else begin
        embeddings_per_node_0_0_0_0_013_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op168_read_state4 == 1'b1))) begin
        embeddings_per_node_0_0_0_0_013_read = 1'b1;
    end else begin
        embeddings_per_node_0_0_0_0_013_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_2329_ce = 1'b1;
    end else begin
        grp_fu_2329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_2337_ce = 1'b1;
    end else begin
        grp_fu_2337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_2345_ce = 1'b1;
    end else begin
        grp_fu_2345_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_2353_ce = 1'b1;
    end else begin
        grp_fu_2353_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message413_ce0 = 1'b1;
    end else begin
        message413_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message413_ce1 = 1'b1;
    end else begin
        message413_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message413_we0 = 1'b1;
    end else begin
        message413_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message414_ce0 = 1'b1;
    end else begin
        message414_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message414_ce1 = 1'b1;
    end else begin
        message414_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message414_we0 = 1'b1;
    end else begin
        message414_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message415_ce0 = 1'b1;
    end else begin
        message415_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message415_ce1 = 1'b1;
    end else begin
        message415_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message415_we0 = 1'b1;
    end else begin
        message415_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message416_ce0 = 1'b1;
    end else begin
        message416_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message416_ce1 = 1'b1;
    end else begin
        message416_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message416_we0 = 1'b1;
    end else begin
        message416_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message417_ce0 = 1'b1;
    end else begin
        message417_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message417_ce1 = 1'b1;
    end else begin
        message417_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message417_we0 = 1'b1;
    end else begin
        message417_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message418_ce0 = 1'b1;
    end else begin
        message418_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message418_ce1 = 1'b1;
    end else begin
        message418_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message418_we0 = 1'b1;
    end else begin
        message418_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message419_ce0 = 1'b1;
    end else begin
        message419_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message419_ce1 = 1'b1;
    end else begin
        message419_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message419_we0 = 1'b1;
    end else begin
        message419_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message4_ce0 = 1'b1;
    end else begin
        message4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message4_ce1 = 1'b1;
    end else begin
        message4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        message4_we0 = 1'b1;
    end else begin
        message4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_0_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_0_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_0_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_1_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_1_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_1_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_2_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_2_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_2_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_3_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_3_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_3_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_4_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_4_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_4_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_5_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_5_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_5_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_6_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_6_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_6_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_7_ce0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_7_ce1 = 1'b1;
    end else begin
        mp_ins_M_elems_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mp_ins_M_elems_V_7_we0 = 1'b1;
    end else begin
        mp_ins_M_elems_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_1_ce0 = 1'b1;
    end else begin
        neighbor_tables_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln43_7_fu_1450_p2 = (idxprom34_165_mid2_v_v_reg_2483 + 7'd5);

assign add_ln43_8_fu_1494_p2 = (idxprom34_280_mid2_v_v_reg_2488 + 7'd11);

assign add_ln43_9_fu_1166_p2 = (indvar_flatten_fu_208 + 36'd1);

assign add_ln43_fu_1184_p2 = (e_fu_204 + 32'd1);

assign add_ln50_1_fu_1264_p2 = (select_ln43_9_fu_1204_p3 + 7'd8);

assign add_ln50_fu_1258_p2 = (select_ln43_fu_1196_p3 + 4'd1);

assign add_ln712_862_fu_2057_p2 = (edge_embedding_weights_V_1_0_q0 + ap_phi_reg_pp0_iter7_empty_257_reg_1109);

assign add_ln712_864_fu_2191_p2 = (message4_q1 + zext_ln712_fu_2187_p1);

assign add_ln712_865_fu_2197_p2 = (edge_embed_V_15_reg_2969 + edge_embedding_weights_V_1_1_load_reg_2974);

assign add_ln712_866_fu_2085_p2 = (edge_embedding_weights_V_1_1_q0 + ap_phi_reg_pp0_iter7_empty_256_reg_1099);

assign add_ln712_868_fu_2235_p2 = (message413_q1 + zext_ln712_15_fu_2231_p1);

assign add_ln712_869_fu_2241_p2 = (edge_embed_V_16_reg_2999 + edge_embedding_weights_V_1_2_load_reg_3004);

assign add_ln712_870_fu_2113_p2 = (edge_embedding_weights_V_1_2_q0 + ap_phi_reg_pp0_iter7_empty_255_reg_1089);

assign add_ln712_872_fu_2279_p2 = (message414_q1 + zext_ln712_16_fu_2275_p1);

assign add_ln712_873_fu_2285_p2 = (edge_embed_V_17_reg_3029 + edge_embedding_weights_V_1_3_load_reg_3034);

assign add_ln712_874_fu_2141_p2 = (edge_embedding_weights_V_1_3_q0 + ap_phi_reg_pp0_iter7_empty_254_reg_1079);

assign add_ln712_876_fu_2323_p2 = (message415_q1 + zext_ln712_17_fu_2319_p1);

assign add_ln712_877_fu_1818_p2 = (edge_embed_V_18_reg_2666_pp0_iter5_reg + edge_embedding_weights_V_1_4_load_reg_2775);

assign add_ln712_878_fu_1822_p2 = (edge_embedding_weights_V_1_4_load_1_reg_2780 + ap_phi_reg_pp0_iter6_empty_253_reg_1069);

assign add_ln712_879_fu_1310_p2 = (mul_ln712_cast_reg_2421 + zext_ln712_46_fu_1306_p1);

assign add_ln712_880_fu_1863_p2 = (message416_q1 + zext_ln712_18_fu_1859_p1);

assign add_ln712_881_fu_1873_p2 = (edge_embed_V_19_reg_2676_pp0_iter5_reg + edge_embedding_weights_V_1_5_load_reg_2790);

assign add_ln712_882_fu_1877_p2 = (edge_embedding_weights_V_1_5_load_1_reg_2795 + ap_phi_reg_pp0_iter6_empty_252_reg_1059);

assign add_ln712_883_fu_1459_p2 = (mul_ln712_cast_reg_2421 + zext_ln712_48_fu_1455_p1);

assign add_ln712_884_fu_1918_p2 = (message417_q1 + zext_ln712_19_fu_1914_p1);

assign add_ln712_885_fu_1928_p2 = (edge_embed_V_20_reg_2686_pp0_iter5_reg + edge_embedding_weights_V_1_6_load_reg_2805);

assign add_ln712_886_fu_1932_p2 = (edge_embedding_weights_V_1_6_load_1_reg_2810 + ap_phi_reg_pp0_iter6_empty_251_reg_1049);

assign add_ln712_887_fu_1503_p2 = (mul_ln712_cast_reg_2421 + zext_ln712_50_fu_1499_p1);

assign add_ln712_888_fu_1973_p2 = (message418_q1 + zext_ln712_20_fu_1969_p1);

assign add_ln712_889_fu_1983_p2 = (edge_embed_V_21_reg_2696_pp0_iter5_reg + edge_embedding_weights_V_1_7_load_reg_2820);

assign add_ln712_890_fu_1987_p2 = (edge_embedding_weights_V_1_7_load_1_reg_2825 + ap_phi_reg_pp0_iter6_empty_reg_1039);

assign add_ln712_892_fu_2028_p2 = (message419_q1 + zext_ln712_21_fu_2024_p1);

assign add_ln712_895_fu_1552_p2 = (sub_ln712_7_fu_1444_p2 + zext_ln712_53_fu_1549_p1);

assign add_ln712_896_fu_1566_p2 = (sub_ln712_8_fu_1488_p2 + zext_ln712_53_fu_1549_p1);

assign add_ln712_897_fu_1572_p2 = (sub_ln712_9_fu_1532_p2 + zext_ln712_53_fu_1549_p1);

assign add_ln712_899_fu_1723_p2 = (sub_ln712_fu_1714_p2 + zext_ln712_52_fu_1720_p1);

assign add_ln712_fu_2153_p2 = (edge_embed_V_reg_2939 + edge_embedding_weights_V_1_0_load_reg_2944);

assign add_ln89_47_fu_2063_p2 = (trunc_ln712_73_fu_2049_p1 + trunc_ln712_74_fu_2053_p1);

assign add_ln89_48_fu_2166_p2 = (add_ln89_47_reg_2964 + add_ln89_fu_2162_p2);

assign add_ln89_49_fu_2206_p2 = (trunc_ln712_76_reg_2984 + trunc_ln712_75_reg_2979);

assign add_ln89_50_fu_2091_p2 = (trunc_ln712_77_fu_2077_p1 + trunc_ln712_78_fu_2081_p1);

assign add_ln89_51_fu_2210_p2 = (add_ln89_50_reg_2994 + add_ln89_49_fu_2206_p2);

assign add_ln89_52_fu_2250_p2 = (trunc_ln712_80_reg_3014 + trunc_ln712_79_reg_3009);

assign add_ln89_53_fu_2119_p2 = (trunc_ln712_81_fu_2105_p1 + trunc_ln712_82_fu_2109_p1);

assign add_ln89_54_fu_2254_p2 = (add_ln89_53_reg_3024 + add_ln89_52_fu_2250_p2);

assign add_ln89_55_fu_2294_p2 = (trunc_ln712_84_reg_3044 + trunc_ln712_83_reg_3039);

assign add_ln89_56_fu_2147_p2 = (trunc_ln712_85_fu_2133_p1 + trunc_ln712_86_fu_2137_p1);

assign add_ln89_57_fu_2298_p2 = (add_ln89_56_reg_3054 + add_ln89_55_fu_2294_p2);

assign add_ln89_58_fu_1833_p2 = (trunc_ln712_88_reg_2671_pp0_iter5_reg + trunc_ln712_87_fu_1814_p1);

assign add_ln89_59_fu_1745_p2 = (trunc_ln712_89_fu_1737_p1 + trunc_ln712_90_fu_1741_p1);

assign add_ln89_60_fu_1838_p2 = (add_ln89_59_reg_2785 + add_ln89_58_fu_1833_p2);

assign add_ln89_61_fu_1888_p2 = (trunc_ln712_92_reg_2681_pp0_iter5_reg + trunc_ln712_91_fu_1869_p1);

assign add_ln89_62_fu_1759_p2 = (trunc_ln712_93_fu_1751_p1 + trunc_ln712_94_fu_1755_p1);

assign add_ln89_63_fu_1893_p2 = (add_ln89_62_reg_2800 + add_ln89_61_fu_1888_p2);

assign add_ln89_64_fu_1943_p2 = (trunc_ln712_96_reg_2691_pp0_iter5_reg + trunc_ln712_95_fu_1924_p1);

assign add_ln89_65_fu_1773_p2 = (trunc_ln712_97_fu_1765_p1 + trunc_ln712_98_fu_1769_p1);

assign add_ln89_66_fu_1948_p2 = (add_ln89_65_reg_2815 + add_ln89_64_fu_1943_p2);

assign add_ln89_67_fu_1998_p2 = (trunc_ln712_100_reg_2701_pp0_iter5_reg + trunc_ln712_99_fu_1979_p1);

assign add_ln89_68_fu_1787_p2 = (trunc_ln712_101_fu_1779_p1 + trunc_ln712_102_fu_1783_p1);

assign add_ln89_69_fu_2003_p2 = (add_ln89_68_reg_2830 + add_ln89_67_fu_1998_p2);

assign add_ln89_fu_2162_p2 = (trunc_ln712_72_reg_2954 + trunc_ln712_71_reg_2949);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (((io_acc_block_signal_op158 == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((ap_predicate_op168_read_state4 == 1'b1) & (io_acc_block_signal_op168 == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & (((io_acc_block_signal_op158 == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((ap_predicate_op168_read_state4 == 1'b1) & (io_acc_block_signal_op168 == 1'b0))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (((io_acc_block_signal_op158 == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((ap_predicate_op168_read_state4 == 1'b1) & (io_acc_block_signal_op168 == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_289 = (icmp_ln79_reg_2468_pp0_iter4_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_295 = (icmp_ln79_reg_2468_pp0_iter4_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_301 = (icmp_ln79_reg_2468_pp0_iter4_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_307 = (icmp_ln79_reg_2468_pp0_iter4_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_353 = (icmp_ln79_reg_2468_pp0_iter5_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_364 = (icmp_ln79_reg_2468_pp0_iter5_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_375 = (icmp_ln79_reg_2468_pp0_iter5_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_386 = (icmp_ln79_reg_2468_pp0_iter5_reg == 1'd1);
end

assign ap_enable_operation_411 = (1'b1 == 1'b1);

assign ap_enable_operation_421 = (1'b1 == 1'b1);

assign ap_enable_operation_431 = (1'b1 == 1'b1);

assign ap_enable_operation_441 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_442 = (icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_443 = (icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_444 = (icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_445 = (icmp_ln79_reg_2468_pp0_iter6_reg == 1'd1);
end

assign ap_enable_operation_454 = (1'b1 == 1'b1);

assign ap_enable_operation_463 = (1'b1 == 1'b1);

assign ap_enable_operation_472 = (1'b1 == 1'b1);

assign ap_enable_operation_481 = (1'b1 == 1'b1);

assign ap_enable_operation_483 = (1'b1 == 1'b1);

assign ap_enable_operation_484 = (1'b1 == 1'b1);

assign ap_enable_operation_485 = (1'b1 == 1'b1);

assign ap_enable_operation_486 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state10_pp0_iter9_stage0 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter5_stage0 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter6_stage0 = ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter7_stage0 = ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter8_stage0 = ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_empty_251_reg_1049 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_252_reg_1059 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_253_reg_1069 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_254_reg_1079 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_255_reg_1089 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_256_reg_1099 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_257_reg_1109 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_1039 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951 = 'bx;

always @ (*) begin
    ap_predicate_op158_read_state4 = ((trunc_ln145_reg_2502 == 1'd0) & (icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_read_state4 = ((trunc_ln145_reg_2502 == 1'd1) & (icmp_ln65_reg_2498 == 1'd1) & (icmp_ln43_reg_2428_pp0_iter2_reg == 1'd0));
end

assign degree_tables_1_1_address0 = zext_ln57_fu_1241_p1;

assign e_end_4_fu_1368_p2 = (node_degree_fu_1358_p4 + select_ln43_10_reg_2445);

assign e_end_fu_1388_p1 = ap_sig_allocacmp_e_end_2_load;

assign e_end_fu_1388_p3 = ((icmp_ln55_fu_1343_p2[0:0] == 1'b1) ? e_end_fu_1388_p1 : e_end_4_fu_1368_p2);

assign e_start_fu_1396_p3 = ((icmp_ln55_fu_1343_p2[0:0] == 1'b1) ? e_start_2_fu_192 : select_ln43_10_reg_2445);

assign edge_attrs_1_1_address0 = zext_ln43_3_fu_1236_p1;

assign edge_embedding_weights_V_1_0_address0 = zext_ln712_56_fu_1807_p1;

assign edge_embedding_weights_V_1_0_address1 = zext_ln712_55_fu_1800_p1;

assign edge_embedding_weights_V_1_0_address2 = zext_ln712_54_fu_1793_p1;

assign edge_embedding_weights_V_1_1_address0 = zext_ln712_56_fu_1807_p1;

assign edge_embedding_weights_V_1_1_address1 = zext_ln712_55_fu_1800_p1;

assign edge_embedding_weights_V_1_1_address2 = zext_ln712_54_fu_1793_p1;

assign edge_embedding_weights_V_1_2_address0 = zext_ln712_56_fu_1807_p1;

assign edge_embedding_weights_V_1_2_address1 = zext_ln712_55_fu_1800_p1;

assign edge_embedding_weights_V_1_2_address2 = zext_ln712_54_fu_1793_p1;

assign edge_embedding_weights_V_1_3_address0 = zext_ln712_56_fu_1807_p1;

assign edge_embedding_weights_V_1_3_address1 = zext_ln712_55_fu_1800_p1;

assign edge_embedding_weights_V_1_3_address2 = zext_ln712_54_fu_1793_p1;

assign edge_embedding_weights_V_1_4_address0 = zext_ln712_59_fu_1673_p1;

assign edge_embedding_weights_V_1_4_address1 = zext_ln712_58_fu_1666_p1;

assign edge_embedding_weights_V_1_4_address2 = zext_ln712_57_fu_1558_p1;

assign edge_embedding_weights_V_1_5_address0 = zext_ln712_59_fu_1673_p1;

assign edge_embedding_weights_V_1_5_address1 = zext_ln712_58_fu_1666_p1;

assign edge_embedding_weights_V_1_5_address2 = zext_ln712_57_fu_1558_p1;

assign edge_embedding_weights_V_1_6_address0 = zext_ln712_59_fu_1673_p1;

assign edge_embedding_weights_V_1_6_address1 = zext_ln712_58_fu_1666_p1;

assign edge_embedding_weights_V_1_6_address2 = zext_ln712_57_fu_1558_p1;

assign edge_embedding_weights_V_1_7_address0 = zext_ln712_59_fu_1673_p1;

assign edge_embedding_weights_V_1_7_address1 = zext_ln712_58_fu_1666_p1;

assign edge_embedding_weights_V_1_7_address2 = zext_ln712_57_fu_1558_p1;

assign grp_fu_2329_p0 = grp_fu_2329_p00;

assign grp_fu_2329_p00 = add_ln712_879_reg_2472;

assign grp_fu_2329_p1 = 10'd13;

assign grp_fu_2329_p2 = zext_ln712_53_reg_2538_pp0_iter4_reg;

assign grp_fu_2337_p0 = grp_fu_2337_p00;

assign grp_fu_2337_p00 = add_ln712_883_fu_1459_p2;

assign grp_fu_2337_p1 = 10'd13;

assign grp_fu_2337_p2 = zext_ln712_53_reg_2538_pp0_iter4_reg;

assign grp_fu_2345_p0 = grp_fu_2345_p00;

assign grp_fu_2345_p00 = add_ln712_887_fu_1503_p2;

assign grp_fu_2345_p1 = 10'd13;

assign grp_fu_2345_p2 = zext_ln712_53_reg_2538_pp0_iter4_reg;

assign grp_fu_2353_p0 = grp_fu_2353_p00;

assign grp_fu_2353_p00 = neighbor_tables_1_1_q0;

assign grp_fu_2353_p1 = 11'd13;

assign grp_fu_2353_p2 = zext_ln712_52_reg_2706;

assign icmp_ln43_fu_1161_p2 = ((indvar_flatten_fu_208 == bound) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1190_p2 = ((i_fu_200 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1343_p2 = (($signed(zext_ln43_fu_1299_p1) < $signed(sext_ln55_fu_1339_p1)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_1403_p2 = ((select_ln43_10_reg_2445 == e_start_fu_1396_p3) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_1252_p2 = ((or_ln78_fu_1246_p2 < 7'd100) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op158 = (embeddings_per_node_0_0_0_0_012_empty_n & embeddings_per_node_0_0_0_0_01222_empty_n & embeddings_per_node_0_0_0_0_01221_empty_n & embeddings_per_node_0_0_0_0_01220_empty_n & embeddings_per_node_0_0_0_0_01219_empty_n & embeddings_per_node_0_0_0_0_01218_empty_n & embeddings_per_node_0_0_0_0_01217_empty_n & embeddings_per_node_0_0_0_0_01216_empty_n);

assign io_acc_block_signal_op168 = (embeddings_per_node_0_0_0_0_013_empty_n & embeddings_per_node_0_0_0_0_01329_empty_n & embeddings_per_node_0_0_0_0_01328_empty_n & embeddings_per_node_0_0_0_0_01327_empty_n & embeddings_per_node_0_0_0_0_01326_empty_n & embeddings_per_node_0_0_0_0_01325_empty_n & embeddings_per_node_0_0_0_0_01324_empty_n & embeddings_per_node_0_0_0_0_01323_empty_n);

assign message413_address0 = message413_addr_reg_2921_pp0_iter8_reg;

assign message413_address1 = zext_ln712_60_fu_2034_p1;

assign message413_d0 = add_ln712_868_reg_3064;

assign message414_address0 = message414_addr_reg_2927_pp0_iter8_reg;

assign message414_address1 = zext_ln712_60_fu_2034_p1;

assign message414_d0 = add_ln712_872_reg_3069;

assign message415_address0 = message415_addr_reg_2933_pp0_iter8_reg;

assign message415_address1 = zext_ln712_60_fu_2034_p1;

assign message415_d0 = add_ln712_876_reg_3074;

assign message416_address0 = message416_addr_reg_2711_pp0_iter6_reg;

assign message416_address1 = zext_ln712_61_fu_1729_p1;

assign message416_d0 = add_ln712_880_reg_2895;

assign message417_address0 = message417_addr_reg_2717_pp0_iter6_reg;

assign message417_address1 = zext_ln712_61_fu_1729_p1;

assign message417_d0 = add_ln712_884_reg_2900;

assign message418_address0 = message418_addr_reg_2723_pp0_iter6_reg;

assign message418_address1 = zext_ln712_61_fu_1729_p1;

assign message418_d0 = add_ln712_888_reg_2905;

assign message419_address0 = message419_addr_reg_2729_pp0_iter6_reg;

assign message419_address1 = zext_ln712_61_fu_1729_p1;

assign message419_d0 = add_ln712_892_reg_2910;

assign message4_address0 = message4_addr_reg_2915_pp0_iter8_reg;

assign message4_address1 = zext_ln712_60_fu_2034_p1;

assign message4_d0 = add_ln712_864_reg_3059;

assign mp_ins_M_elems_V_0_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_0_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_1_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_1_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_2_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_2_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_3_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_3_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_4_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_4_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_5_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_5_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_6_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_6_address1 = zext_ln50_reg_2526;

assign mp_ins_M_elems_V_7_address0 = zext_ln50_fu_1538_p1;

assign mp_ins_M_elems_V_7_address1 = zext_ln50_reg_2526;

assign mul_ln712_cast_fu_1119_p1 = mul_ln712;

assign nd_idx_4_fu_1349_p2 = (nd_idx_2_load_reg_2432 + 32'd1);

assign nd_idx_fu_1381_p3 = ((icmp_ln55_fu_1343_p2[0:0] == 1'b1) ? nd_idx_2_load_reg_2432 : nd_idx_4_fu_1349_p2);

assign neighbor_tables_1_1_address0 = zext_ln43_3_reg_2453_pp0_iter2_reg;

assign node_degree_fu_1358_p4 = {{degree_tables_1_1_q0[63:32]}};

assign node_nd_4_fu_1354_p1 = degree_tables_1_1_q0[31:0];

assign node_nd_fu_1373_p3 = ((icmp_ln55_fu_1343_p2[0:0] == 1'b1) ? node_nd_2_fu_180 : node_nd_4_fu_1354_p1);

assign or_ln78_fu_1246_p2 = (select_ln43_9_fu_1204_p3 | 7'd4);

assign p_Result_418_fu_2215_p3 = total_embed_V_15_fu_2201_p2[32'd15];

assign p_Result_419_fu_2259_p3 = total_embed_V_16_fu_2245_p2[32'd15];

assign p_Result_420_fu_2303_p3 = total_embed_V_17_fu_2289_p2[32'd15];

assign p_Result_421_fu_1843_p3 = total_embed_V_18_fu_1827_p2[32'd15];

assign p_Result_422_fu_1898_p3 = total_embed_V_19_fu_1882_p2[32'd15];

assign p_Result_423_fu_1953_p3 = total_embed_V_20_fu_1937_p2[32'd15];

assign p_Result_424_fu_2008_p3 = total_embed_V_21_fu_1992_p2[32'd15];

assign p_Result_s_fu_2171_p3 = total_embed_V_fu_2157_p2[32'd15];

assign p_shl1_cast_fu_1524_p3 = {{add_ln712_887_fu_1503_p2}, {2'd0}};

assign p_shl2_cast_fu_1472_p3 = {{trunc_ln712_69_fu_1468_p1}, {4'd0}};

assign p_shl3_cast_fu_1480_p3 = {{add_ln712_883_fu_1459_p2}, {2'd0}};

assign p_shl4_cast_fu_1430_p3 = {{trunc_ln712_reg_2478}, {4'd0}};

assign p_shl5_cast_fu_1437_p3 = {{add_ln712_879_reg_2472}, {2'd0}};

assign p_shl_cast_fu_1516_p3 = {{trunc_ln712_70_fu_1512_p1}, {4'd0}};

assign select_ln24_18_fu_2223_p3 = ((p_Result_418_fu_2215_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_51_fu_2210_p2);

assign select_ln24_19_fu_2267_p3 = ((p_Result_419_fu_2259_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_54_fu_2254_p2);

assign select_ln24_20_fu_2311_p3 = ((p_Result_420_fu_2303_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_57_fu_2298_p2);

assign select_ln24_21_fu_1851_p3 = ((p_Result_421_fu_1843_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_60_fu_1838_p2);

assign select_ln24_22_fu_1906_p3 = ((p_Result_422_fu_1898_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_63_fu_1893_p2);

assign select_ln24_23_fu_1961_p3 = ((p_Result_423_fu_1953_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_66_fu_1948_p2);

assign select_ln24_24_fu_2016_p3 = ((p_Result_424_fu_2008_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_69_fu_2003_p2);

assign select_ln24_fu_2179_p3 = ((p_Result_s_fu_2171_p3[0:0] == 1'b1) ? 15'd0 : add_ln89_48_fu_2166_p2);

assign select_ln43_10_fu_1212_p3 = ((icmp_ln50_fu_1190_p2[0:0] == 1'b1) ? add_ln43_fu_1184_p2 : e_fu_204);

assign select_ln43_12_fu_1228_p3 = ((icmp_ln50_fu_1190_p2[0:0] == 1'b1) ? trunc_ln43_fu_1220_p1 : trunc_ln43_5_fu_1224_p1);

assign select_ln43_9_fu_1204_p3 = ((icmp_ln50_fu_1190_p2[0:0] == 1'b1) ? 7'd0 : dim_fu_196);

assign select_ln43_fu_1196_p3 = ((icmp_ln50_fu_1190_p2[0:0] == 1'b1) ? 4'd0 : i_fu_200);

assign sext_ln55_fu_1339_p0 = ap_sig_allocacmp_e_end_2_load;

assign sext_ln55_fu_1339_p1 = sext_ln55_fu_1339_p0;

assign sub_ln712_7_fu_1444_p2 = (p_shl4_cast_fu_1430_p3 - p_shl5_cast_fu_1437_p3);

assign sub_ln712_8_fu_1488_p2 = (p_shl2_cast_fu_1472_p3 - p_shl3_cast_fu_1480_p3);

assign sub_ln712_9_fu_1532_p2 = (p_shl_cast_fu_1516_p3 - p_shl1_cast_fu_1524_p3);

assign sub_ln712_fu_1714_p2 = (tmp_fu_1696_p3 - zext_ln712_45_fu_1710_p1);

assign tmp_fu_1696_p3 = {{neighbor_tables_1_1_load_reg_2575}, {4'd0}};

assign tmp_s_fu_1703_p3 = {{neighbor_tables_1_1_load_reg_2575}, {2'd0}};

assign total_embed_V_15_fu_2201_p2 = (add_ln712_866_reg_2989 + add_ln712_865_fu_2197_p2);

assign total_embed_V_16_fu_2245_p2 = (add_ln712_870_reg_3019 + add_ln712_869_fu_2241_p2);

assign total_embed_V_17_fu_2289_p2 = (add_ln712_874_reg_3049 + add_ln712_873_fu_2285_p2);

assign total_embed_V_18_fu_1827_p2 = (add_ln712_878_fu_1822_p2 + add_ln712_877_fu_1818_p2);

assign total_embed_V_19_fu_1882_p2 = (add_ln712_882_fu_1877_p2 + add_ln712_881_fu_1873_p2);

assign total_embed_V_20_fu_1937_p2 = (add_ln712_886_fu_1932_p2 + add_ln712_885_fu_1928_p2);

assign total_embed_V_21_fu_1992_p2 = (add_ln712_890_fu_1987_p2 + add_ln712_889_fu_1983_p2);

assign total_embed_V_fu_2157_p2 = (add_ln712_862_reg_2959 + add_ln712_fu_2153_p2);

assign trunc_ln145_fu_1408_p1 = node_nd_fu_1373_p3[0:0];

assign trunc_ln43_5_fu_1224_p1 = e_fu_204[8:0];

assign trunc_ln43_6_fu_1302_p1 = edge_attrs_1_1_q0[6:0];

assign trunc_ln43_fu_1220_p1 = add_ln43_fu_1184_p2[8:0];

assign trunc_ln712_100_fu_1692_p1 = edge_embedding_weights_V_1_7_q2[14:0];

assign trunc_ln712_101_fu_1779_p1 = edge_embedding_weights_V_1_7_q1[14:0];

assign trunc_ln712_102_fu_1783_p1 = edge_embedding_weights_V_1_7_q0[14:0];

assign trunc_ln712_69_fu_1468_p1 = add_ln712_883_fu_1459_p2[5:0];

assign trunc_ln712_70_fu_1512_p1 = add_ln712_887_fu_1503_p2[5:0];

assign trunc_ln712_71_fu_2041_p1 = ap_phi_reg_pp0_iter7_empty_257_reg_1109[14:0];

assign trunc_ln712_72_fu_2045_p1 = edge_embedding_weights_V_1_0_q2[14:0];

assign trunc_ln712_73_fu_2049_p1 = edge_embedding_weights_V_1_0_q1[14:0];

assign trunc_ln712_74_fu_2053_p1 = edge_embedding_weights_V_1_0_q0[14:0];

assign trunc_ln712_75_fu_2069_p1 = ap_phi_reg_pp0_iter7_empty_256_reg_1099[14:0];

assign trunc_ln712_76_fu_2073_p1 = edge_embedding_weights_V_1_1_q2[14:0];

assign trunc_ln712_77_fu_2077_p1 = edge_embedding_weights_V_1_1_q1[14:0];

assign trunc_ln712_78_fu_2081_p1 = edge_embedding_weights_V_1_1_q0[14:0];

assign trunc_ln712_79_fu_2097_p1 = ap_phi_reg_pp0_iter7_empty_255_reg_1089[14:0];

assign trunc_ln712_80_fu_2101_p1 = edge_embedding_weights_V_1_2_q2[14:0];

assign trunc_ln712_81_fu_2105_p1 = edge_embedding_weights_V_1_2_q1[14:0];

assign trunc_ln712_82_fu_2109_p1 = edge_embedding_weights_V_1_2_q0[14:0];

assign trunc_ln712_83_fu_2125_p1 = ap_phi_reg_pp0_iter7_empty_254_reg_1079[14:0];

assign trunc_ln712_84_fu_2129_p1 = edge_embedding_weights_V_1_3_q2[14:0];

assign trunc_ln712_85_fu_2133_p1 = edge_embedding_weights_V_1_3_q1[14:0];

assign trunc_ln712_86_fu_2137_p1 = edge_embedding_weights_V_1_3_q0[14:0];

assign trunc_ln712_87_fu_1814_p1 = ap_phi_reg_pp0_iter6_empty_253_reg_1069[14:0];

assign trunc_ln712_88_fu_1680_p1 = edge_embedding_weights_V_1_4_q2[14:0];

assign trunc_ln712_89_fu_1737_p1 = edge_embedding_weights_V_1_4_q1[14:0];

assign trunc_ln712_90_fu_1741_p1 = edge_embedding_weights_V_1_4_q0[14:0];

assign trunc_ln712_91_fu_1869_p1 = ap_phi_reg_pp0_iter6_empty_252_reg_1059[14:0];

assign trunc_ln712_92_fu_1684_p1 = edge_embedding_weights_V_1_5_q2[14:0];

assign trunc_ln712_93_fu_1751_p1 = edge_embedding_weights_V_1_5_q1[14:0];

assign trunc_ln712_94_fu_1755_p1 = edge_embedding_weights_V_1_5_q0[14:0];

assign trunc_ln712_95_fu_1924_p1 = ap_phi_reg_pp0_iter6_empty_251_reg_1049[14:0];

assign trunc_ln712_96_fu_1688_p1 = edge_embedding_weights_V_1_6_q2[14:0];

assign trunc_ln712_97_fu_1765_p1 = edge_embedding_weights_V_1_6_q1[14:0];

assign trunc_ln712_98_fu_1769_p1 = edge_embedding_weights_V_1_6_q0[14:0];

assign trunc_ln712_99_fu_1979_p1 = ap_phi_reg_pp0_iter6_empty_reg_1039[14:0];

assign trunc_ln712_fu_1315_p1 = add_ln712_879_fu_1310_p2[5:0];

assign zext_ln43_3_fu_1236_p1 = select_ln43_12_fu_1228_p3;

assign zext_ln43_fu_1299_p1 = select_ln43_10_reg_2445;

assign zext_ln50_fu_1538_p1 = select_ln43_reg_2438_pp0_iter2_reg;

assign zext_ln57_fu_1241_p1 = ap_sig_allocacmp_nd_idx_2_load;

assign zext_ln712_15_fu_2231_p1 = select_ln24_18_fu_2223_p3;

assign zext_ln712_16_fu_2275_p1 = select_ln24_19_fu_2267_p3;

assign zext_ln712_17_fu_2319_p1 = select_ln24_20_fu_2311_p3;

assign zext_ln712_18_fu_1859_p1 = select_ln24_21_fu_1851_p3;

assign zext_ln712_19_fu_1914_p1 = select_ln24_22_fu_1906_p3;

assign zext_ln712_20_fu_1969_p1 = select_ln24_23_fu_1961_p3;

assign zext_ln712_21_fu_2024_p1 = select_ln24_24_fu_2016_p3;

assign zext_ln712_45_fu_1710_p1 = tmp_s_fu_1703_p3;

assign zext_ln712_46_fu_1306_p1 = trunc_ln43_6_fu_1302_p1;

assign zext_ln712_48_fu_1455_p1 = add_ln43_7_fu_1450_p2;

assign zext_ln712_50_fu_1499_p1 = add_ln43_8_fu_1494_p2;

assign zext_ln712_52_fu_1720_p1 = select_ln43_reg_2438_pp0_iter4_reg;

assign zext_ln712_53_fu_1549_p1 = select_ln43_reg_2438_pp0_iter2_reg;

assign zext_ln712_54_fu_1793_p1 = grp_fu_2329_p3;

assign zext_ln712_55_fu_1800_p1 = grp_fu_2337_p3;

assign zext_ln712_56_fu_1807_p1 = grp_fu_2345_p3;

assign zext_ln712_57_fu_1558_p1 = add_ln712_895_fu_1552_p2;

assign zext_ln712_58_fu_1666_p1 = add_ln712_896_reg_2550;

assign zext_ln712_59_fu_1673_p1 = add_ln712_897_reg_2555;

assign zext_ln712_60_fu_2034_p1 = grp_fu_2353_p3;

assign zext_ln712_61_fu_1729_p1 = add_ln712_899_fu_1723_p2;

assign zext_ln712_fu_2187_p1 = select_ln24_fu_2179_p3;

always @ (posedge ap_clk) begin
    mul_ln712_cast_reg_2421[7] <= 1'b0;
    zext_ln43_3_reg_2453[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln43_3_reg_2453_pp0_iter2_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln50_reg_2526[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln712_53_reg_2538[9:4] <= 6'b000000;
    zext_ln712_53_reg_2538_pp0_iter4_reg[9:4] <= 6'b000000;
    zext_ln712_52_reg_2706[10:4] <= 7'b0000000;
end

endmodule //GIN_compute_graphs_message_passing_pe19_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2
