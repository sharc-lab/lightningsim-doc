// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_graphs_load_graph_Pipeline_VITIS_LOOP_171_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        num_of_edges,
        edge_attr_in,
        trunc_ln185_4,
        neighbor_table_offsets_address0,
        neighbor_table_offsets_ce0,
        neighbor_table_offsets_we0,
        neighbor_table_offsets_d0,
        neighbor_table_offsets_q0,
        neighbor_tables_offsets_0_address0,
        neighbor_tables_offsets_0_ce0,
        neighbor_tables_offsets_0_we0,
        neighbor_tables_offsets_0_d0,
        neighbor_tables_offsets_0_q0,
        neighbor_tables_offsets_1_address0,
        neighbor_tables_offsets_1_ce0,
        neighbor_tables_offsets_1_we0,
        neighbor_tables_offsets_1_d0,
        neighbor_tables_offsets_1_q0,
        neighbor_tables_offsets_2_address0,
        neighbor_tables_offsets_2_ce0,
        neighbor_tables_offsets_2_we0,
        neighbor_tables_offsets_2_d0,
        neighbor_tables_offsets_2_q0,
        neighbor_tables_offsets_3_address0,
        neighbor_tables_offsets_3_ce0,
        neighbor_tables_offsets_3_we0,
        neighbor_tables_offsets_3_d0,
        neighbor_tables_offsets_3_q0,
        edge_list_in,
        trunc_ln127_2,
        edge_attrs_1_0_address0,
        edge_attrs_1_0_ce0,
        edge_attrs_1_0_we0,
        edge_attrs_1_0_d0,
        neighbor_tables_1_0_address0,
        neighbor_tables_1_0_ce0,
        neighbor_tables_1_0_we0,
        neighbor_tables_1_0_d0,
        neighbor_tables_1_1_address0,
        neighbor_tables_1_1_ce0,
        neighbor_tables_1_1_we0,
        neighbor_tables_1_1_d0,
        neighbor_tables_1_2_address0,
        neighbor_tables_1_2_ce0,
        neighbor_tables_1_2_we0,
        neighbor_tables_1_2_d0,
        neighbor_tables_1_3_address0,
        neighbor_tables_1_3_ce0,
        neighbor_tables_1_3_we0,
        neighbor_tables_1_3_d0,
        edge_attrs_1_1_address0,
        edge_attrs_1_1_ce0,
        edge_attrs_1_1_we0,
        edge_attrs_1_1_d0,
        edge_attrs_1_2_address0,
        edge_attrs_1_2_ce0,
        edge_attrs_1_2_we0,
        edge_attrs_1_2_d0,
        edge_attrs_1_3_address0,
        edge_attrs_1_3_ce0,
        edge_attrs_1_3_we0,
        edge_attrs_1_3_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [1023:0] m_axi_mem_WDATA;
output  [127:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [1023:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [31:0] num_of_edges;
input  [63:0] edge_attr_in;
input  [6:0] trunc_ln185_4;
output  [8:0] neighbor_table_offsets_address0;
output   neighbor_table_offsets_ce0;
output   neighbor_table_offsets_we0;
output  [31:0] neighbor_table_offsets_d0;
input  [31:0] neighbor_table_offsets_q0;
output  [8:0] neighbor_tables_offsets_0_address0;
output   neighbor_tables_offsets_0_ce0;
output   neighbor_tables_offsets_0_we0;
output  [31:0] neighbor_tables_offsets_0_d0;
input  [31:0] neighbor_tables_offsets_0_q0;
output  [8:0] neighbor_tables_offsets_1_address0;
output   neighbor_tables_offsets_1_ce0;
output   neighbor_tables_offsets_1_we0;
output  [31:0] neighbor_tables_offsets_1_d0;
input  [31:0] neighbor_tables_offsets_1_q0;
output  [8:0] neighbor_tables_offsets_2_address0;
output   neighbor_tables_offsets_2_ce0;
output   neighbor_tables_offsets_2_we0;
output  [31:0] neighbor_tables_offsets_2_d0;
input  [31:0] neighbor_tables_offsets_2_q0;
output  [8:0] neighbor_tables_offsets_3_address0;
output   neighbor_tables_offsets_3_ce0;
output   neighbor_tables_offsets_3_we0;
output  [31:0] neighbor_tables_offsets_3_d0;
input  [31:0] neighbor_tables_offsets_3_q0;
input  [63:0] edge_list_in;
input  [6:0] trunc_ln127_2;
output  [8:0] edge_attrs_1_0_address0;
output   edge_attrs_1_0_ce0;
output   edge_attrs_1_0_we0;
output  [70:0] edge_attrs_1_0_d0;
output  [8:0] neighbor_tables_1_0_address0;
output   neighbor_tables_1_0_ce0;
output   neighbor_tables_1_0_we0;
output  [6:0] neighbor_tables_1_0_d0;
output  [8:0] neighbor_tables_1_1_address0;
output   neighbor_tables_1_1_ce0;
output   neighbor_tables_1_1_we0;
output  [6:0] neighbor_tables_1_1_d0;
output  [8:0] neighbor_tables_1_2_address0;
output   neighbor_tables_1_2_ce0;
output   neighbor_tables_1_2_we0;
output  [6:0] neighbor_tables_1_2_d0;
output  [8:0] neighbor_tables_1_3_address0;
output   neighbor_tables_1_3_ce0;
output   neighbor_tables_1_3_we0;
output  [6:0] neighbor_tables_1_3_d0;
output  [8:0] edge_attrs_1_1_address0;
output   edge_attrs_1_1_ce0;
output   edge_attrs_1_1_we0;
output  [70:0] edge_attrs_1_1_d0;
output  [8:0] edge_attrs_1_2_address0;
output   edge_attrs_1_2_ce0;
output   edge_attrs_1_2_we0;
output  [70:0] edge_attrs_1_2_d0;
output  [8:0] edge_attrs_1_3_address0;
output   edge_attrs_1_3_ce0;
output   edge_attrs_1_3_we0;
output  [70:0] edge_attrs_1_3_d0;

reg ap_idle;
reg m_axi_mem_ARVALID;
reg[63:0] m_axi_mem_ARADDR;
reg[31:0] m_axi_mem_ARLEN;
reg m_axi_mem_RREADY;
reg[8:0] neighbor_table_offsets_address0;
reg neighbor_table_offsets_ce0;
reg neighbor_table_offsets_we0;
reg[8:0] neighbor_tables_offsets_0_address0;
reg neighbor_tables_offsets_0_ce0;
reg neighbor_tables_offsets_0_we0;
reg[8:0] neighbor_tables_offsets_1_address0;
reg neighbor_tables_offsets_1_ce0;
reg neighbor_tables_offsets_1_we0;
reg[8:0] neighbor_tables_offsets_2_address0;
reg neighbor_tables_offsets_2_ce0;
reg neighbor_tables_offsets_2_we0;
reg[8:0] neighbor_tables_offsets_3_address0;
reg neighbor_tables_offsets_3_ce0;
reg neighbor_tables_offsets_3_we0;
reg edge_attrs_1_0_ce0;
reg edge_attrs_1_0_we0;
reg neighbor_tables_1_0_ce0;
reg neighbor_tables_1_0_we0;
reg neighbor_tables_1_1_ce0;
reg neighbor_tables_1_1_we0;
reg neighbor_tables_1_2_ce0;
reg neighbor_tables_1_2_we0;
reg neighbor_tables_1_3_ce0;
reg neighbor_tables_1_3_we0;
reg edge_attrs_1_1_ce0;
reg edge_attrs_1_1_we0;
reg edge_attrs_1_2_ce0;
reg edge_attrs_1_2_we0;
reg edge_attrs_1_3_ce0;
reg edge_attrs_1_3_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
reg   [0:0] icmp_ln171_reg_815;
reg    ap_block_state4_io;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_state36_pp0_stage3_iter8;
wire    ap_block_state40_pp0_stage3_iter9;
wire    ap_block_state44_pp0_stage3_iter10;
wire    ap_block_state48_pp0_stage3_iter11;
wire    ap_block_state52_pp0_stage3_iter12;
wire    ap_block_state56_pp0_stage3_iter13;
wire    ap_block_state60_pp0_stage3_iter14;
wire    ap_block_state64_pp0_stage3_iter15;
wire    ap_block_state68_pp0_stage3_iter16;
reg   [0:0] icmp_ln171_reg_815_pp0_iter17_reg;
reg    ap_block_state72_pp0_stage3_iter17;
wire    ap_block_state76_pp0_stage3_iter18;
reg    ap_block_pp0_stage3_subdone;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem_blk_n_AR;
wire    ap_block_pp0_stage3;
reg    mem_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln171_reg_815_pp0_iter18_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln185_reg_855;
reg   [0:0] icmp_ln185_reg_855_pp0_iter17_reg;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln176_reg_824;
reg   [0:0] icmp_ln176_reg_824_pp0_iter17_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_state37_pp0_stage0_iter9;
wire    ap_block_state41_pp0_stage0_iter10;
wire    ap_block_state45_pp0_stage0_iter11;
wire    ap_block_state49_pp0_stage0_iter12;
wire    ap_block_state53_pp0_stage0_iter13;
wire    ap_block_state57_pp0_stage0_iter14;
wire    ap_block_state61_pp0_stage0_iter15;
wire    ap_block_state65_pp0_stage0_iter16;
wire    ap_block_state69_pp0_stage0_iter17;
reg    ap_predicate_op269_read_state73;
reg    ap_block_state73_pp0_stage0_iter18;
wire    ap_block_state77_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] i_reg_809;
wire   [0:0] icmp_ln171_fu_417_p2;
reg   [0:0] icmp_ln171_reg_815_pp0_iter1_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter2_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter3_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter4_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter5_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter6_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter7_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter8_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter9_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter10_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter11_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter12_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter13_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter14_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter15_reg;
reg   [0:0] icmp_ln171_reg_815_pp0_iter16_reg;
wire   [6:0] add_ln176_1_fu_459_p2;
reg   [6:0] add_ln176_1_reg_819;
reg   [6:0] add_ln176_1_reg_819_pp0_iter1_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter2_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter3_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter4_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter5_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter6_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter7_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter8_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter9_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter10_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter11_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter12_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter13_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter14_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter15_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter16_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter17_reg;
reg   [6:0] add_ln176_1_reg_819_pp0_iter18_reg;
wire   [0:0] icmp_ln176_fu_465_p2;
reg   [0:0] icmp_ln176_reg_824_pp0_iter1_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter2_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter3_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter4_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter5_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter6_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter7_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter8_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter9_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter10_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter11_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter12_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter13_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter14_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter15_reg;
reg   [0:0] icmp_ln176_reg_824_pp0_iter16_reg;
reg   [56:0] trunc_ln_reg_828;
wire   [31:0] select_ln176_fu_481_p3;
reg   [31:0] select_ln176_reg_833;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
wire    ap_block_state34_pp0_stage1_iter8;
wire    ap_block_state38_pp0_stage1_iter9;
wire    ap_block_state42_pp0_stage1_iter10;
wire    ap_block_state46_pp0_stage1_iter11;
wire    ap_block_state50_pp0_stage1_iter12;
wire    ap_block_state54_pp0_stage1_iter13;
wire    ap_block_state58_pp0_stage1_iter14;
wire    ap_block_state62_pp0_stage1_iter15;
wire    ap_block_state66_pp0_stage1_iter16;
wire    ap_block_state70_pp0_stage1_iter17;
reg    ap_block_state74_pp0_stage1_iter18;
reg    ap_block_pp0_stage1_11001;
wire  signed [36:0] sub_ln185_fu_526_p2;
reg  signed [36:0] sub_ln185_reg_844;
wire   [6:0] add_ln185_1_fu_536_p2;
reg   [6:0] add_ln185_1_reg_849;
reg   [6:0] add_ln185_1_reg_849_pp0_iter1_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter2_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter3_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter4_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter5_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter6_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter7_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter8_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter9_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter10_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter11_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter12_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter13_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter14_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter15_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter16_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter17_reg;
reg   [6:0] add_ln185_1_reg_849_pp0_iter18_reg;
wire   [0:0] icmp_ln185_fu_549_p2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_state35_pp0_stage2_iter8;
wire    ap_block_state39_pp0_stage2_iter9;
wire    ap_block_state43_pp0_stage2_iter10;
wire    ap_block_state47_pp0_stage2_iter11;
wire    ap_block_state51_pp0_stage2_iter12;
wire    ap_block_state55_pp0_stage2_iter13;
wire    ap_block_state59_pp0_stage2_iter14;
wire    ap_block_state63_pp0_stage2_iter15;
wire    ap_block_state67_pp0_stage2_iter16;
wire    ap_block_state71_pp0_stage2_iter17;
reg    ap_predicate_op302_read_state75;
reg    ap_block_state75_pp0_stage2_iter18;
reg    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln185_reg_855_pp0_iter1_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter3_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter4_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter5_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter6_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter7_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter8_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter9_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter10_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter11_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter12_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter13_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter14_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter15_reg;
reg   [0:0] icmp_ln185_reg_855_pp0_iter16_reg;
reg   [56:0] trunc_ln2_reg_859;
wire   [31:0] select_ln185_fu_564_p3;
reg   [31:0] select_ln185_reg_864;
reg    ap_block_pp0_stage3_11001;
reg   [1023:0] mem_addr_read_reg_875;
wire   [8:0] edge_u_fu_606_p1;
reg   [8:0] edge_u_reg_885;
reg   [1:0] trunc_ln1_reg_890;
reg   [0:0] tmp_reg_895;
reg   [6:0] trunc_ln183_2_reg_900;
reg   [6:0] trunc_ln183_1_reg_905;
reg   [1023:0] mem_addr_10_read_reg_910;
reg   [8:0] neighbor_table_offsets_addr_reg_915;
wire   [0:0] addr_cmp_fu_675_p2;
reg   [0:0] addr_cmp_reg_920;
reg   [8:0] neighbor_tables_offsets_0_addr_reg_925;
reg   [8:0] neighbor_tables_offsets_1_addr_reg_930;
reg   [8:0] neighbor_tables_offsets_2_addr_reg_935;
reg   [8:0] neighbor_tables_offsets_3_addr_reg_940;
wire   [6:0] select_ln183_fu_691_p3;
reg   [6:0] select_ln183_reg_945;
wire   [31:0] e_pe_fu_707_p6;
reg   [31:0] e_pe_reg_958;
wire   [31:0] add_ln182_fu_720_p2;
reg   [31:0] add_ln182_reg_964;
wire   [70:0] trunc_ln185_1_fu_750_p1;
reg   [70:0] trunc_ln185_1_reg_970;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [1023:0] ap_phi_reg_pp0_iter0_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter1_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter2_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter3_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter4_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter5_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter6_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter7_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter8_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter9_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter10_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter11_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter12_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter13_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter14_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter15_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter16_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter17_empty_357_reg_377;
reg   [1023:0] ap_phi_reg_pp0_iter18_empty_357_reg_377;
wire   [1023:0] ap_phi_reg_pp0_iter0_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter1_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter2_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter3_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter4_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter5_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter6_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter7_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter8_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter9_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter10_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter11_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter12_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter13_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter14_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter15_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter16_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter17_empty_reg_388;
reg   [1023:0] ap_phi_reg_pp0_iter18_empty_reg_388;
wire   [63:0] zext_ln180_fu_664_p1;
wire   [63:0] zext_ln183_fu_758_p1;
wire  signed [63:0] sext_ln176_fu_494_p1;
wire  signed [63:0] sext_ln185_fu_572_p1;
reg   [63:0] reuse_addr_reg_fu_144;
wire    ap_loop_init;
reg   [31:0] reuse_reg_fu_148;
reg   [31:0] i_4_fu_152;
reg   [31:0] ap_sig_allocacmp_i;
wire   [31:0] add_ln171_fu_423_p2;
wire   [31:0] add_ln184_fu_769_p2;
wire   [34:0] shl_ln6_fu_429_p3;
wire   [3:0] trunc_ln176_fu_441_p1;
wire   [63:0] zext_ln176_fu_437_p1;
wire   [6:0] trunc_ln176_2_fu_445_p3;
wire   [63:0] add_ln176_fu_453_p2;
wire   [35:0] shl_ln185_1_fu_504_p3;
wire   [33:0] shl_ln185_2_fu_515_p3;
wire   [36:0] zext_ln185_fu_511_p1;
wire   [36:0] zext_ln185_1_fu_522_p1;
wire   [6:0] trunc_ln185_fu_532_p1;
wire  signed [63:0] sext_ln185_1_fu_541_p1;
wire   [63:0] add_ln185_fu_544_p2;
wire   [9:0] shl_ln176_1_fu_589_p3;
wire   [2047:0] tmp_18_fu_582_p3;
wire   [2047:0] zext_ln176_1_fu_596_p1;
wire   [2047:0] lshr_ln176_fu_600_p2;
wire   [8:0] edge_v_fu_610_p4;
wire   [8:0] sub_ln183_fu_638_p2;
wire   [6:0] sub_ln183_1_fu_686_p2;
wire   [31:0] e_fu_700_p3;
wire   [9:0] shl_ln8_fu_733_p3;
wire   [2047:0] tmp_21_fu_726_p3;
wire   [2047:0] zext_ln185_2_fu_740_p1;
wire   [2047:0] lshr_ln185_fu_744_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter18_stage0;
reg    ap_idle_pp0_0to17;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to19;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

GIN_compute_graphs_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2348(
    .din0(neighbor_tables_offsets_0_q0),
    .din1(neighbor_tables_offsets_1_q0),
    .din2(neighbor_tables_offsets_2_q0),
    .din3(neighbor_tables_offsets_3_q0),
    .din4(trunc_ln1_reg_890),
    .dout(e_pe_fu_707_p6)
);

GIN_compute_graphs_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter19 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln176_reg_824_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter18_empty_357_reg_377 <= m_axi_mem_RDATA;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter18_empty_357_reg_377 <= ap_phi_reg_pp0_iter17_empty_357_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln185_reg_855_pp0_iter17_reg == 1'd1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter18_empty_reg_388 <= m_axi_mem_RDATA;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter18_empty_reg_388 <= ap_phi_reg_pp0_iter17_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln171_fu_417_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_4_fu_152 <= add_ln171_fu_423_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_4_fu_152 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_addr_reg_fu_144 <= 64'd18446744073709551615;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reuse_addr_reg_fu_144 <= zext_ln180_fu_664_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg_fu_148 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter19 == 1'b1)) begin
            reuse_reg_fu_148 <= add_ln182_reg_964;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln171_fu_417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln176_1_reg_819 <= add_ln176_1_fu_459_p2;
        icmp_ln176_reg_824 <= icmp_ln176_fu_465_p2;
        select_ln176_reg_833[1 : 0] <= select_ln176_fu_481_p3[1 : 0];
        trunc_ln_reg_828 <= {{add_ln176_fu_453_p2[63:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln176_1_reg_819_pp0_iter10_reg <= add_ln176_1_reg_819_pp0_iter9_reg;
        add_ln176_1_reg_819_pp0_iter11_reg <= add_ln176_1_reg_819_pp0_iter10_reg;
        add_ln176_1_reg_819_pp0_iter12_reg <= add_ln176_1_reg_819_pp0_iter11_reg;
        add_ln176_1_reg_819_pp0_iter13_reg <= add_ln176_1_reg_819_pp0_iter12_reg;
        add_ln176_1_reg_819_pp0_iter14_reg <= add_ln176_1_reg_819_pp0_iter13_reg;
        add_ln176_1_reg_819_pp0_iter15_reg <= add_ln176_1_reg_819_pp0_iter14_reg;
        add_ln176_1_reg_819_pp0_iter16_reg <= add_ln176_1_reg_819_pp0_iter15_reg;
        add_ln176_1_reg_819_pp0_iter17_reg <= add_ln176_1_reg_819_pp0_iter16_reg;
        add_ln176_1_reg_819_pp0_iter18_reg <= add_ln176_1_reg_819_pp0_iter17_reg;
        add_ln176_1_reg_819_pp0_iter1_reg <= add_ln176_1_reg_819;
        add_ln176_1_reg_819_pp0_iter2_reg <= add_ln176_1_reg_819_pp0_iter1_reg;
        add_ln176_1_reg_819_pp0_iter3_reg <= add_ln176_1_reg_819_pp0_iter2_reg;
        add_ln176_1_reg_819_pp0_iter4_reg <= add_ln176_1_reg_819_pp0_iter3_reg;
        add_ln176_1_reg_819_pp0_iter5_reg <= add_ln176_1_reg_819_pp0_iter4_reg;
        add_ln176_1_reg_819_pp0_iter6_reg <= add_ln176_1_reg_819_pp0_iter5_reg;
        add_ln176_1_reg_819_pp0_iter7_reg <= add_ln176_1_reg_819_pp0_iter6_reg;
        add_ln176_1_reg_819_pp0_iter8_reg <= add_ln176_1_reg_819_pp0_iter7_reg;
        add_ln176_1_reg_819_pp0_iter9_reg <= add_ln176_1_reg_819_pp0_iter8_reg;
        i_reg_809 <= ap_sig_allocacmp_i;
        icmp_ln171_reg_815 <= icmp_ln171_fu_417_p2;
        icmp_ln171_reg_815_pp0_iter10_reg <= icmp_ln171_reg_815_pp0_iter9_reg;
        icmp_ln171_reg_815_pp0_iter11_reg <= icmp_ln171_reg_815_pp0_iter10_reg;
        icmp_ln171_reg_815_pp0_iter12_reg <= icmp_ln171_reg_815_pp0_iter11_reg;
        icmp_ln171_reg_815_pp0_iter13_reg <= icmp_ln171_reg_815_pp0_iter12_reg;
        icmp_ln171_reg_815_pp0_iter14_reg <= icmp_ln171_reg_815_pp0_iter13_reg;
        icmp_ln171_reg_815_pp0_iter15_reg <= icmp_ln171_reg_815_pp0_iter14_reg;
        icmp_ln171_reg_815_pp0_iter16_reg <= icmp_ln171_reg_815_pp0_iter15_reg;
        icmp_ln171_reg_815_pp0_iter17_reg <= icmp_ln171_reg_815_pp0_iter16_reg;
        icmp_ln171_reg_815_pp0_iter18_reg <= icmp_ln171_reg_815_pp0_iter17_reg;
        icmp_ln171_reg_815_pp0_iter1_reg <= icmp_ln171_reg_815;
        icmp_ln171_reg_815_pp0_iter2_reg <= icmp_ln171_reg_815_pp0_iter1_reg;
        icmp_ln171_reg_815_pp0_iter3_reg <= icmp_ln171_reg_815_pp0_iter2_reg;
        icmp_ln171_reg_815_pp0_iter4_reg <= icmp_ln171_reg_815_pp0_iter3_reg;
        icmp_ln171_reg_815_pp0_iter5_reg <= icmp_ln171_reg_815_pp0_iter4_reg;
        icmp_ln171_reg_815_pp0_iter6_reg <= icmp_ln171_reg_815_pp0_iter5_reg;
        icmp_ln171_reg_815_pp0_iter7_reg <= icmp_ln171_reg_815_pp0_iter6_reg;
        icmp_ln171_reg_815_pp0_iter8_reg <= icmp_ln171_reg_815_pp0_iter7_reg;
        icmp_ln171_reg_815_pp0_iter9_reg <= icmp_ln171_reg_815_pp0_iter8_reg;
        icmp_ln176_reg_824_pp0_iter10_reg <= icmp_ln176_reg_824_pp0_iter9_reg;
        icmp_ln176_reg_824_pp0_iter11_reg <= icmp_ln176_reg_824_pp0_iter10_reg;
        icmp_ln176_reg_824_pp0_iter12_reg <= icmp_ln176_reg_824_pp0_iter11_reg;
        icmp_ln176_reg_824_pp0_iter13_reg <= icmp_ln176_reg_824_pp0_iter12_reg;
        icmp_ln176_reg_824_pp0_iter14_reg <= icmp_ln176_reg_824_pp0_iter13_reg;
        icmp_ln176_reg_824_pp0_iter15_reg <= icmp_ln176_reg_824_pp0_iter14_reg;
        icmp_ln176_reg_824_pp0_iter16_reg <= icmp_ln176_reg_824_pp0_iter15_reg;
        icmp_ln176_reg_824_pp0_iter17_reg <= icmp_ln176_reg_824_pp0_iter16_reg;
        icmp_ln176_reg_824_pp0_iter1_reg <= icmp_ln176_reg_824;
        icmp_ln176_reg_824_pp0_iter2_reg <= icmp_ln176_reg_824_pp0_iter1_reg;
        icmp_ln176_reg_824_pp0_iter3_reg <= icmp_ln176_reg_824_pp0_iter2_reg;
        icmp_ln176_reg_824_pp0_iter4_reg <= icmp_ln176_reg_824_pp0_iter3_reg;
        icmp_ln176_reg_824_pp0_iter5_reg <= icmp_ln176_reg_824_pp0_iter4_reg;
        icmp_ln176_reg_824_pp0_iter6_reg <= icmp_ln176_reg_824_pp0_iter5_reg;
        icmp_ln176_reg_824_pp0_iter7_reg <= icmp_ln176_reg_824_pp0_iter6_reg;
        icmp_ln176_reg_824_pp0_iter8_reg <= icmp_ln176_reg_824_pp0_iter7_reg;
        icmp_ln176_reg_824_pp0_iter9_reg <= icmp_ln176_reg_824_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln182_reg_964 <= add_ln182_fu_720_p2;
        e_pe_reg_958 <= e_pe_fu_707_p6;
        trunc_ln185_1_reg_970 <= trunc_ln185_1_fu_750_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln171_reg_815 == 1'd0))) begin
        add_ln185_1_reg_849 <= add_ln185_1_fu_536_p2;
        sub_ln185_reg_844[36 : 2] <= sub_ln185_fu_526_p2[36 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln185_1_reg_849_pp0_iter10_reg <= add_ln185_1_reg_849_pp0_iter9_reg;
        add_ln185_1_reg_849_pp0_iter11_reg <= add_ln185_1_reg_849_pp0_iter10_reg;
        add_ln185_1_reg_849_pp0_iter12_reg <= add_ln185_1_reg_849_pp0_iter11_reg;
        add_ln185_1_reg_849_pp0_iter13_reg <= add_ln185_1_reg_849_pp0_iter12_reg;
        add_ln185_1_reg_849_pp0_iter14_reg <= add_ln185_1_reg_849_pp0_iter13_reg;
        add_ln185_1_reg_849_pp0_iter15_reg <= add_ln185_1_reg_849_pp0_iter14_reg;
        add_ln185_1_reg_849_pp0_iter16_reg <= add_ln185_1_reg_849_pp0_iter15_reg;
        add_ln185_1_reg_849_pp0_iter17_reg <= add_ln185_1_reg_849_pp0_iter16_reg;
        add_ln185_1_reg_849_pp0_iter18_reg <= add_ln185_1_reg_849_pp0_iter17_reg;
        add_ln185_1_reg_849_pp0_iter1_reg <= add_ln185_1_reg_849;
        add_ln185_1_reg_849_pp0_iter2_reg <= add_ln185_1_reg_849_pp0_iter1_reg;
        add_ln185_1_reg_849_pp0_iter3_reg <= add_ln185_1_reg_849_pp0_iter2_reg;
        add_ln185_1_reg_849_pp0_iter4_reg <= add_ln185_1_reg_849_pp0_iter3_reg;
        add_ln185_1_reg_849_pp0_iter5_reg <= add_ln185_1_reg_849_pp0_iter4_reg;
        add_ln185_1_reg_849_pp0_iter6_reg <= add_ln185_1_reg_849_pp0_iter5_reg;
        add_ln185_1_reg_849_pp0_iter7_reg <= add_ln185_1_reg_849_pp0_iter6_reg;
        add_ln185_1_reg_849_pp0_iter8_reg <= add_ln185_1_reg_849_pp0_iter7_reg;
        add_ln185_1_reg_849_pp0_iter9_reg <= add_ln185_1_reg_849_pp0_iter8_reg;
        edge_u_reg_885 <= edge_u_fu_606_p1;
        tmp_reg_895 <= lshr_ln176_fu_600_p2[32'd63];
        trunc_ln183_1_reg_905 <= {{lshr_ln176_fu_600_p2[40:34]}};
        trunc_ln183_2_reg_900 <= {{sub_ln183_fu_638_p2[8:2]}};
        trunc_ln1_reg_890 <= {{lshr_ln176_fu_600_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        addr_cmp_reg_920 <= addr_cmp_fu_675_p2;
        icmp_ln185_reg_855_pp0_iter10_reg <= icmp_ln185_reg_855_pp0_iter9_reg;
        icmp_ln185_reg_855_pp0_iter11_reg <= icmp_ln185_reg_855_pp0_iter10_reg;
        icmp_ln185_reg_855_pp0_iter12_reg <= icmp_ln185_reg_855_pp0_iter11_reg;
        icmp_ln185_reg_855_pp0_iter13_reg <= icmp_ln185_reg_855_pp0_iter12_reg;
        icmp_ln185_reg_855_pp0_iter14_reg <= icmp_ln185_reg_855_pp0_iter13_reg;
        icmp_ln185_reg_855_pp0_iter15_reg <= icmp_ln185_reg_855_pp0_iter14_reg;
        icmp_ln185_reg_855_pp0_iter16_reg <= icmp_ln185_reg_855_pp0_iter15_reg;
        icmp_ln185_reg_855_pp0_iter17_reg <= icmp_ln185_reg_855_pp0_iter16_reg;
        icmp_ln185_reg_855_pp0_iter1_reg <= icmp_ln185_reg_855;
        icmp_ln185_reg_855_pp0_iter2_reg <= icmp_ln185_reg_855_pp0_iter1_reg;
        icmp_ln185_reg_855_pp0_iter3_reg <= icmp_ln185_reg_855_pp0_iter2_reg;
        icmp_ln185_reg_855_pp0_iter4_reg <= icmp_ln185_reg_855_pp0_iter3_reg;
        icmp_ln185_reg_855_pp0_iter5_reg <= icmp_ln185_reg_855_pp0_iter4_reg;
        icmp_ln185_reg_855_pp0_iter6_reg <= icmp_ln185_reg_855_pp0_iter5_reg;
        icmp_ln185_reg_855_pp0_iter7_reg <= icmp_ln185_reg_855_pp0_iter6_reg;
        icmp_ln185_reg_855_pp0_iter8_reg <= icmp_ln185_reg_855_pp0_iter7_reg;
        icmp_ln185_reg_855_pp0_iter9_reg <= icmp_ln185_reg_855_pp0_iter8_reg;
        neighbor_table_offsets_addr_reg_915 <= zext_ln180_fu_664_p1;
        neighbor_tables_offsets_0_addr_reg_925 <= zext_ln180_fu_664_p1;
        neighbor_tables_offsets_1_addr_reg_930 <= zext_ln180_fu_664_p1;
        neighbor_tables_offsets_2_addr_reg_935 <= zext_ln180_fu_664_p1;
        neighbor_tables_offsets_3_addr_reg_940 <= zext_ln180_fu_664_p1;
        select_ln183_reg_945 <= select_ln183_fu_691_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter10_empty_357_reg_377 <= ap_phi_reg_pp0_iter9_empty_357_reg_377;
        ap_phi_reg_pp0_iter10_empty_reg_388 <= ap_phi_reg_pp0_iter9_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter11_empty_357_reg_377 <= ap_phi_reg_pp0_iter10_empty_357_reg_377;
        ap_phi_reg_pp0_iter11_empty_reg_388 <= ap_phi_reg_pp0_iter10_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter12_empty_357_reg_377 <= ap_phi_reg_pp0_iter11_empty_357_reg_377;
        ap_phi_reg_pp0_iter12_empty_reg_388 <= ap_phi_reg_pp0_iter11_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter13_empty_357_reg_377 <= ap_phi_reg_pp0_iter12_empty_357_reg_377;
        ap_phi_reg_pp0_iter13_empty_reg_388 <= ap_phi_reg_pp0_iter12_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter14_empty_357_reg_377 <= ap_phi_reg_pp0_iter13_empty_357_reg_377;
        ap_phi_reg_pp0_iter14_empty_reg_388 <= ap_phi_reg_pp0_iter13_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter15_empty_357_reg_377 <= ap_phi_reg_pp0_iter14_empty_357_reg_377;
        ap_phi_reg_pp0_iter15_empty_reg_388 <= ap_phi_reg_pp0_iter14_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter16_empty_357_reg_377 <= ap_phi_reg_pp0_iter15_empty_357_reg_377;
        ap_phi_reg_pp0_iter16_empty_reg_388 <= ap_phi_reg_pp0_iter15_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter17_empty_357_reg_377 <= ap_phi_reg_pp0_iter16_empty_357_reg_377;
        ap_phi_reg_pp0_iter17_empty_reg_388 <= ap_phi_reg_pp0_iter16_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter1_empty_357_reg_377 <= ap_phi_reg_pp0_iter0_empty_357_reg_377;
        ap_phi_reg_pp0_iter1_empty_reg_388 <= ap_phi_reg_pp0_iter0_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter2_empty_357_reg_377 <= ap_phi_reg_pp0_iter1_empty_357_reg_377;
        ap_phi_reg_pp0_iter2_empty_reg_388 <= ap_phi_reg_pp0_iter1_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter3_empty_357_reg_377 <= ap_phi_reg_pp0_iter2_empty_357_reg_377;
        ap_phi_reg_pp0_iter3_empty_reg_388 <= ap_phi_reg_pp0_iter2_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter4_empty_357_reg_377 <= ap_phi_reg_pp0_iter3_empty_357_reg_377;
        ap_phi_reg_pp0_iter4_empty_reg_388 <= ap_phi_reg_pp0_iter3_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter5_empty_357_reg_377 <= ap_phi_reg_pp0_iter4_empty_357_reg_377;
        ap_phi_reg_pp0_iter5_empty_reg_388 <= ap_phi_reg_pp0_iter4_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter6_empty_357_reg_377 <= ap_phi_reg_pp0_iter5_empty_357_reg_377;
        ap_phi_reg_pp0_iter6_empty_reg_388 <= ap_phi_reg_pp0_iter5_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter7_empty_357_reg_377 <= ap_phi_reg_pp0_iter6_empty_357_reg_377;
        ap_phi_reg_pp0_iter7_empty_reg_388 <= ap_phi_reg_pp0_iter6_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter8_empty_357_reg_377 <= ap_phi_reg_pp0_iter7_empty_357_reg_377;
        ap_phi_reg_pp0_iter8_empty_reg_388 <= ap_phi_reg_pp0_iter7_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter9_empty_357_reg_377 <= ap_phi_reg_pp0_iter8_empty_357_reg_377;
        ap_phi_reg_pp0_iter9_empty_reg_388 <= ap_phi_reg_pp0_iter8_empty_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln171_reg_815 == 1'd0))) begin
        icmp_ln185_reg_855 <= icmp_ln185_fu_549_p2;
        select_ln185_reg_864[1 : 0] <= select_ln185_fu_564_p3[1 : 0];
        trunc_ln2_reg_859 <= {{add_ln185_fu_544_p2[63:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mem_addr_10_read_reg_910 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0))) begin
        mem_addr_read_reg_875 <= m_axi_mem_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (icmp_ln171_reg_815 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter18_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter18_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to17 = 1'b1;
    end else begin
        ap_idle_pp0_0to17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to19 = 1'b1;
    end else begin
        ap_idle_pp0_1to19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 32'd0;
    end else begin
        ap_sig_allocacmp_i = i_4_fu_152;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_0_ce0 = 1'b1;
    end else begin
        edge_attrs_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_0_we0 = 1'b1;
    end else begin
        edge_attrs_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_1_ce0 = 1'b1;
    end else begin
        edge_attrs_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_1_we0 = 1'b1;
    end else begin
        edge_attrs_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_2_ce0 = 1'b1;
    end else begin
        edge_attrs_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_2_we0 = 1'b1;
    end else begin
        edge_attrs_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_3_ce0 = 1'b1;
    end else begin
        edge_attrs_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        edge_attrs_1_3_we0 = 1'b1;
    end else begin
        edge_attrs_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_815 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            m_axi_mem_ARADDR = sext_ln185_fu_572_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            m_axi_mem_ARADDR = sext_ln176_fu_494_p1;
        end else begin
            m_axi_mem_ARADDR = 'bx;
        end
    end else begin
        m_axi_mem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_815 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            m_axi_mem_ARLEN = select_ln185_reg_864;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            m_axi_mem_ARLEN = select_ln176_reg_833;
        end else begin
            m_axi_mem_ARLEN = 'bx;
        end
    end else begin
        m_axi_mem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_815 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln171_reg_815 == 1'd0)))) begin
        m_axi_mem_ARVALID = 1'b1;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (ap_predicate_op302_read_state75 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (ap_predicate_op269_read_state73 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0)))) begin
        m_axi_mem_RREADY = 1'b1;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln171_reg_815 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln171_reg_815 == 1'd0)))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln176_reg_824_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln185_reg_855_pp0_iter17_reg == 1'd1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0)))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        neighbor_table_offsets_address0 = neighbor_table_offsets_addr_reg_915;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        neighbor_table_offsets_address0 = zext_ln180_fu_664_p1;
    end else begin
        neighbor_table_offsets_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        neighbor_table_offsets_ce0 = 1'b1;
    end else begin
        neighbor_table_offsets_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_table_offsets_we0 = 1'b1;
    end else begin
        neighbor_table_offsets_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_0_ce0 = 1'b1;
    end else begin
        neighbor_tables_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_0_we0 = 1'b1;
    end else begin
        neighbor_tables_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_1_ce0 = 1'b1;
    end else begin
        neighbor_tables_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_1_we0 = 1'b1;
    end else begin
        neighbor_tables_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_2_ce0 = 1'b1;
    end else begin
        neighbor_tables_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_2_we0 = 1'b1;
    end else begin
        neighbor_tables_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_3_ce0 = 1'b1;
    end else begin
        neighbor_tables_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_1_3_we0 = 1'b1;
    end else begin
        neighbor_tables_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        neighbor_tables_offsets_0_address0 = neighbor_tables_offsets_0_addr_reg_925;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        neighbor_tables_offsets_0_address0 = zext_ln180_fu_664_p1;
    end else begin
        neighbor_tables_offsets_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        neighbor_tables_offsets_0_ce0 = 1'b1;
    end else begin
        neighbor_tables_offsets_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_offsets_0_we0 = 1'b1;
    end else begin
        neighbor_tables_offsets_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        neighbor_tables_offsets_1_address0 = neighbor_tables_offsets_1_addr_reg_930;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        neighbor_tables_offsets_1_address0 = zext_ln180_fu_664_p1;
    end else begin
        neighbor_tables_offsets_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        neighbor_tables_offsets_1_ce0 = 1'b1;
    end else begin
        neighbor_tables_offsets_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_offsets_1_we0 = 1'b1;
    end else begin
        neighbor_tables_offsets_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        neighbor_tables_offsets_2_address0 = neighbor_tables_offsets_2_addr_reg_935;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        neighbor_tables_offsets_2_address0 = zext_ln180_fu_664_p1;
    end else begin
        neighbor_tables_offsets_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        neighbor_tables_offsets_2_ce0 = 1'b1;
    end else begin
        neighbor_tables_offsets_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_offsets_2_we0 = 1'b1;
    end else begin
        neighbor_tables_offsets_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        neighbor_tables_offsets_3_address0 = neighbor_tables_offsets_3_addr_reg_940;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        neighbor_tables_offsets_3_address0 = zext_ln180_fu_664_p1;
    end else begin
        neighbor_tables_offsets_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        neighbor_tables_offsets_3_ce0 = 1'b1;
    end else begin
        neighbor_tables_offsets_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln1_reg_890 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_tables_offsets_3_we0 = 1'b1;
    end else begin
        neighbor_tables_offsets_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter18_stage0) & (ap_idle_pp0_0to17 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to19 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln171_fu_423_p2 = (ap_sig_allocacmp_i + 32'd1);

assign add_ln176_1_fu_459_p2 = (trunc_ln176_2_fu_445_p3 + trunc_ln127_2);

assign add_ln176_fu_453_p2 = (zext_ln176_fu_437_p1 + edge_list_in);

assign add_ln182_fu_720_p2 = (e_fu_700_p3 + 32'd1);

assign add_ln184_fu_769_p2 = (e_pe_reg_958 + 32'd1);

assign add_ln185_1_fu_536_p2 = (trunc_ln185_fu_532_p1 + trunc_ln185_4);

assign add_ln185_fu_544_p2 = ($signed(sext_ln185_1_fu_541_p1) + $signed(edge_attr_in));

assign addr_cmp_fu_675_p2 = ((reuse_addr_reg_fu_144 == zext_ln180_fu_664_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (ap_predicate_op269_read_state73 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter18 == 1'b1) & (ap_predicate_op269_read_state73 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (ap_predicate_op302_read_state75 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter18 == 1'b1) & (ap_predicate_op302_read_state75 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((icmp_ln171_reg_815 == 1'd0) & (m_axi_mem_ARREADY == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln171_reg_815 == 1'd0) & (m_axi_mem_ARREADY == 1'b0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_pp0_stage3_iter17 = ((icmp_ln171_reg_815_pp0_iter17_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state73_pp0_stage0_iter18 = ((ap_predicate_op269_read_state73 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter18 = ((icmp_ln171_reg_815_pp0_iter18_reg == 1'd0) & (m_axi_mem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter18 = ((ap_predicate_op302_read_state75 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_state76_pp0_stage3_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_phi_reg_pp0_iter0_empty_357_reg_377 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_388 = 'bx;

always @ (*) begin
    ap_predicate_op269_read_state73 = ((icmp_ln176_reg_824_pp0_iter17_reg == 1'd1) & (icmp_ln171_reg_815_pp0_iter17_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op302_read_state75 = ((icmp_ln185_reg_855_pp0_iter17_reg == 1'd1) & (icmp_ln171_reg_815_pp0_iter18_reg == 1'd0));
end

assign e_fu_700_p3 = ((addr_cmp_reg_920[0:0] == 1'b1) ? reuse_reg_fu_148 : neighbor_table_offsets_q0);

assign edge_attrs_1_0_address0 = zext_ln183_fu_758_p1;

assign edge_attrs_1_0_d0 = trunc_ln185_1_reg_970;

assign edge_attrs_1_1_address0 = zext_ln183_fu_758_p1;

assign edge_attrs_1_1_d0 = trunc_ln185_1_reg_970;

assign edge_attrs_1_2_address0 = zext_ln183_fu_758_p1;

assign edge_attrs_1_2_d0 = trunc_ln185_1_reg_970;

assign edge_attrs_1_3_address0 = zext_ln183_fu_758_p1;

assign edge_attrs_1_3_d0 = trunc_ln185_1_reg_970;

assign edge_u_fu_606_p1 = lshr_ln176_fu_600_p2[8:0];

assign edge_v_fu_610_p4 = {{lshr_ln176_fu_600_p2[40:32]}};

assign icmp_ln171_fu_417_p2 = ((ap_sig_allocacmp_i == num_of_edges) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_465_p2 = ((add_ln176_1_fu_459_p2 > 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_549_p2 = ((add_ln185_1_reg_849 > 7'd116) ? 1'b1 : 1'b0);

assign lshr_ln176_fu_600_p2 = tmp_18_fu_582_p3 >> zext_ln176_1_fu_596_p1;

assign lshr_ln185_fu_744_p2 = tmp_21_fu_726_p3 >> zext_ln185_2_fu_740_p1;

assign m_axi_mem_ARBURST = 2'd0;

assign m_axi_mem_ARCACHE = 4'd0;

assign m_axi_mem_ARID = 1'd0;

assign m_axi_mem_ARLOCK = 2'd0;

assign m_axi_mem_ARPROT = 3'd0;

assign m_axi_mem_ARQOS = 4'd0;

assign m_axi_mem_ARREGION = 4'd0;

assign m_axi_mem_ARSIZE = 3'd0;

assign m_axi_mem_ARUSER = 1'd0;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 1024'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 128'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign neighbor_table_offsets_d0 = add_ln182_reg_964;

assign neighbor_tables_1_0_address0 = zext_ln183_fu_758_p1;

assign neighbor_tables_1_0_d0 = select_ln183_reg_945;

assign neighbor_tables_1_1_address0 = zext_ln183_fu_758_p1;

assign neighbor_tables_1_1_d0 = select_ln183_reg_945;

assign neighbor_tables_1_2_address0 = zext_ln183_fu_758_p1;

assign neighbor_tables_1_2_d0 = select_ln183_reg_945;

assign neighbor_tables_1_3_address0 = zext_ln183_fu_758_p1;

assign neighbor_tables_1_3_d0 = select_ln183_reg_945;

assign neighbor_tables_offsets_0_d0 = add_ln184_fu_769_p2;

assign neighbor_tables_offsets_1_d0 = add_ln184_fu_769_p2;

assign neighbor_tables_offsets_2_d0 = add_ln184_fu_769_p2;

assign neighbor_tables_offsets_3_d0 = add_ln184_fu_769_p2;

assign select_ln176_fu_481_p3 = ((icmp_ln176_fu_465_p2[0:0] == 1'b1) ? 32'd2 : 32'd1);

assign select_ln183_fu_691_p3 = ((tmp_reg_895[0:0] == 1'b1) ? sub_ln183_1_fu_686_p2 : trunc_ln183_1_reg_905);

assign select_ln185_fu_564_p3 = ((icmp_ln185_fu_549_p2[0:0] == 1'b1) ? 32'd2 : 32'd1);

assign sext_ln176_fu_494_p1 = $signed(trunc_ln_reg_828);

assign sext_ln185_1_fu_541_p1 = sub_ln185_reg_844;

assign sext_ln185_fu_572_p1 = $signed(trunc_ln2_reg_859);

assign shl_ln176_1_fu_589_p3 = {{add_ln176_1_reg_819_pp0_iter18_reg}, {3'd0}};

assign shl_ln185_1_fu_504_p3 = {{i_reg_809}, {4'd0}};

assign shl_ln185_2_fu_515_p3 = {{i_reg_809}, {2'd0}};

assign shl_ln6_fu_429_p3 = {{ap_sig_allocacmp_i}, {3'd0}};

assign shl_ln8_fu_733_p3 = {{add_ln185_1_reg_849_pp0_iter18_reg}, {3'd0}};

assign sub_ln183_1_fu_686_p2 = (7'd0 - trunc_ln183_2_reg_900);

assign sub_ln183_fu_638_p2 = (9'd0 - edge_v_fu_610_p4);

assign sub_ln185_fu_526_p2 = (zext_ln185_fu_511_p1 - zext_ln185_1_fu_522_p1);

assign tmp_18_fu_582_p3 = {{ap_phi_reg_pp0_iter18_empty_357_reg_377}, {mem_addr_read_reg_875}};

assign tmp_21_fu_726_p3 = {{ap_phi_reg_pp0_iter18_empty_reg_388}, {mem_addr_10_read_reg_910}};

assign trunc_ln176_2_fu_445_p3 = {{trunc_ln176_fu_441_p1}, {3'd0}};

assign trunc_ln176_fu_441_p1 = ap_sig_allocacmp_i[3:0];

assign trunc_ln185_1_fu_750_p1 = lshr_ln185_fu_744_p2[70:0];

assign trunc_ln185_fu_532_p1 = sub_ln185_fu_526_p2[6:0];

assign zext_ln176_1_fu_596_p1 = shl_ln176_1_fu_589_p3;

assign zext_ln176_fu_437_p1 = shl_ln6_fu_429_p3;

assign zext_ln180_fu_664_p1 = edge_u_reg_885;

assign zext_ln183_fu_758_p1 = e_pe_reg_958;

assign zext_ln185_1_fu_522_p1 = shl_ln185_2_fu_515_p3;

assign zext_ln185_2_fu_740_p1 = shl_ln8_fu_733_p3;

assign zext_ln185_fu_511_p1 = shl_ln185_1_fu_504_p3;

always @ (posedge ap_clk) begin
    select_ln176_reg_833[31:2] <= 30'b000000000000000000000000000000;
    sub_ln185_reg_844[1:0] <= 2'b00;
    select_ln185_reg_864[31:2] <= 30'b000000000000000000000000000000;
end

endmodule //GIN_compute_graphs_load_graph_Pipeline_VITIS_LOOP_171_7
