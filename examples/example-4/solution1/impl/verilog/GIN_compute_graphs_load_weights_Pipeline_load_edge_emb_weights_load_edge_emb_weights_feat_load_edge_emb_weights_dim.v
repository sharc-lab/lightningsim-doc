// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_graphs_load_weights_Pipeline_load_edge_emb_weights_load_edge_emb_weights_feat_load_edge_emb_weights_dim (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        edge_embedding_weight_in,
        trunc_ln14,
        edge_embedding_weights_V_0_0_address0,
        edge_embedding_weights_V_0_0_ce0,
        edge_embedding_weights_V_0_0_we0,
        edge_embedding_weights_V_0_0_d0,
        edge_embedding_weights_V_1_0_address0,
        edge_embedding_weights_V_1_0_ce0,
        edge_embedding_weights_V_1_0_we0,
        edge_embedding_weights_V_1_0_d0,
        edge_embedding_weights_V_2_0_address0,
        edge_embedding_weights_V_2_0_ce0,
        edge_embedding_weights_V_2_0_we0,
        edge_embedding_weights_V_2_0_d0,
        edge_embedding_weights_V_3_0_address0,
        edge_embedding_weights_V_3_0_ce0,
        edge_embedding_weights_V_3_0_we0,
        edge_embedding_weights_V_3_0_d0,
        edge_embedding_weights_V_0_1_address0,
        edge_embedding_weights_V_0_1_ce0,
        edge_embedding_weights_V_0_1_we0,
        edge_embedding_weights_V_0_1_d0,
        edge_embedding_weights_V_1_1_address0,
        edge_embedding_weights_V_1_1_ce0,
        edge_embedding_weights_V_1_1_we0,
        edge_embedding_weights_V_1_1_d0,
        edge_embedding_weights_V_2_1_address0,
        edge_embedding_weights_V_2_1_ce0,
        edge_embedding_weights_V_2_1_we0,
        edge_embedding_weights_V_2_1_d0,
        edge_embedding_weights_V_3_1_address0,
        edge_embedding_weights_V_3_1_ce0,
        edge_embedding_weights_V_3_1_we0,
        edge_embedding_weights_V_3_1_d0,
        edge_embedding_weights_V_0_2_address0,
        edge_embedding_weights_V_0_2_ce0,
        edge_embedding_weights_V_0_2_we0,
        edge_embedding_weights_V_0_2_d0,
        edge_embedding_weights_V_1_2_address0,
        edge_embedding_weights_V_1_2_ce0,
        edge_embedding_weights_V_1_2_we0,
        edge_embedding_weights_V_1_2_d0,
        edge_embedding_weights_V_2_2_address0,
        edge_embedding_weights_V_2_2_ce0,
        edge_embedding_weights_V_2_2_we0,
        edge_embedding_weights_V_2_2_d0,
        edge_embedding_weights_V_3_2_address0,
        edge_embedding_weights_V_3_2_ce0,
        edge_embedding_weights_V_3_2_we0,
        edge_embedding_weights_V_3_2_d0,
        edge_embedding_weights_V_0_3_address0,
        edge_embedding_weights_V_0_3_ce0,
        edge_embedding_weights_V_0_3_we0,
        edge_embedding_weights_V_0_3_d0,
        edge_embedding_weights_V_1_3_address0,
        edge_embedding_weights_V_1_3_ce0,
        edge_embedding_weights_V_1_3_we0,
        edge_embedding_weights_V_1_3_d0,
        edge_embedding_weights_V_2_3_address0,
        edge_embedding_weights_V_2_3_ce0,
        edge_embedding_weights_V_2_3_we0,
        edge_embedding_weights_V_2_3_d0,
        edge_embedding_weights_V_3_3_address0,
        edge_embedding_weights_V_3_3_ce0,
        edge_embedding_weights_V_3_3_we0,
        edge_embedding_weights_V_3_3_d0,
        edge_embedding_weights_V_0_4_address0,
        edge_embedding_weights_V_0_4_ce0,
        edge_embedding_weights_V_0_4_we0,
        edge_embedding_weights_V_0_4_d0,
        edge_embedding_weights_V_1_4_address0,
        edge_embedding_weights_V_1_4_ce0,
        edge_embedding_weights_V_1_4_we0,
        edge_embedding_weights_V_1_4_d0,
        edge_embedding_weights_V_2_4_address0,
        edge_embedding_weights_V_2_4_ce0,
        edge_embedding_weights_V_2_4_we0,
        edge_embedding_weights_V_2_4_d0,
        edge_embedding_weights_V_3_4_address0,
        edge_embedding_weights_V_3_4_ce0,
        edge_embedding_weights_V_3_4_we0,
        edge_embedding_weights_V_3_4_d0,
        edge_embedding_weights_V_0_5_address0,
        edge_embedding_weights_V_0_5_ce0,
        edge_embedding_weights_V_0_5_we0,
        edge_embedding_weights_V_0_5_d0,
        edge_embedding_weights_V_1_5_address0,
        edge_embedding_weights_V_1_5_ce0,
        edge_embedding_weights_V_1_5_we0,
        edge_embedding_weights_V_1_5_d0,
        edge_embedding_weights_V_2_5_address0,
        edge_embedding_weights_V_2_5_ce0,
        edge_embedding_weights_V_2_5_we0,
        edge_embedding_weights_V_2_5_d0,
        edge_embedding_weights_V_3_5_address0,
        edge_embedding_weights_V_3_5_ce0,
        edge_embedding_weights_V_3_5_we0,
        edge_embedding_weights_V_3_5_d0,
        edge_embedding_weights_V_0_6_address0,
        edge_embedding_weights_V_0_6_ce0,
        edge_embedding_weights_V_0_6_we0,
        edge_embedding_weights_V_0_6_d0,
        edge_embedding_weights_V_1_6_address0,
        edge_embedding_weights_V_1_6_ce0,
        edge_embedding_weights_V_1_6_we0,
        edge_embedding_weights_V_1_6_d0,
        edge_embedding_weights_V_2_6_address0,
        edge_embedding_weights_V_2_6_ce0,
        edge_embedding_weights_V_2_6_we0,
        edge_embedding_weights_V_2_6_d0,
        edge_embedding_weights_V_3_6_address0,
        edge_embedding_weights_V_3_6_ce0,
        edge_embedding_weights_V_3_6_we0,
        edge_embedding_weights_V_3_6_d0,
        edge_embedding_weights_V_0_7_address0,
        edge_embedding_weights_V_0_7_ce0,
        edge_embedding_weights_V_0_7_we0,
        edge_embedding_weights_V_0_7_d0,
        edge_embedding_weights_V_1_7_address0,
        edge_embedding_weights_V_1_7_ce0,
        edge_embedding_weights_V_1_7_we0,
        edge_embedding_weights_V_1_7_d0,
        edge_embedding_weights_V_2_7_address0,
        edge_embedding_weights_V_2_7_ce0,
        edge_embedding_weights_V_2_7_we0,
        edge_embedding_weights_V_2_7_d0,
        edge_embedding_weights_V_3_7_address0,
        edge_embedding_weights_V_3_7_ce0,
        edge_embedding_weights_V_3_7_we0,
        edge_embedding_weights_V_3_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [1023:0] m_axi_mem_WDATA;
output  [127:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [1023:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [63:0] edge_embedding_weight_in;
input  [6:0] trunc_ln14;
output  [9:0] edge_embedding_weights_V_0_0_address0;
output   edge_embedding_weights_V_0_0_ce0;
output   edge_embedding_weights_V_0_0_we0;
output  [15:0] edge_embedding_weights_V_0_0_d0;
output  [9:0] edge_embedding_weights_V_1_0_address0;
output   edge_embedding_weights_V_1_0_ce0;
output   edge_embedding_weights_V_1_0_we0;
output  [15:0] edge_embedding_weights_V_1_0_d0;
output  [9:0] edge_embedding_weights_V_2_0_address0;
output   edge_embedding_weights_V_2_0_ce0;
output   edge_embedding_weights_V_2_0_we0;
output  [15:0] edge_embedding_weights_V_2_0_d0;
output  [9:0] edge_embedding_weights_V_3_0_address0;
output   edge_embedding_weights_V_3_0_ce0;
output   edge_embedding_weights_V_3_0_we0;
output  [15:0] edge_embedding_weights_V_3_0_d0;
output  [9:0] edge_embedding_weights_V_0_1_address0;
output   edge_embedding_weights_V_0_1_ce0;
output   edge_embedding_weights_V_0_1_we0;
output  [15:0] edge_embedding_weights_V_0_1_d0;
output  [9:0] edge_embedding_weights_V_1_1_address0;
output   edge_embedding_weights_V_1_1_ce0;
output   edge_embedding_weights_V_1_1_we0;
output  [15:0] edge_embedding_weights_V_1_1_d0;
output  [9:0] edge_embedding_weights_V_2_1_address0;
output   edge_embedding_weights_V_2_1_ce0;
output   edge_embedding_weights_V_2_1_we0;
output  [15:0] edge_embedding_weights_V_2_1_d0;
output  [9:0] edge_embedding_weights_V_3_1_address0;
output   edge_embedding_weights_V_3_1_ce0;
output   edge_embedding_weights_V_3_1_we0;
output  [15:0] edge_embedding_weights_V_3_1_d0;
output  [9:0] edge_embedding_weights_V_0_2_address0;
output   edge_embedding_weights_V_0_2_ce0;
output   edge_embedding_weights_V_0_2_we0;
output  [15:0] edge_embedding_weights_V_0_2_d0;
output  [9:0] edge_embedding_weights_V_1_2_address0;
output   edge_embedding_weights_V_1_2_ce0;
output   edge_embedding_weights_V_1_2_we0;
output  [15:0] edge_embedding_weights_V_1_2_d0;
output  [9:0] edge_embedding_weights_V_2_2_address0;
output   edge_embedding_weights_V_2_2_ce0;
output   edge_embedding_weights_V_2_2_we0;
output  [15:0] edge_embedding_weights_V_2_2_d0;
output  [9:0] edge_embedding_weights_V_3_2_address0;
output   edge_embedding_weights_V_3_2_ce0;
output   edge_embedding_weights_V_3_2_we0;
output  [15:0] edge_embedding_weights_V_3_2_d0;
output  [9:0] edge_embedding_weights_V_0_3_address0;
output   edge_embedding_weights_V_0_3_ce0;
output   edge_embedding_weights_V_0_3_we0;
output  [15:0] edge_embedding_weights_V_0_3_d0;
output  [9:0] edge_embedding_weights_V_1_3_address0;
output   edge_embedding_weights_V_1_3_ce0;
output   edge_embedding_weights_V_1_3_we0;
output  [15:0] edge_embedding_weights_V_1_3_d0;
output  [9:0] edge_embedding_weights_V_2_3_address0;
output   edge_embedding_weights_V_2_3_ce0;
output   edge_embedding_weights_V_2_3_we0;
output  [15:0] edge_embedding_weights_V_2_3_d0;
output  [9:0] edge_embedding_weights_V_3_3_address0;
output   edge_embedding_weights_V_3_3_ce0;
output   edge_embedding_weights_V_3_3_we0;
output  [15:0] edge_embedding_weights_V_3_3_d0;
output  [9:0] edge_embedding_weights_V_0_4_address0;
output   edge_embedding_weights_V_0_4_ce0;
output   edge_embedding_weights_V_0_4_we0;
output  [15:0] edge_embedding_weights_V_0_4_d0;
output  [9:0] edge_embedding_weights_V_1_4_address0;
output   edge_embedding_weights_V_1_4_ce0;
output   edge_embedding_weights_V_1_4_we0;
output  [15:0] edge_embedding_weights_V_1_4_d0;
output  [9:0] edge_embedding_weights_V_2_4_address0;
output   edge_embedding_weights_V_2_4_ce0;
output   edge_embedding_weights_V_2_4_we0;
output  [15:0] edge_embedding_weights_V_2_4_d0;
output  [9:0] edge_embedding_weights_V_3_4_address0;
output   edge_embedding_weights_V_3_4_ce0;
output   edge_embedding_weights_V_3_4_we0;
output  [15:0] edge_embedding_weights_V_3_4_d0;
output  [9:0] edge_embedding_weights_V_0_5_address0;
output   edge_embedding_weights_V_0_5_ce0;
output   edge_embedding_weights_V_0_5_we0;
output  [15:0] edge_embedding_weights_V_0_5_d0;
output  [9:0] edge_embedding_weights_V_1_5_address0;
output   edge_embedding_weights_V_1_5_ce0;
output   edge_embedding_weights_V_1_5_we0;
output  [15:0] edge_embedding_weights_V_1_5_d0;
output  [9:0] edge_embedding_weights_V_2_5_address0;
output   edge_embedding_weights_V_2_5_ce0;
output   edge_embedding_weights_V_2_5_we0;
output  [15:0] edge_embedding_weights_V_2_5_d0;
output  [9:0] edge_embedding_weights_V_3_5_address0;
output   edge_embedding_weights_V_3_5_ce0;
output   edge_embedding_weights_V_3_5_we0;
output  [15:0] edge_embedding_weights_V_3_5_d0;
output  [9:0] edge_embedding_weights_V_0_6_address0;
output   edge_embedding_weights_V_0_6_ce0;
output   edge_embedding_weights_V_0_6_we0;
output  [15:0] edge_embedding_weights_V_0_6_d0;
output  [9:0] edge_embedding_weights_V_1_6_address0;
output   edge_embedding_weights_V_1_6_ce0;
output   edge_embedding_weights_V_1_6_we0;
output  [15:0] edge_embedding_weights_V_1_6_d0;
output  [9:0] edge_embedding_weights_V_2_6_address0;
output   edge_embedding_weights_V_2_6_ce0;
output   edge_embedding_weights_V_2_6_we0;
output  [15:0] edge_embedding_weights_V_2_6_d0;
output  [9:0] edge_embedding_weights_V_3_6_address0;
output   edge_embedding_weights_V_3_6_ce0;
output   edge_embedding_weights_V_3_6_we0;
output  [15:0] edge_embedding_weights_V_3_6_d0;
output  [9:0] edge_embedding_weights_V_0_7_address0;
output   edge_embedding_weights_V_0_7_ce0;
output   edge_embedding_weights_V_0_7_we0;
output  [15:0] edge_embedding_weights_V_0_7_d0;
output  [9:0] edge_embedding_weights_V_1_7_address0;
output   edge_embedding_weights_V_1_7_ce0;
output   edge_embedding_weights_V_1_7_we0;
output  [15:0] edge_embedding_weights_V_1_7_d0;
output  [9:0] edge_embedding_weights_V_2_7_address0;
output   edge_embedding_weights_V_2_7_ce0;
output   edge_embedding_weights_V_2_7_we0;
output  [15:0] edge_embedding_weights_V_2_7_d0;
output  [9:0] edge_embedding_weights_V_3_7_address0;
output   edge_embedding_weights_V_3_7_ce0;
output   edge_embedding_weights_V_3_7_we0;
output  [15:0] edge_embedding_weights_V_3_7_d0;

reg ap_idle;
reg m_axi_mem_ARVALID;
reg m_axi_mem_RREADY;
reg edge_embedding_weights_V_0_0_ce0;
reg edge_embedding_weights_V_0_0_we0;
reg edge_embedding_weights_V_1_0_ce0;
reg edge_embedding_weights_V_1_0_we0;
reg edge_embedding_weights_V_2_0_ce0;
reg edge_embedding_weights_V_2_0_we0;
reg edge_embedding_weights_V_3_0_ce0;
reg edge_embedding_weights_V_3_0_we0;
reg edge_embedding_weights_V_0_1_ce0;
reg edge_embedding_weights_V_0_1_we0;
reg edge_embedding_weights_V_1_1_ce0;
reg edge_embedding_weights_V_1_1_we0;
reg edge_embedding_weights_V_2_1_ce0;
reg edge_embedding_weights_V_2_1_we0;
reg edge_embedding_weights_V_3_1_ce0;
reg edge_embedding_weights_V_3_1_we0;
reg edge_embedding_weights_V_0_2_ce0;
reg edge_embedding_weights_V_0_2_we0;
reg edge_embedding_weights_V_1_2_ce0;
reg edge_embedding_weights_V_1_2_we0;
reg edge_embedding_weights_V_2_2_ce0;
reg edge_embedding_weights_V_2_2_we0;
reg edge_embedding_weights_V_3_2_ce0;
reg edge_embedding_weights_V_3_2_we0;
reg edge_embedding_weights_V_0_3_ce0;
reg edge_embedding_weights_V_0_3_we0;
reg edge_embedding_weights_V_1_3_ce0;
reg edge_embedding_weights_V_1_3_we0;
reg edge_embedding_weights_V_2_3_ce0;
reg edge_embedding_weights_V_2_3_we0;
reg edge_embedding_weights_V_3_3_ce0;
reg edge_embedding_weights_V_3_3_we0;
reg edge_embedding_weights_V_0_4_ce0;
reg edge_embedding_weights_V_0_4_we0;
reg edge_embedding_weights_V_1_4_ce0;
reg edge_embedding_weights_V_1_4_we0;
reg edge_embedding_weights_V_2_4_ce0;
reg edge_embedding_weights_V_2_4_we0;
reg edge_embedding_weights_V_3_4_ce0;
reg edge_embedding_weights_V_3_4_we0;
reg edge_embedding_weights_V_0_5_ce0;
reg edge_embedding_weights_V_0_5_we0;
reg edge_embedding_weights_V_1_5_ce0;
reg edge_embedding_weights_V_1_5_we0;
reg edge_embedding_weights_V_2_5_ce0;
reg edge_embedding_weights_V_2_5_we0;
reg edge_embedding_weights_V_3_5_ce0;
reg edge_embedding_weights_V_3_5_we0;
reg edge_embedding_weights_V_0_6_ce0;
reg edge_embedding_weights_V_0_6_we0;
reg edge_embedding_weights_V_1_6_ce0;
reg edge_embedding_weights_V_1_6_we0;
reg edge_embedding_weights_V_2_6_ce0;
reg edge_embedding_weights_V_2_6_we0;
reg edge_embedding_weights_V_3_6_ce0;
reg edge_embedding_weights_V_3_6_we0;
reg edge_embedding_weights_V_0_7_ce0;
reg edge_embedding_weights_V_0_7_we0;
reg edge_embedding_weights_V_1_7_ce0;
reg edge_embedding_weights_V_1_7_we0;
reg edge_embedding_weights_V_2_7_ce0;
reg edge_embedding_weights_V_2_7_we0;
reg edge_embedding_weights_V_3_7_ce0;
reg edge_embedding_weights_V_3_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_state61_pp0_stage0_iter60;
wire    ap_block_state62_pp0_stage0_iter61;
wire    ap_block_state63_pp0_stage0_iter62;
wire    ap_block_state64_pp0_stage0_iter63;
wire    ap_block_state65_pp0_stage0_iter64;
wire    ap_block_state66_pp0_stage0_iter65;
wire    ap_block_state67_pp0_stage0_iter66;
wire    ap_block_state68_pp0_stage0_iter67;
wire    ap_block_state69_pp0_stage0_iter68;
wire    ap_block_state70_pp0_stage0_iter69;
wire    ap_block_state71_pp0_stage0_iter70;
wire    ap_block_state72_pp0_stage0_iter71;
wire    ap_block_state73_pp0_stage0_iter72;
wire    ap_block_state74_pp0_stage0_iter73;
wire    ap_block_state75_pp0_stage0_iter74;
reg    ap_block_state76_pp0_stage0_iter75;
wire    ap_block_state77_pp0_stage0_iter76;
wire    ap_block_state78_pp0_stage0_iter77;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln57_fu_687_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    mem_blk_n_R;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] i_4_reg_1122;
reg   [0:0] icmp_ln57_reg_1127;
wire   [0:0] icmp_ln59_fu_714_p2;
reg   [0:0] icmp_ln59_reg_1131;
wire   [2:0] select_ln57_1_fu_728_p3;
reg   [2:0] select_ln57_1_reg_1136;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter2_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter3_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter4_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter5_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter6_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter7_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter8_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter9_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter10_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter11_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter12_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter13_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter14_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter15_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter16_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter17_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter18_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter19_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter20_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter21_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter22_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter23_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter24_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter25_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter26_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter27_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter28_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter29_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter30_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter31_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter32_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter33_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter34_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter35_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter36_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter37_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter38_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter39_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter40_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter41_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter42_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter43_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter44_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter45_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter46_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter47_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter48_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter49_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter50_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter51_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter52_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter53_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter54_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter55_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter56_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter57_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter58_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter59_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter60_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter61_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter62_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter63_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter64_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter65_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter66_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter67_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter68_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter69_reg;
reg   [2:0] select_ln57_1_reg_1136_pp0_iter70_reg;
wire   [0:0] and_ln57_fu_752_p2;
reg   [0:0] and_ln57_reg_1146;
wire   [3:0] add_ln59_fu_758_p2;
reg   [3:0] add_ln59_reg_1151;
wire   [6:0] select_ln59_fu_770_p3;
reg   [6:0] select_ln59_reg_1156;
wire   [3:0] select_ln59_1_fu_778_p3;
reg   [3:0] select_ln59_1_reg_1161;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter2_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter3_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter4_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter5_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter6_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter7_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter8_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter9_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter10_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter11_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter12_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter13_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter14_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter15_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter16_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter17_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter18_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter19_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter20_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter21_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter22_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter23_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter24_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter25_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter26_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter27_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter28_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter29_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter30_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter31_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter32_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter33_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter34_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter35_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter36_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter37_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter38_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter39_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter40_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter41_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter42_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter43_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter44_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter45_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter46_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter47_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter48_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter49_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter50_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter51_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter52_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter53_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter54_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter55_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter56_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter57_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter58_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter59_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter60_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter61_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter62_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter63_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter64_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter65_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter66_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter67_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter68_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter69_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter70_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter71_reg;
reg   [3:0] select_ln59_1_reg_1161_pp0_iter72_reg;
wire   [2:0] trunc_ln67_1_fu_786_p1;
reg   [2:0] trunc_ln67_1_reg_1166;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter2_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter3_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter4_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter5_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter6_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter7_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter8_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter9_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter10_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter11_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter12_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter13_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter14_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter15_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter16_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter17_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter18_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter19_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter20_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter21_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter22_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter23_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter24_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter25_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter26_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter27_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter28_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter29_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter30_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter31_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter32_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter33_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter34_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter35_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter36_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter37_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter38_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter39_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter40_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter41_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter42_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter43_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter44_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter45_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter46_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter47_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter48_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter49_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter50_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter51_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter52_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter53_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter54_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter55_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter56_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter57_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter58_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter59_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter60_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter61_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter62_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter63_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter64_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter65_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter66_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter67_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter68_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter69_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter70_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter71_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter72_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter73_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter74_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter75_reg;
reg   [2:0] trunc_ln67_1_reg_1166_pp0_iter76_reg;
reg   [3:0] lshr_ln_reg_1170;
reg   [3:0] lshr_ln_reg_1170_pp0_iter2_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter3_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter4_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter5_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter6_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter7_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter8_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter9_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter10_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter11_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter12_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter13_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter14_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter15_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter16_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter17_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter18_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter19_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter20_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter21_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter22_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter23_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter24_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter25_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter26_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter27_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter28_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter29_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter30_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter31_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter32_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter33_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter34_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter35_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter36_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter37_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter38_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter39_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter40_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter41_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter42_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter43_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter44_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter45_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter46_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter47_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter48_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter49_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter50_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter51_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter52_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter53_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter54_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter55_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter56_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter57_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter58_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter59_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter60_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter61_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter62_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter63_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter64_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter65_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter66_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter67_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter68_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter69_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter70_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter71_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter72_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter73_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter74_reg;
reg   [3:0] lshr_ln_reg_1170_pp0_iter75_reg;
wire   [10:0] add_ln63_fu_883_p2;
reg   [10:0] add_ln63_reg_1175;
wire   [5:0] trunc_ln63_fu_903_p1;
reg   [5:0] trunc_ln63_reg_1185;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter5_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter6_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter7_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter8_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter9_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter10_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter11_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter12_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter13_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter14_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter15_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter16_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter17_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter18_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter19_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter20_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter21_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter22_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter23_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter24_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter25_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter26_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter27_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter28_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter29_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter30_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter31_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter32_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter33_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter34_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter35_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter36_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter37_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter38_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter39_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter40_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter41_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter42_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter43_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter44_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter45_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter46_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter47_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter48_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter49_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter50_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter51_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter52_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter53_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter54_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter55_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter56_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter57_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter58_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter59_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter60_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter61_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter62_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter63_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter64_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter65_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter66_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter67_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter68_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter69_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter70_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter71_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter72_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter73_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter74_reg;
reg   [5:0] trunc_ln63_reg_1185_pp0_iter75_reg;
reg   [56:0] trunc_ln63_3_reg_1190;
wire   [6:0] grp_fu_1057_p3;
reg   [6:0] add_ln67_reg_1211;
reg   [6:0] add_ln67_reg_1211_pp0_iter75_reg;
wire   [5:0] trunc_ln67_fu_940_p1;
reg   [5:0] trunc_ln67_reg_1221;
reg   [5:0] trunc_ln67_reg_1221_pp0_iter75_reg;
reg   [1023:0] mem_addr_read_reg_1226;
wire   [15:0] trunc_ln63_1_fu_996_p1;
reg   [15:0] trunc_ln63_1_reg_1231;
wire   [9:0] zext_ln67_4_fu_1000_p1;
wire   [9:0] add_ln67_2_fu_1003_p2;
reg   [9:0] add_ln67_2_reg_1272;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [63:0] zext_ln67_5_fu_1009_p1;
wire   [63:0] zext_ln67_6_fu_1028_p1;
wire  signed [63:0] sext_ln63_fu_921_p1;
reg   [6:0] dim_fu_196;
wire   [6:0] add_ln61_fu_803_p2;
wire    ap_loop_init;
reg   [3:0] i_fu_200;
reg   [10:0] indvar_flatten671_fu_204;
wire   [10:0] select_ln59_3_fu_815_p3;
reg   [2:0] l_fu_208;
reg   [12:0] indvar_flatten689_fu_212;
wire   [12:0] add_ln57_1_fu_693_p2;
wire   [2:0] add_ln57_fu_708_p2;
wire   [0:0] icmp_ln61_fu_746_p2;
wire   [0:0] xor_ln57_fu_740_p2;
wire   [3:0] select_ln57_fu_720_p3;
wire   [0:0] or_ln59_fu_764_p2;
wire   [10:0] add_ln59_1_fu_809_p2;
wire   [3:0] mul_ln61_fu_851_p0;
wire   [7:0] mul_ln61_fu_851_p1;
wire   [10:0] mul_ln61_fu_851_p2;
wire   [3:0] mul_ln61_1_fu_867_p0;
wire   [7:0] mul_ln61_1_fu_867_p1;
wire   [10:0] mul_ln61_1_fu_867_p2;
wire   [10:0] select_ln57_2_fu_857_p3;
wire   [10:0] select_ln59_2_fu_873_p3;
wire   [10:0] zext_ln63_fu_880_p1;
wire   [12:0] grp_fu_1047_p3;
wire   [13:0] shl_ln3_fu_892_p3;
wire   [63:0] zext_ln63_2_fu_899_p1;
wire   [63:0] add_ln63_2_fu_906_p2;
wire   [8:0] tmp_fu_950_p3;
wire   [9:0] p_shl_cast_fu_943_p3;
wire   [9:0] zext_ln67_3_fu_957_p1;
wire   [6:0] trunc_ln63_2_fu_967_p3;
wire   [6:0] add_ln63_3_fu_974_p2;
wire   [9:0] shl_ln63_1_fu_979_p3;
wire   [1023:0] zext_ln63_3_fu_987_p1;
wire   [1023:0] lshr_ln63_fu_991_p2;
wire   [9:0] sub_ln67_fu_961_p2;
wire   [9:0] grp_fu_1067_p3;
wire   [2:0] grp_fu_1047_p0;
wire   [10:0] grp_fu_1047_p1;
wire   [10:0] grp_fu_1047_p2;
wire   [2:0] grp_fu_1057_p0;
wire   [3:0] grp_fu_1057_p1;
wire   [3:0] grp_fu_1057_p2;
wire   [6:0] grp_fu_1067_p0;
wire   [3:0] grp_fu_1067_p1;
wire   [3:0] grp_fu_1067_p2;
reg    grp_fu_1047_ce;
reg    grp_fu_1057_ce;
reg    grp_fu_1067_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg    ap_loop_exit_ready_pp0_iter71_reg;
reg    ap_loop_exit_ready_pp0_iter72_reg;
reg    ap_loop_exit_ready_pp0_iter73_reg;
reg    ap_loop_exit_ready_pp0_iter74_reg;
reg    ap_loop_exit_ready_pp0_iter75_reg;
reg    ap_loop_exit_ready_pp0_iter76_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] grp_fu_1047_p00;
wire   [12:0] grp_fu_1047_p20;
wire   [6:0] grp_fu_1057_p00;
wire   [6:0] grp_fu_1057_p20;
wire   [9:0] grp_fu_1067_p00;
wire   [10:0] mul_ln61_1_fu_867_p00;
wire   [10:0] mul_ln61_fu_851_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GIN_compute_graphs_mul_4ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_4ns_8ns_11_1_1_U1032(
    .din0(mul_ln61_fu_851_p0),
    .din1(mul_ln61_fu_851_p1),
    .dout(mul_ln61_fu_851_p2)
);

GIN_compute_graphs_mul_4ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_4ns_8ns_11_1_1_U1033(
    .din0(mul_ln61_1_fu_867_p0),
    .din1(mul_ln61_1_fu_867_p1),
    .dout(mul_ln61_1_fu_867_p2)
);

GIN_compute_graphs_mac_muladd_3ns_11ns_11ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 13 ))
mac_muladd_3ns_11ns_11ns_13_4_1_U1034(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1047_p0),
    .din1(grp_fu_1047_p1),
    .din2(grp_fu_1047_p2),
    .ce(grp_fu_1047_ce),
    .dout(grp_fu_1047_p3)
);

GIN_compute_graphs_mac_muladd_3ns_4ns_4ns_7_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mac_muladd_3ns_4ns_4ns_7_4_1_U1035(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1057_p0),
    .din1(grp_fu_1057_p1),
    .din2(grp_fu_1057_p2),
    .ce(grp_fu_1057_ce),
    .dout(grp_fu_1057_p3)
);

GIN_compute_graphs_mac_muladd_7ns_4ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_7ns_4ns_4ns_10_4_1_U1036(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1067_p0),
    .din1(grp_fu_1067_p1),
    .din2(grp_fu_1067_p2),
    .ce(grp_fu_1067_ce),
    .dout(grp_fu_1067_p3)
);

GIN_compute_graphs_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter76_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            dim_fu_196 <= 7'd0;
        end else if (((icmp_ln57_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            dim_fu_196 <= add_ln61_fu_803_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_200 <= 4'd0;
        end else if (((icmp_ln57_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_200 <= select_ln59_1_fu_778_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten671_fu_204 <= 11'd0;
        end else if (((icmp_ln57_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten671_fu_204 <= select_ln59_3_fu_815_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten689_fu_212 <= 13'd0;
        end else if (((icmp_ln57_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten689_fu_212 <= add_ln57_1_fu_693_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            l_fu_208 <= 3'd0;
        end else if (((icmp_ln57_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            l_fu_208 <= select_ln57_1_fu_728_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_687_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln59_reg_1151 <= add_ln59_fu_758_p2;
        and_ln57_reg_1146 <= and_ln57_fu_752_p2;
        icmp_ln59_reg_1131 <= icmp_ln59_fu_714_p2;
        lshr_ln_reg_1170 <= {{select_ln59_fu_770_p3[6:3]}};
        select_ln57_1_reg_1136 <= select_ln57_1_fu_728_p3;
        select_ln59_1_reg_1161 <= select_ln59_1_fu_778_p3;
        select_ln59_reg_1156 <= select_ln59_fu_770_p3;
        trunc_ln67_1_reg_1166 <= trunc_ln67_1_fu_786_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_1127 == 1'd0))) begin
        add_ln63_reg_1175 <= add_ln63_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln67_2_reg_1272 <= add_ln67_2_fu_1003_p2;
        add_ln67_reg_1211_pp0_iter75_reg <= add_ln67_reg_1211;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter71_reg <= ap_loop_exit_ready_pp0_iter70_reg;
        ap_loop_exit_ready_pp0_iter72_reg <= ap_loop_exit_ready_pp0_iter71_reg;
        ap_loop_exit_ready_pp0_iter73_reg <= ap_loop_exit_ready_pp0_iter72_reg;
        ap_loop_exit_ready_pp0_iter74_reg <= ap_loop_exit_ready_pp0_iter73_reg;
        ap_loop_exit_ready_pp0_iter75_reg <= ap_loop_exit_ready_pp0_iter74_reg;
        ap_loop_exit_ready_pp0_iter76_reg <= ap_loop_exit_ready_pp0_iter75_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        lshr_ln_reg_1170_pp0_iter10_reg <= lshr_ln_reg_1170_pp0_iter9_reg;
        lshr_ln_reg_1170_pp0_iter11_reg <= lshr_ln_reg_1170_pp0_iter10_reg;
        lshr_ln_reg_1170_pp0_iter12_reg <= lshr_ln_reg_1170_pp0_iter11_reg;
        lshr_ln_reg_1170_pp0_iter13_reg <= lshr_ln_reg_1170_pp0_iter12_reg;
        lshr_ln_reg_1170_pp0_iter14_reg <= lshr_ln_reg_1170_pp0_iter13_reg;
        lshr_ln_reg_1170_pp0_iter15_reg <= lshr_ln_reg_1170_pp0_iter14_reg;
        lshr_ln_reg_1170_pp0_iter16_reg <= lshr_ln_reg_1170_pp0_iter15_reg;
        lshr_ln_reg_1170_pp0_iter17_reg <= lshr_ln_reg_1170_pp0_iter16_reg;
        lshr_ln_reg_1170_pp0_iter18_reg <= lshr_ln_reg_1170_pp0_iter17_reg;
        lshr_ln_reg_1170_pp0_iter19_reg <= lshr_ln_reg_1170_pp0_iter18_reg;
        lshr_ln_reg_1170_pp0_iter20_reg <= lshr_ln_reg_1170_pp0_iter19_reg;
        lshr_ln_reg_1170_pp0_iter21_reg <= lshr_ln_reg_1170_pp0_iter20_reg;
        lshr_ln_reg_1170_pp0_iter22_reg <= lshr_ln_reg_1170_pp0_iter21_reg;
        lshr_ln_reg_1170_pp0_iter23_reg <= lshr_ln_reg_1170_pp0_iter22_reg;
        lshr_ln_reg_1170_pp0_iter24_reg <= lshr_ln_reg_1170_pp0_iter23_reg;
        lshr_ln_reg_1170_pp0_iter25_reg <= lshr_ln_reg_1170_pp0_iter24_reg;
        lshr_ln_reg_1170_pp0_iter26_reg <= lshr_ln_reg_1170_pp0_iter25_reg;
        lshr_ln_reg_1170_pp0_iter27_reg <= lshr_ln_reg_1170_pp0_iter26_reg;
        lshr_ln_reg_1170_pp0_iter28_reg <= lshr_ln_reg_1170_pp0_iter27_reg;
        lshr_ln_reg_1170_pp0_iter29_reg <= lshr_ln_reg_1170_pp0_iter28_reg;
        lshr_ln_reg_1170_pp0_iter2_reg <= lshr_ln_reg_1170;
        lshr_ln_reg_1170_pp0_iter30_reg <= lshr_ln_reg_1170_pp0_iter29_reg;
        lshr_ln_reg_1170_pp0_iter31_reg <= lshr_ln_reg_1170_pp0_iter30_reg;
        lshr_ln_reg_1170_pp0_iter32_reg <= lshr_ln_reg_1170_pp0_iter31_reg;
        lshr_ln_reg_1170_pp0_iter33_reg <= lshr_ln_reg_1170_pp0_iter32_reg;
        lshr_ln_reg_1170_pp0_iter34_reg <= lshr_ln_reg_1170_pp0_iter33_reg;
        lshr_ln_reg_1170_pp0_iter35_reg <= lshr_ln_reg_1170_pp0_iter34_reg;
        lshr_ln_reg_1170_pp0_iter36_reg <= lshr_ln_reg_1170_pp0_iter35_reg;
        lshr_ln_reg_1170_pp0_iter37_reg <= lshr_ln_reg_1170_pp0_iter36_reg;
        lshr_ln_reg_1170_pp0_iter38_reg <= lshr_ln_reg_1170_pp0_iter37_reg;
        lshr_ln_reg_1170_pp0_iter39_reg <= lshr_ln_reg_1170_pp0_iter38_reg;
        lshr_ln_reg_1170_pp0_iter3_reg <= lshr_ln_reg_1170_pp0_iter2_reg;
        lshr_ln_reg_1170_pp0_iter40_reg <= lshr_ln_reg_1170_pp0_iter39_reg;
        lshr_ln_reg_1170_pp0_iter41_reg <= lshr_ln_reg_1170_pp0_iter40_reg;
        lshr_ln_reg_1170_pp0_iter42_reg <= lshr_ln_reg_1170_pp0_iter41_reg;
        lshr_ln_reg_1170_pp0_iter43_reg <= lshr_ln_reg_1170_pp0_iter42_reg;
        lshr_ln_reg_1170_pp0_iter44_reg <= lshr_ln_reg_1170_pp0_iter43_reg;
        lshr_ln_reg_1170_pp0_iter45_reg <= lshr_ln_reg_1170_pp0_iter44_reg;
        lshr_ln_reg_1170_pp0_iter46_reg <= lshr_ln_reg_1170_pp0_iter45_reg;
        lshr_ln_reg_1170_pp0_iter47_reg <= lshr_ln_reg_1170_pp0_iter46_reg;
        lshr_ln_reg_1170_pp0_iter48_reg <= lshr_ln_reg_1170_pp0_iter47_reg;
        lshr_ln_reg_1170_pp0_iter49_reg <= lshr_ln_reg_1170_pp0_iter48_reg;
        lshr_ln_reg_1170_pp0_iter4_reg <= lshr_ln_reg_1170_pp0_iter3_reg;
        lshr_ln_reg_1170_pp0_iter50_reg <= lshr_ln_reg_1170_pp0_iter49_reg;
        lshr_ln_reg_1170_pp0_iter51_reg <= lshr_ln_reg_1170_pp0_iter50_reg;
        lshr_ln_reg_1170_pp0_iter52_reg <= lshr_ln_reg_1170_pp0_iter51_reg;
        lshr_ln_reg_1170_pp0_iter53_reg <= lshr_ln_reg_1170_pp0_iter52_reg;
        lshr_ln_reg_1170_pp0_iter54_reg <= lshr_ln_reg_1170_pp0_iter53_reg;
        lshr_ln_reg_1170_pp0_iter55_reg <= lshr_ln_reg_1170_pp0_iter54_reg;
        lshr_ln_reg_1170_pp0_iter56_reg <= lshr_ln_reg_1170_pp0_iter55_reg;
        lshr_ln_reg_1170_pp0_iter57_reg <= lshr_ln_reg_1170_pp0_iter56_reg;
        lshr_ln_reg_1170_pp0_iter58_reg <= lshr_ln_reg_1170_pp0_iter57_reg;
        lshr_ln_reg_1170_pp0_iter59_reg <= lshr_ln_reg_1170_pp0_iter58_reg;
        lshr_ln_reg_1170_pp0_iter5_reg <= lshr_ln_reg_1170_pp0_iter4_reg;
        lshr_ln_reg_1170_pp0_iter60_reg <= lshr_ln_reg_1170_pp0_iter59_reg;
        lshr_ln_reg_1170_pp0_iter61_reg <= lshr_ln_reg_1170_pp0_iter60_reg;
        lshr_ln_reg_1170_pp0_iter62_reg <= lshr_ln_reg_1170_pp0_iter61_reg;
        lshr_ln_reg_1170_pp0_iter63_reg <= lshr_ln_reg_1170_pp0_iter62_reg;
        lshr_ln_reg_1170_pp0_iter64_reg <= lshr_ln_reg_1170_pp0_iter63_reg;
        lshr_ln_reg_1170_pp0_iter65_reg <= lshr_ln_reg_1170_pp0_iter64_reg;
        lshr_ln_reg_1170_pp0_iter66_reg <= lshr_ln_reg_1170_pp0_iter65_reg;
        lshr_ln_reg_1170_pp0_iter67_reg <= lshr_ln_reg_1170_pp0_iter66_reg;
        lshr_ln_reg_1170_pp0_iter68_reg <= lshr_ln_reg_1170_pp0_iter67_reg;
        lshr_ln_reg_1170_pp0_iter69_reg <= lshr_ln_reg_1170_pp0_iter68_reg;
        lshr_ln_reg_1170_pp0_iter6_reg <= lshr_ln_reg_1170_pp0_iter5_reg;
        lshr_ln_reg_1170_pp0_iter70_reg <= lshr_ln_reg_1170_pp0_iter69_reg;
        lshr_ln_reg_1170_pp0_iter71_reg <= lshr_ln_reg_1170_pp0_iter70_reg;
        lshr_ln_reg_1170_pp0_iter72_reg <= lshr_ln_reg_1170_pp0_iter71_reg;
        lshr_ln_reg_1170_pp0_iter73_reg <= lshr_ln_reg_1170_pp0_iter72_reg;
        lshr_ln_reg_1170_pp0_iter74_reg <= lshr_ln_reg_1170_pp0_iter73_reg;
        lshr_ln_reg_1170_pp0_iter75_reg <= lshr_ln_reg_1170_pp0_iter74_reg;
        lshr_ln_reg_1170_pp0_iter7_reg <= lshr_ln_reg_1170_pp0_iter6_reg;
        lshr_ln_reg_1170_pp0_iter8_reg <= lshr_ln_reg_1170_pp0_iter7_reg;
        lshr_ln_reg_1170_pp0_iter9_reg <= lshr_ln_reg_1170_pp0_iter8_reg;
        mem_addr_read_reg_1226 <= m_axi_mem_RDATA;
        select_ln57_1_reg_1136_pp0_iter10_reg <= select_ln57_1_reg_1136_pp0_iter9_reg;
        select_ln57_1_reg_1136_pp0_iter11_reg <= select_ln57_1_reg_1136_pp0_iter10_reg;
        select_ln57_1_reg_1136_pp0_iter12_reg <= select_ln57_1_reg_1136_pp0_iter11_reg;
        select_ln57_1_reg_1136_pp0_iter13_reg <= select_ln57_1_reg_1136_pp0_iter12_reg;
        select_ln57_1_reg_1136_pp0_iter14_reg <= select_ln57_1_reg_1136_pp0_iter13_reg;
        select_ln57_1_reg_1136_pp0_iter15_reg <= select_ln57_1_reg_1136_pp0_iter14_reg;
        select_ln57_1_reg_1136_pp0_iter16_reg <= select_ln57_1_reg_1136_pp0_iter15_reg;
        select_ln57_1_reg_1136_pp0_iter17_reg <= select_ln57_1_reg_1136_pp0_iter16_reg;
        select_ln57_1_reg_1136_pp0_iter18_reg <= select_ln57_1_reg_1136_pp0_iter17_reg;
        select_ln57_1_reg_1136_pp0_iter19_reg <= select_ln57_1_reg_1136_pp0_iter18_reg;
        select_ln57_1_reg_1136_pp0_iter20_reg <= select_ln57_1_reg_1136_pp0_iter19_reg;
        select_ln57_1_reg_1136_pp0_iter21_reg <= select_ln57_1_reg_1136_pp0_iter20_reg;
        select_ln57_1_reg_1136_pp0_iter22_reg <= select_ln57_1_reg_1136_pp0_iter21_reg;
        select_ln57_1_reg_1136_pp0_iter23_reg <= select_ln57_1_reg_1136_pp0_iter22_reg;
        select_ln57_1_reg_1136_pp0_iter24_reg <= select_ln57_1_reg_1136_pp0_iter23_reg;
        select_ln57_1_reg_1136_pp0_iter25_reg <= select_ln57_1_reg_1136_pp0_iter24_reg;
        select_ln57_1_reg_1136_pp0_iter26_reg <= select_ln57_1_reg_1136_pp0_iter25_reg;
        select_ln57_1_reg_1136_pp0_iter27_reg <= select_ln57_1_reg_1136_pp0_iter26_reg;
        select_ln57_1_reg_1136_pp0_iter28_reg <= select_ln57_1_reg_1136_pp0_iter27_reg;
        select_ln57_1_reg_1136_pp0_iter29_reg <= select_ln57_1_reg_1136_pp0_iter28_reg;
        select_ln57_1_reg_1136_pp0_iter2_reg <= select_ln57_1_reg_1136;
        select_ln57_1_reg_1136_pp0_iter30_reg <= select_ln57_1_reg_1136_pp0_iter29_reg;
        select_ln57_1_reg_1136_pp0_iter31_reg <= select_ln57_1_reg_1136_pp0_iter30_reg;
        select_ln57_1_reg_1136_pp0_iter32_reg <= select_ln57_1_reg_1136_pp0_iter31_reg;
        select_ln57_1_reg_1136_pp0_iter33_reg <= select_ln57_1_reg_1136_pp0_iter32_reg;
        select_ln57_1_reg_1136_pp0_iter34_reg <= select_ln57_1_reg_1136_pp0_iter33_reg;
        select_ln57_1_reg_1136_pp0_iter35_reg <= select_ln57_1_reg_1136_pp0_iter34_reg;
        select_ln57_1_reg_1136_pp0_iter36_reg <= select_ln57_1_reg_1136_pp0_iter35_reg;
        select_ln57_1_reg_1136_pp0_iter37_reg <= select_ln57_1_reg_1136_pp0_iter36_reg;
        select_ln57_1_reg_1136_pp0_iter38_reg <= select_ln57_1_reg_1136_pp0_iter37_reg;
        select_ln57_1_reg_1136_pp0_iter39_reg <= select_ln57_1_reg_1136_pp0_iter38_reg;
        select_ln57_1_reg_1136_pp0_iter3_reg <= select_ln57_1_reg_1136_pp0_iter2_reg;
        select_ln57_1_reg_1136_pp0_iter40_reg <= select_ln57_1_reg_1136_pp0_iter39_reg;
        select_ln57_1_reg_1136_pp0_iter41_reg <= select_ln57_1_reg_1136_pp0_iter40_reg;
        select_ln57_1_reg_1136_pp0_iter42_reg <= select_ln57_1_reg_1136_pp0_iter41_reg;
        select_ln57_1_reg_1136_pp0_iter43_reg <= select_ln57_1_reg_1136_pp0_iter42_reg;
        select_ln57_1_reg_1136_pp0_iter44_reg <= select_ln57_1_reg_1136_pp0_iter43_reg;
        select_ln57_1_reg_1136_pp0_iter45_reg <= select_ln57_1_reg_1136_pp0_iter44_reg;
        select_ln57_1_reg_1136_pp0_iter46_reg <= select_ln57_1_reg_1136_pp0_iter45_reg;
        select_ln57_1_reg_1136_pp0_iter47_reg <= select_ln57_1_reg_1136_pp0_iter46_reg;
        select_ln57_1_reg_1136_pp0_iter48_reg <= select_ln57_1_reg_1136_pp0_iter47_reg;
        select_ln57_1_reg_1136_pp0_iter49_reg <= select_ln57_1_reg_1136_pp0_iter48_reg;
        select_ln57_1_reg_1136_pp0_iter4_reg <= select_ln57_1_reg_1136_pp0_iter3_reg;
        select_ln57_1_reg_1136_pp0_iter50_reg <= select_ln57_1_reg_1136_pp0_iter49_reg;
        select_ln57_1_reg_1136_pp0_iter51_reg <= select_ln57_1_reg_1136_pp0_iter50_reg;
        select_ln57_1_reg_1136_pp0_iter52_reg <= select_ln57_1_reg_1136_pp0_iter51_reg;
        select_ln57_1_reg_1136_pp0_iter53_reg <= select_ln57_1_reg_1136_pp0_iter52_reg;
        select_ln57_1_reg_1136_pp0_iter54_reg <= select_ln57_1_reg_1136_pp0_iter53_reg;
        select_ln57_1_reg_1136_pp0_iter55_reg <= select_ln57_1_reg_1136_pp0_iter54_reg;
        select_ln57_1_reg_1136_pp0_iter56_reg <= select_ln57_1_reg_1136_pp0_iter55_reg;
        select_ln57_1_reg_1136_pp0_iter57_reg <= select_ln57_1_reg_1136_pp0_iter56_reg;
        select_ln57_1_reg_1136_pp0_iter58_reg <= select_ln57_1_reg_1136_pp0_iter57_reg;
        select_ln57_1_reg_1136_pp0_iter59_reg <= select_ln57_1_reg_1136_pp0_iter58_reg;
        select_ln57_1_reg_1136_pp0_iter5_reg <= select_ln57_1_reg_1136_pp0_iter4_reg;
        select_ln57_1_reg_1136_pp0_iter60_reg <= select_ln57_1_reg_1136_pp0_iter59_reg;
        select_ln57_1_reg_1136_pp0_iter61_reg <= select_ln57_1_reg_1136_pp0_iter60_reg;
        select_ln57_1_reg_1136_pp0_iter62_reg <= select_ln57_1_reg_1136_pp0_iter61_reg;
        select_ln57_1_reg_1136_pp0_iter63_reg <= select_ln57_1_reg_1136_pp0_iter62_reg;
        select_ln57_1_reg_1136_pp0_iter64_reg <= select_ln57_1_reg_1136_pp0_iter63_reg;
        select_ln57_1_reg_1136_pp0_iter65_reg <= select_ln57_1_reg_1136_pp0_iter64_reg;
        select_ln57_1_reg_1136_pp0_iter66_reg <= select_ln57_1_reg_1136_pp0_iter65_reg;
        select_ln57_1_reg_1136_pp0_iter67_reg <= select_ln57_1_reg_1136_pp0_iter66_reg;
        select_ln57_1_reg_1136_pp0_iter68_reg <= select_ln57_1_reg_1136_pp0_iter67_reg;
        select_ln57_1_reg_1136_pp0_iter69_reg <= select_ln57_1_reg_1136_pp0_iter68_reg;
        select_ln57_1_reg_1136_pp0_iter6_reg <= select_ln57_1_reg_1136_pp0_iter5_reg;
        select_ln57_1_reg_1136_pp0_iter70_reg <= select_ln57_1_reg_1136_pp0_iter69_reg;
        select_ln57_1_reg_1136_pp0_iter7_reg <= select_ln57_1_reg_1136_pp0_iter6_reg;
        select_ln57_1_reg_1136_pp0_iter8_reg <= select_ln57_1_reg_1136_pp0_iter7_reg;
        select_ln57_1_reg_1136_pp0_iter9_reg <= select_ln57_1_reg_1136_pp0_iter8_reg;
        select_ln59_1_reg_1161_pp0_iter10_reg <= select_ln59_1_reg_1161_pp0_iter9_reg;
        select_ln59_1_reg_1161_pp0_iter11_reg <= select_ln59_1_reg_1161_pp0_iter10_reg;
        select_ln59_1_reg_1161_pp0_iter12_reg <= select_ln59_1_reg_1161_pp0_iter11_reg;
        select_ln59_1_reg_1161_pp0_iter13_reg <= select_ln59_1_reg_1161_pp0_iter12_reg;
        select_ln59_1_reg_1161_pp0_iter14_reg <= select_ln59_1_reg_1161_pp0_iter13_reg;
        select_ln59_1_reg_1161_pp0_iter15_reg <= select_ln59_1_reg_1161_pp0_iter14_reg;
        select_ln59_1_reg_1161_pp0_iter16_reg <= select_ln59_1_reg_1161_pp0_iter15_reg;
        select_ln59_1_reg_1161_pp0_iter17_reg <= select_ln59_1_reg_1161_pp0_iter16_reg;
        select_ln59_1_reg_1161_pp0_iter18_reg <= select_ln59_1_reg_1161_pp0_iter17_reg;
        select_ln59_1_reg_1161_pp0_iter19_reg <= select_ln59_1_reg_1161_pp0_iter18_reg;
        select_ln59_1_reg_1161_pp0_iter20_reg <= select_ln59_1_reg_1161_pp0_iter19_reg;
        select_ln59_1_reg_1161_pp0_iter21_reg <= select_ln59_1_reg_1161_pp0_iter20_reg;
        select_ln59_1_reg_1161_pp0_iter22_reg <= select_ln59_1_reg_1161_pp0_iter21_reg;
        select_ln59_1_reg_1161_pp0_iter23_reg <= select_ln59_1_reg_1161_pp0_iter22_reg;
        select_ln59_1_reg_1161_pp0_iter24_reg <= select_ln59_1_reg_1161_pp0_iter23_reg;
        select_ln59_1_reg_1161_pp0_iter25_reg <= select_ln59_1_reg_1161_pp0_iter24_reg;
        select_ln59_1_reg_1161_pp0_iter26_reg <= select_ln59_1_reg_1161_pp0_iter25_reg;
        select_ln59_1_reg_1161_pp0_iter27_reg <= select_ln59_1_reg_1161_pp0_iter26_reg;
        select_ln59_1_reg_1161_pp0_iter28_reg <= select_ln59_1_reg_1161_pp0_iter27_reg;
        select_ln59_1_reg_1161_pp0_iter29_reg <= select_ln59_1_reg_1161_pp0_iter28_reg;
        select_ln59_1_reg_1161_pp0_iter2_reg <= select_ln59_1_reg_1161;
        select_ln59_1_reg_1161_pp0_iter30_reg <= select_ln59_1_reg_1161_pp0_iter29_reg;
        select_ln59_1_reg_1161_pp0_iter31_reg <= select_ln59_1_reg_1161_pp0_iter30_reg;
        select_ln59_1_reg_1161_pp0_iter32_reg <= select_ln59_1_reg_1161_pp0_iter31_reg;
        select_ln59_1_reg_1161_pp0_iter33_reg <= select_ln59_1_reg_1161_pp0_iter32_reg;
        select_ln59_1_reg_1161_pp0_iter34_reg <= select_ln59_1_reg_1161_pp0_iter33_reg;
        select_ln59_1_reg_1161_pp0_iter35_reg <= select_ln59_1_reg_1161_pp0_iter34_reg;
        select_ln59_1_reg_1161_pp0_iter36_reg <= select_ln59_1_reg_1161_pp0_iter35_reg;
        select_ln59_1_reg_1161_pp0_iter37_reg <= select_ln59_1_reg_1161_pp0_iter36_reg;
        select_ln59_1_reg_1161_pp0_iter38_reg <= select_ln59_1_reg_1161_pp0_iter37_reg;
        select_ln59_1_reg_1161_pp0_iter39_reg <= select_ln59_1_reg_1161_pp0_iter38_reg;
        select_ln59_1_reg_1161_pp0_iter3_reg <= select_ln59_1_reg_1161_pp0_iter2_reg;
        select_ln59_1_reg_1161_pp0_iter40_reg <= select_ln59_1_reg_1161_pp0_iter39_reg;
        select_ln59_1_reg_1161_pp0_iter41_reg <= select_ln59_1_reg_1161_pp0_iter40_reg;
        select_ln59_1_reg_1161_pp0_iter42_reg <= select_ln59_1_reg_1161_pp0_iter41_reg;
        select_ln59_1_reg_1161_pp0_iter43_reg <= select_ln59_1_reg_1161_pp0_iter42_reg;
        select_ln59_1_reg_1161_pp0_iter44_reg <= select_ln59_1_reg_1161_pp0_iter43_reg;
        select_ln59_1_reg_1161_pp0_iter45_reg <= select_ln59_1_reg_1161_pp0_iter44_reg;
        select_ln59_1_reg_1161_pp0_iter46_reg <= select_ln59_1_reg_1161_pp0_iter45_reg;
        select_ln59_1_reg_1161_pp0_iter47_reg <= select_ln59_1_reg_1161_pp0_iter46_reg;
        select_ln59_1_reg_1161_pp0_iter48_reg <= select_ln59_1_reg_1161_pp0_iter47_reg;
        select_ln59_1_reg_1161_pp0_iter49_reg <= select_ln59_1_reg_1161_pp0_iter48_reg;
        select_ln59_1_reg_1161_pp0_iter4_reg <= select_ln59_1_reg_1161_pp0_iter3_reg;
        select_ln59_1_reg_1161_pp0_iter50_reg <= select_ln59_1_reg_1161_pp0_iter49_reg;
        select_ln59_1_reg_1161_pp0_iter51_reg <= select_ln59_1_reg_1161_pp0_iter50_reg;
        select_ln59_1_reg_1161_pp0_iter52_reg <= select_ln59_1_reg_1161_pp0_iter51_reg;
        select_ln59_1_reg_1161_pp0_iter53_reg <= select_ln59_1_reg_1161_pp0_iter52_reg;
        select_ln59_1_reg_1161_pp0_iter54_reg <= select_ln59_1_reg_1161_pp0_iter53_reg;
        select_ln59_1_reg_1161_pp0_iter55_reg <= select_ln59_1_reg_1161_pp0_iter54_reg;
        select_ln59_1_reg_1161_pp0_iter56_reg <= select_ln59_1_reg_1161_pp0_iter55_reg;
        select_ln59_1_reg_1161_pp0_iter57_reg <= select_ln59_1_reg_1161_pp0_iter56_reg;
        select_ln59_1_reg_1161_pp0_iter58_reg <= select_ln59_1_reg_1161_pp0_iter57_reg;
        select_ln59_1_reg_1161_pp0_iter59_reg <= select_ln59_1_reg_1161_pp0_iter58_reg;
        select_ln59_1_reg_1161_pp0_iter5_reg <= select_ln59_1_reg_1161_pp0_iter4_reg;
        select_ln59_1_reg_1161_pp0_iter60_reg <= select_ln59_1_reg_1161_pp0_iter59_reg;
        select_ln59_1_reg_1161_pp0_iter61_reg <= select_ln59_1_reg_1161_pp0_iter60_reg;
        select_ln59_1_reg_1161_pp0_iter62_reg <= select_ln59_1_reg_1161_pp0_iter61_reg;
        select_ln59_1_reg_1161_pp0_iter63_reg <= select_ln59_1_reg_1161_pp0_iter62_reg;
        select_ln59_1_reg_1161_pp0_iter64_reg <= select_ln59_1_reg_1161_pp0_iter63_reg;
        select_ln59_1_reg_1161_pp0_iter65_reg <= select_ln59_1_reg_1161_pp0_iter64_reg;
        select_ln59_1_reg_1161_pp0_iter66_reg <= select_ln59_1_reg_1161_pp0_iter65_reg;
        select_ln59_1_reg_1161_pp0_iter67_reg <= select_ln59_1_reg_1161_pp0_iter66_reg;
        select_ln59_1_reg_1161_pp0_iter68_reg <= select_ln59_1_reg_1161_pp0_iter67_reg;
        select_ln59_1_reg_1161_pp0_iter69_reg <= select_ln59_1_reg_1161_pp0_iter68_reg;
        select_ln59_1_reg_1161_pp0_iter6_reg <= select_ln59_1_reg_1161_pp0_iter5_reg;
        select_ln59_1_reg_1161_pp0_iter70_reg <= select_ln59_1_reg_1161_pp0_iter69_reg;
        select_ln59_1_reg_1161_pp0_iter71_reg <= select_ln59_1_reg_1161_pp0_iter70_reg;
        select_ln59_1_reg_1161_pp0_iter72_reg <= select_ln59_1_reg_1161_pp0_iter71_reg;
        select_ln59_1_reg_1161_pp0_iter7_reg <= select_ln59_1_reg_1161_pp0_iter6_reg;
        select_ln59_1_reg_1161_pp0_iter8_reg <= select_ln59_1_reg_1161_pp0_iter7_reg;
        select_ln59_1_reg_1161_pp0_iter9_reg <= select_ln59_1_reg_1161_pp0_iter8_reg;
        trunc_ln63_1_reg_1231 <= trunc_ln63_1_fu_996_p1;
        trunc_ln63_3_reg_1190 <= {{add_ln63_2_fu_906_p2[63:7]}};
        trunc_ln63_reg_1185 <= trunc_ln63_fu_903_p1;
        trunc_ln63_reg_1185_pp0_iter10_reg <= trunc_ln63_reg_1185_pp0_iter9_reg;
        trunc_ln63_reg_1185_pp0_iter11_reg <= trunc_ln63_reg_1185_pp0_iter10_reg;
        trunc_ln63_reg_1185_pp0_iter12_reg <= trunc_ln63_reg_1185_pp0_iter11_reg;
        trunc_ln63_reg_1185_pp0_iter13_reg <= trunc_ln63_reg_1185_pp0_iter12_reg;
        trunc_ln63_reg_1185_pp0_iter14_reg <= trunc_ln63_reg_1185_pp0_iter13_reg;
        trunc_ln63_reg_1185_pp0_iter15_reg <= trunc_ln63_reg_1185_pp0_iter14_reg;
        trunc_ln63_reg_1185_pp0_iter16_reg <= trunc_ln63_reg_1185_pp0_iter15_reg;
        trunc_ln63_reg_1185_pp0_iter17_reg <= trunc_ln63_reg_1185_pp0_iter16_reg;
        trunc_ln63_reg_1185_pp0_iter18_reg <= trunc_ln63_reg_1185_pp0_iter17_reg;
        trunc_ln63_reg_1185_pp0_iter19_reg <= trunc_ln63_reg_1185_pp0_iter18_reg;
        trunc_ln63_reg_1185_pp0_iter20_reg <= trunc_ln63_reg_1185_pp0_iter19_reg;
        trunc_ln63_reg_1185_pp0_iter21_reg <= trunc_ln63_reg_1185_pp0_iter20_reg;
        trunc_ln63_reg_1185_pp0_iter22_reg <= trunc_ln63_reg_1185_pp0_iter21_reg;
        trunc_ln63_reg_1185_pp0_iter23_reg <= trunc_ln63_reg_1185_pp0_iter22_reg;
        trunc_ln63_reg_1185_pp0_iter24_reg <= trunc_ln63_reg_1185_pp0_iter23_reg;
        trunc_ln63_reg_1185_pp0_iter25_reg <= trunc_ln63_reg_1185_pp0_iter24_reg;
        trunc_ln63_reg_1185_pp0_iter26_reg <= trunc_ln63_reg_1185_pp0_iter25_reg;
        trunc_ln63_reg_1185_pp0_iter27_reg <= trunc_ln63_reg_1185_pp0_iter26_reg;
        trunc_ln63_reg_1185_pp0_iter28_reg <= trunc_ln63_reg_1185_pp0_iter27_reg;
        trunc_ln63_reg_1185_pp0_iter29_reg <= trunc_ln63_reg_1185_pp0_iter28_reg;
        trunc_ln63_reg_1185_pp0_iter30_reg <= trunc_ln63_reg_1185_pp0_iter29_reg;
        trunc_ln63_reg_1185_pp0_iter31_reg <= trunc_ln63_reg_1185_pp0_iter30_reg;
        trunc_ln63_reg_1185_pp0_iter32_reg <= trunc_ln63_reg_1185_pp0_iter31_reg;
        trunc_ln63_reg_1185_pp0_iter33_reg <= trunc_ln63_reg_1185_pp0_iter32_reg;
        trunc_ln63_reg_1185_pp0_iter34_reg <= trunc_ln63_reg_1185_pp0_iter33_reg;
        trunc_ln63_reg_1185_pp0_iter35_reg <= trunc_ln63_reg_1185_pp0_iter34_reg;
        trunc_ln63_reg_1185_pp0_iter36_reg <= trunc_ln63_reg_1185_pp0_iter35_reg;
        trunc_ln63_reg_1185_pp0_iter37_reg <= trunc_ln63_reg_1185_pp0_iter36_reg;
        trunc_ln63_reg_1185_pp0_iter38_reg <= trunc_ln63_reg_1185_pp0_iter37_reg;
        trunc_ln63_reg_1185_pp0_iter39_reg <= trunc_ln63_reg_1185_pp0_iter38_reg;
        trunc_ln63_reg_1185_pp0_iter40_reg <= trunc_ln63_reg_1185_pp0_iter39_reg;
        trunc_ln63_reg_1185_pp0_iter41_reg <= trunc_ln63_reg_1185_pp0_iter40_reg;
        trunc_ln63_reg_1185_pp0_iter42_reg <= trunc_ln63_reg_1185_pp0_iter41_reg;
        trunc_ln63_reg_1185_pp0_iter43_reg <= trunc_ln63_reg_1185_pp0_iter42_reg;
        trunc_ln63_reg_1185_pp0_iter44_reg <= trunc_ln63_reg_1185_pp0_iter43_reg;
        trunc_ln63_reg_1185_pp0_iter45_reg <= trunc_ln63_reg_1185_pp0_iter44_reg;
        trunc_ln63_reg_1185_pp0_iter46_reg <= trunc_ln63_reg_1185_pp0_iter45_reg;
        trunc_ln63_reg_1185_pp0_iter47_reg <= trunc_ln63_reg_1185_pp0_iter46_reg;
        trunc_ln63_reg_1185_pp0_iter48_reg <= trunc_ln63_reg_1185_pp0_iter47_reg;
        trunc_ln63_reg_1185_pp0_iter49_reg <= trunc_ln63_reg_1185_pp0_iter48_reg;
        trunc_ln63_reg_1185_pp0_iter50_reg <= trunc_ln63_reg_1185_pp0_iter49_reg;
        trunc_ln63_reg_1185_pp0_iter51_reg <= trunc_ln63_reg_1185_pp0_iter50_reg;
        trunc_ln63_reg_1185_pp0_iter52_reg <= trunc_ln63_reg_1185_pp0_iter51_reg;
        trunc_ln63_reg_1185_pp0_iter53_reg <= trunc_ln63_reg_1185_pp0_iter52_reg;
        trunc_ln63_reg_1185_pp0_iter54_reg <= trunc_ln63_reg_1185_pp0_iter53_reg;
        trunc_ln63_reg_1185_pp0_iter55_reg <= trunc_ln63_reg_1185_pp0_iter54_reg;
        trunc_ln63_reg_1185_pp0_iter56_reg <= trunc_ln63_reg_1185_pp0_iter55_reg;
        trunc_ln63_reg_1185_pp0_iter57_reg <= trunc_ln63_reg_1185_pp0_iter56_reg;
        trunc_ln63_reg_1185_pp0_iter58_reg <= trunc_ln63_reg_1185_pp0_iter57_reg;
        trunc_ln63_reg_1185_pp0_iter59_reg <= trunc_ln63_reg_1185_pp0_iter58_reg;
        trunc_ln63_reg_1185_pp0_iter5_reg <= trunc_ln63_reg_1185;
        trunc_ln63_reg_1185_pp0_iter60_reg <= trunc_ln63_reg_1185_pp0_iter59_reg;
        trunc_ln63_reg_1185_pp0_iter61_reg <= trunc_ln63_reg_1185_pp0_iter60_reg;
        trunc_ln63_reg_1185_pp0_iter62_reg <= trunc_ln63_reg_1185_pp0_iter61_reg;
        trunc_ln63_reg_1185_pp0_iter63_reg <= trunc_ln63_reg_1185_pp0_iter62_reg;
        trunc_ln63_reg_1185_pp0_iter64_reg <= trunc_ln63_reg_1185_pp0_iter63_reg;
        trunc_ln63_reg_1185_pp0_iter65_reg <= trunc_ln63_reg_1185_pp0_iter64_reg;
        trunc_ln63_reg_1185_pp0_iter66_reg <= trunc_ln63_reg_1185_pp0_iter65_reg;
        trunc_ln63_reg_1185_pp0_iter67_reg <= trunc_ln63_reg_1185_pp0_iter66_reg;
        trunc_ln63_reg_1185_pp0_iter68_reg <= trunc_ln63_reg_1185_pp0_iter67_reg;
        trunc_ln63_reg_1185_pp0_iter69_reg <= trunc_ln63_reg_1185_pp0_iter68_reg;
        trunc_ln63_reg_1185_pp0_iter6_reg <= trunc_ln63_reg_1185_pp0_iter5_reg;
        trunc_ln63_reg_1185_pp0_iter70_reg <= trunc_ln63_reg_1185_pp0_iter69_reg;
        trunc_ln63_reg_1185_pp0_iter71_reg <= trunc_ln63_reg_1185_pp0_iter70_reg;
        trunc_ln63_reg_1185_pp0_iter72_reg <= trunc_ln63_reg_1185_pp0_iter71_reg;
        trunc_ln63_reg_1185_pp0_iter73_reg <= trunc_ln63_reg_1185_pp0_iter72_reg;
        trunc_ln63_reg_1185_pp0_iter74_reg <= trunc_ln63_reg_1185_pp0_iter73_reg;
        trunc_ln63_reg_1185_pp0_iter75_reg <= trunc_ln63_reg_1185_pp0_iter74_reg;
        trunc_ln63_reg_1185_pp0_iter7_reg <= trunc_ln63_reg_1185_pp0_iter6_reg;
        trunc_ln63_reg_1185_pp0_iter8_reg <= trunc_ln63_reg_1185_pp0_iter7_reg;
        trunc_ln63_reg_1185_pp0_iter9_reg <= trunc_ln63_reg_1185_pp0_iter8_reg;
        trunc_ln67_1_reg_1166_pp0_iter10_reg <= trunc_ln67_1_reg_1166_pp0_iter9_reg;
        trunc_ln67_1_reg_1166_pp0_iter11_reg <= trunc_ln67_1_reg_1166_pp0_iter10_reg;
        trunc_ln67_1_reg_1166_pp0_iter12_reg <= trunc_ln67_1_reg_1166_pp0_iter11_reg;
        trunc_ln67_1_reg_1166_pp0_iter13_reg <= trunc_ln67_1_reg_1166_pp0_iter12_reg;
        trunc_ln67_1_reg_1166_pp0_iter14_reg <= trunc_ln67_1_reg_1166_pp0_iter13_reg;
        trunc_ln67_1_reg_1166_pp0_iter15_reg <= trunc_ln67_1_reg_1166_pp0_iter14_reg;
        trunc_ln67_1_reg_1166_pp0_iter16_reg <= trunc_ln67_1_reg_1166_pp0_iter15_reg;
        trunc_ln67_1_reg_1166_pp0_iter17_reg <= trunc_ln67_1_reg_1166_pp0_iter16_reg;
        trunc_ln67_1_reg_1166_pp0_iter18_reg <= trunc_ln67_1_reg_1166_pp0_iter17_reg;
        trunc_ln67_1_reg_1166_pp0_iter19_reg <= trunc_ln67_1_reg_1166_pp0_iter18_reg;
        trunc_ln67_1_reg_1166_pp0_iter20_reg <= trunc_ln67_1_reg_1166_pp0_iter19_reg;
        trunc_ln67_1_reg_1166_pp0_iter21_reg <= trunc_ln67_1_reg_1166_pp0_iter20_reg;
        trunc_ln67_1_reg_1166_pp0_iter22_reg <= trunc_ln67_1_reg_1166_pp0_iter21_reg;
        trunc_ln67_1_reg_1166_pp0_iter23_reg <= trunc_ln67_1_reg_1166_pp0_iter22_reg;
        trunc_ln67_1_reg_1166_pp0_iter24_reg <= trunc_ln67_1_reg_1166_pp0_iter23_reg;
        trunc_ln67_1_reg_1166_pp0_iter25_reg <= trunc_ln67_1_reg_1166_pp0_iter24_reg;
        trunc_ln67_1_reg_1166_pp0_iter26_reg <= trunc_ln67_1_reg_1166_pp0_iter25_reg;
        trunc_ln67_1_reg_1166_pp0_iter27_reg <= trunc_ln67_1_reg_1166_pp0_iter26_reg;
        trunc_ln67_1_reg_1166_pp0_iter28_reg <= trunc_ln67_1_reg_1166_pp0_iter27_reg;
        trunc_ln67_1_reg_1166_pp0_iter29_reg <= trunc_ln67_1_reg_1166_pp0_iter28_reg;
        trunc_ln67_1_reg_1166_pp0_iter2_reg <= trunc_ln67_1_reg_1166;
        trunc_ln67_1_reg_1166_pp0_iter30_reg <= trunc_ln67_1_reg_1166_pp0_iter29_reg;
        trunc_ln67_1_reg_1166_pp0_iter31_reg <= trunc_ln67_1_reg_1166_pp0_iter30_reg;
        trunc_ln67_1_reg_1166_pp0_iter32_reg <= trunc_ln67_1_reg_1166_pp0_iter31_reg;
        trunc_ln67_1_reg_1166_pp0_iter33_reg <= trunc_ln67_1_reg_1166_pp0_iter32_reg;
        trunc_ln67_1_reg_1166_pp0_iter34_reg <= trunc_ln67_1_reg_1166_pp0_iter33_reg;
        trunc_ln67_1_reg_1166_pp0_iter35_reg <= trunc_ln67_1_reg_1166_pp0_iter34_reg;
        trunc_ln67_1_reg_1166_pp0_iter36_reg <= trunc_ln67_1_reg_1166_pp0_iter35_reg;
        trunc_ln67_1_reg_1166_pp0_iter37_reg <= trunc_ln67_1_reg_1166_pp0_iter36_reg;
        trunc_ln67_1_reg_1166_pp0_iter38_reg <= trunc_ln67_1_reg_1166_pp0_iter37_reg;
        trunc_ln67_1_reg_1166_pp0_iter39_reg <= trunc_ln67_1_reg_1166_pp0_iter38_reg;
        trunc_ln67_1_reg_1166_pp0_iter3_reg <= trunc_ln67_1_reg_1166_pp0_iter2_reg;
        trunc_ln67_1_reg_1166_pp0_iter40_reg <= trunc_ln67_1_reg_1166_pp0_iter39_reg;
        trunc_ln67_1_reg_1166_pp0_iter41_reg <= trunc_ln67_1_reg_1166_pp0_iter40_reg;
        trunc_ln67_1_reg_1166_pp0_iter42_reg <= trunc_ln67_1_reg_1166_pp0_iter41_reg;
        trunc_ln67_1_reg_1166_pp0_iter43_reg <= trunc_ln67_1_reg_1166_pp0_iter42_reg;
        trunc_ln67_1_reg_1166_pp0_iter44_reg <= trunc_ln67_1_reg_1166_pp0_iter43_reg;
        trunc_ln67_1_reg_1166_pp0_iter45_reg <= trunc_ln67_1_reg_1166_pp0_iter44_reg;
        trunc_ln67_1_reg_1166_pp0_iter46_reg <= trunc_ln67_1_reg_1166_pp0_iter45_reg;
        trunc_ln67_1_reg_1166_pp0_iter47_reg <= trunc_ln67_1_reg_1166_pp0_iter46_reg;
        trunc_ln67_1_reg_1166_pp0_iter48_reg <= trunc_ln67_1_reg_1166_pp0_iter47_reg;
        trunc_ln67_1_reg_1166_pp0_iter49_reg <= trunc_ln67_1_reg_1166_pp0_iter48_reg;
        trunc_ln67_1_reg_1166_pp0_iter4_reg <= trunc_ln67_1_reg_1166_pp0_iter3_reg;
        trunc_ln67_1_reg_1166_pp0_iter50_reg <= trunc_ln67_1_reg_1166_pp0_iter49_reg;
        trunc_ln67_1_reg_1166_pp0_iter51_reg <= trunc_ln67_1_reg_1166_pp0_iter50_reg;
        trunc_ln67_1_reg_1166_pp0_iter52_reg <= trunc_ln67_1_reg_1166_pp0_iter51_reg;
        trunc_ln67_1_reg_1166_pp0_iter53_reg <= trunc_ln67_1_reg_1166_pp0_iter52_reg;
        trunc_ln67_1_reg_1166_pp0_iter54_reg <= trunc_ln67_1_reg_1166_pp0_iter53_reg;
        trunc_ln67_1_reg_1166_pp0_iter55_reg <= trunc_ln67_1_reg_1166_pp0_iter54_reg;
        trunc_ln67_1_reg_1166_pp0_iter56_reg <= trunc_ln67_1_reg_1166_pp0_iter55_reg;
        trunc_ln67_1_reg_1166_pp0_iter57_reg <= trunc_ln67_1_reg_1166_pp0_iter56_reg;
        trunc_ln67_1_reg_1166_pp0_iter58_reg <= trunc_ln67_1_reg_1166_pp0_iter57_reg;
        trunc_ln67_1_reg_1166_pp0_iter59_reg <= trunc_ln67_1_reg_1166_pp0_iter58_reg;
        trunc_ln67_1_reg_1166_pp0_iter5_reg <= trunc_ln67_1_reg_1166_pp0_iter4_reg;
        trunc_ln67_1_reg_1166_pp0_iter60_reg <= trunc_ln67_1_reg_1166_pp0_iter59_reg;
        trunc_ln67_1_reg_1166_pp0_iter61_reg <= trunc_ln67_1_reg_1166_pp0_iter60_reg;
        trunc_ln67_1_reg_1166_pp0_iter62_reg <= trunc_ln67_1_reg_1166_pp0_iter61_reg;
        trunc_ln67_1_reg_1166_pp0_iter63_reg <= trunc_ln67_1_reg_1166_pp0_iter62_reg;
        trunc_ln67_1_reg_1166_pp0_iter64_reg <= trunc_ln67_1_reg_1166_pp0_iter63_reg;
        trunc_ln67_1_reg_1166_pp0_iter65_reg <= trunc_ln67_1_reg_1166_pp0_iter64_reg;
        trunc_ln67_1_reg_1166_pp0_iter66_reg <= trunc_ln67_1_reg_1166_pp0_iter65_reg;
        trunc_ln67_1_reg_1166_pp0_iter67_reg <= trunc_ln67_1_reg_1166_pp0_iter66_reg;
        trunc_ln67_1_reg_1166_pp0_iter68_reg <= trunc_ln67_1_reg_1166_pp0_iter67_reg;
        trunc_ln67_1_reg_1166_pp0_iter69_reg <= trunc_ln67_1_reg_1166_pp0_iter68_reg;
        trunc_ln67_1_reg_1166_pp0_iter6_reg <= trunc_ln67_1_reg_1166_pp0_iter5_reg;
        trunc_ln67_1_reg_1166_pp0_iter70_reg <= trunc_ln67_1_reg_1166_pp0_iter69_reg;
        trunc_ln67_1_reg_1166_pp0_iter71_reg <= trunc_ln67_1_reg_1166_pp0_iter70_reg;
        trunc_ln67_1_reg_1166_pp0_iter72_reg <= trunc_ln67_1_reg_1166_pp0_iter71_reg;
        trunc_ln67_1_reg_1166_pp0_iter73_reg <= trunc_ln67_1_reg_1166_pp0_iter72_reg;
        trunc_ln67_1_reg_1166_pp0_iter74_reg <= trunc_ln67_1_reg_1166_pp0_iter73_reg;
        trunc_ln67_1_reg_1166_pp0_iter75_reg <= trunc_ln67_1_reg_1166_pp0_iter74_reg;
        trunc_ln67_1_reg_1166_pp0_iter76_reg <= trunc_ln67_1_reg_1166_pp0_iter75_reg;
        trunc_ln67_1_reg_1166_pp0_iter7_reg <= trunc_ln67_1_reg_1166_pp0_iter6_reg;
        trunc_ln67_1_reg_1166_pp0_iter8_reg <= trunc_ln67_1_reg_1166_pp0_iter7_reg;
        trunc_ln67_1_reg_1166_pp0_iter9_reg <= trunc_ln67_1_reg_1166_pp0_iter8_reg;
        trunc_ln67_reg_1221 <= trunc_ln67_fu_940_p1;
        trunc_ln67_reg_1221_pp0_iter75_reg <= trunc_ln67_reg_1221;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter74 == 1'b1))) begin
        add_ln67_reg_1211 <= grp_fu_1057_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        i_4_reg_1122 <= i_fu_200;
        icmp_ln57_reg_1127 <= icmp_ln57_fu_687_p2;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_687_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln57_reg_1127 == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter76_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_0_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd0))) begin
        edge_embedding_weights_V_0_0_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_1_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd1))) begin
        edge_embedding_weights_V_0_1_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_2_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd2))) begin
        edge_embedding_weights_V_0_2_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_3_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd3))) begin
        edge_embedding_weights_V_0_3_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_4_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd4))) begin
        edge_embedding_weights_V_0_4_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_5_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd5))) begin
        edge_embedding_weights_V_0_5_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_6_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd6))) begin
        edge_embedding_weights_V_0_6_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_0_7_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd7))) begin
        edge_embedding_weights_V_0_7_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_0_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd0))) begin
        edge_embedding_weights_V_1_0_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_1_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd1))) begin
        edge_embedding_weights_V_1_1_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_2_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd2))) begin
        edge_embedding_weights_V_1_2_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_3_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd3))) begin
        edge_embedding_weights_V_1_3_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_4_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd4))) begin
        edge_embedding_weights_V_1_4_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_5_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd5))) begin
        edge_embedding_weights_V_1_5_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_6_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd6))) begin
        edge_embedding_weights_V_1_6_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_1_7_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd7))) begin
        edge_embedding_weights_V_1_7_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_0_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd0))) begin
        edge_embedding_weights_V_2_0_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_1_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd1))) begin
        edge_embedding_weights_V_2_1_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_2_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd2))) begin
        edge_embedding_weights_V_2_2_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_3_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd3))) begin
        edge_embedding_weights_V_2_3_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_4_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd4))) begin
        edge_embedding_weights_V_2_4_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_5_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd5))) begin
        edge_embedding_weights_V_2_5_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_6_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd6))) begin
        edge_embedding_weights_V_2_6_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_2_7_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd7))) begin
        edge_embedding_weights_V_2_7_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_0_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd0))) begin
        edge_embedding_weights_V_3_0_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_1_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd1))) begin
        edge_embedding_weights_V_3_1_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_2_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd2))) begin
        edge_embedding_weights_V_3_2_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_3_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd3))) begin
        edge_embedding_weights_V_3_3_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_4_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd4))) begin
        edge_embedding_weights_V_3_4_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_5_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd5))) begin
        edge_embedding_weights_V_3_5_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_6_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd6))) begin
        edge_embedding_weights_V_3_6_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1))) begin
        edge_embedding_weights_V_3_7_ce0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter77 == 1'b1) & (trunc_ln67_1_reg_1166_pp0_iter76_reg == 3'd7))) begin
        edge_embedding_weights_V_3_7_we0 = 1'b1;
    end else begin
        edge_embedding_weights_V_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1047_ce = 1'b1;
    end else begin
        grp_fu_1047_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1057_ce = 1'b1;
    end else begin
        grp_fu_1057_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1067_ce = 1'b1;
    end else begin
        grp_fu_1067_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        m_axi_mem_ARVALID = 1'b1;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter75 == 1'b1))) begin
        m_axi_mem_RREADY = 1'b1;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter75 == 1'b1))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln57_1_fu_693_p2 = (indvar_flatten689_fu_212 + 13'd1);

assign add_ln57_fu_708_p2 = (l_fu_208 + 3'd1);

assign add_ln59_1_fu_809_p2 = (indvar_flatten671_fu_204 + 11'd1);

assign add_ln59_fu_758_p2 = (select_ln57_fu_720_p3 + 4'd1);

assign add_ln61_fu_803_p2 = (select_ln59_fu_770_p3 + 7'd1);

assign add_ln63_2_fu_906_p2 = (zext_ln63_2_fu_899_p1 + edge_embedding_weight_in);

assign add_ln63_3_fu_974_p2 = (trunc_ln63_2_fu_967_p3 + trunc_ln14);

assign add_ln63_fu_883_p2 = (select_ln59_2_fu_873_p3 + zext_ln63_fu_880_p1);

assign add_ln67_2_fu_1003_p2 = (sub_ln67_fu_961_p2 + zext_ln67_4_fu_1000_p1);

assign and_ln57_fu_752_p2 = (xor_ln57_fu_740_p2 & icmp_ln61_fu_746_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (m_axi_mem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (m_axi_mem_ARREADY == 1'b0)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state76_pp0_stage0_iter75 = (m_axi_mem_RVALID == 1'b0);
end

assign ap_block_state77_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign edge_embedding_weights_V_0_0_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_0_0_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_1_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_0_1_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_2_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_0_2_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_3_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_0_3_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_4_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_0_4_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_5_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_0_5_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_6_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_0_6_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_0_7_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_0_7_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_0_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_1_0_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_1_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_1_1_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_2_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_1_2_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_3_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_1_3_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_4_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_1_4_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_5_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_1_5_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_6_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_1_6_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_1_7_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_1_7_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_0_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_2_0_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_1_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_2_1_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_2_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_2_2_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_3_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_2_3_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_4_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_2_4_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_5_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_2_5_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_6_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_2_6_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_2_7_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_2_7_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_0_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_3_0_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_1_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_3_1_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_2_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_3_2_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_3_address0 = zext_ln67_5_fu_1009_p1;

assign edge_embedding_weights_V_3_3_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_4_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_3_4_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_5_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_3_5_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_6_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_3_6_d0 = trunc_ln63_1_reg_1231;

assign edge_embedding_weights_V_3_7_address0 = zext_ln67_6_fu_1028_p1;

assign edge_embedding_weights_V_3_7_d0 = trunc_ln63_1_reg_1231;

assign grp_fu_1047_p0 = grp_fu_1047_p00;

assign grp_fu_1047_p00 = select_ln57_1_fu_728_p3;

assign grp_fu_1047_p1 = 13'd1300;

assign grp_fu_1047_p2 = grp_fu_1047_p20;

assign grp_fu_1047_p20 = add_ln63_reg_1175;

assign grp_fu_1057_p0 = grp_fu_1057_p00;

assign grp_fu_1057_p00 = select_ln57_1_reg_1136_pp0_iter70_reg;

assign grp_fu_1057_p1 = 7'd13;

assign grp_fu_1057_p2 = grp_fu_1057_p20;

assign grp_fu_1057_p20 = select_ln59_1_reg_1161_pp0_iter72_reg;

assign grp_fu_1067_p0 = grp_fu_1067_p00;

assign grp_fu_1067_p00 = grp_fu_1057_p3;

assign grp_fu_1067_p1 = 10'd13;

assign grp_fu_1067_p2 = zext_ln67_4_fu_1000_p1;

assign icmp_ln57_fu_687_p2 = ((indvar_flatten689_fu_212 == 13'd6500) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_714_p2 = ((indvar_flatten671_fu_204 == 11'd1300) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_746_p2 = ((dim_fu_196 == 7'd100) ? 1'b1 : 1'b0);

assign lshr_ln63_fu_991_p2 = mem_addr_read_reg_1226 >> zext_ln63_3_fu_987_p1;

assign m_axi_mem_ARADDR = sext_ln63_fu_921_p1;

assign m_axi_mem_ARBURST = 2'd0;

assign m_axi_mem_ARCACHE = 4'd0;

assign m_axi_mem_ARID = 1'd0;

assign m_axi_mem_ARLEN = 32'd1;

assign m_axi_mem_ARLOCK = 2'd0;

assign m_axi_mem_ARPROT = 3'd0;

assign m_axi_mem_ARQOS = 4'd0;

assign m_axi_mem_ARREGION = 4'd0;

assign m_axi_mem_ARSIZE = 3'd0;

assign m_axi_mem_ARUSER = 1'd0;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 1024'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 128'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign mul_ln61_1_fu_867_p0 = mul_ln61_1_fu_867_p00;

assign mul_ln61_1_fu_867_p00 = add_ln59_reg_1151;

assign mul_ln61_1_fu_867_p1 = 11'd100;

assign mul_ln61_fu_851_p0 = mul_ln61_fu_851_p00;

assign mul_ln61_fu_851_p00 = i_4_reg_1122;

assign mul_ln61_fu_851_p1 = 11'd100;

assign or_ln59_fu_764_p2 = (icmp_ln59_fu_714_p2 | and_ln57_fu_752_p2);

assign p_shl_cast_fu_943_p3 = {{trunc_ln67_reg_1221_pp0_iter75_reg}, {4'd0}};

assign select_ln57_1_fu_728_p3 = ((icmp_ln59_fu_714_p2[0:0] == 1'b1) ? add_ln57_fu_708_p2 : l_fu_208);

assign select_ln57_2_fu_857_p3 = ((icmp_ln59_reg_1131[0:0] == 1'b1) ? 11'd0 : mul_ln61_fu_851_p2);

assign select_ln57_fu_720_p3 = ((icmp_ln59_fu_714_p2[0:0] == 1'b1) ? 4'd0 : i_fu_200);

assign select_ln59_1_fu_778_p3 = ((and_ln57_fu_752_p2[0:0] == 1'b1) ? add_ln59_fu_758_p2 : select_ln57_fu_720_p3);

assign select_ln59_2_fu_873_p3 = ((and_ln57_reg_1146[0:0] == 1'b1) ? mul_ln61_1_fu_867_p2 : select_ln57_2_fu_857_p3);

assign select_ln59_3_fu_815_p3 = ((icmp_ln59_fu_714_p2[0:0] == 1'b1) ? 11'd1 : add_ln59_1_fu_809_p2);

assign select_ln59_fu_770_p3 = ((or_ln59_fu_764_p2[0:0] == 1'b1) ? 7'd0 : dim_fu_196);

assign sext_ln63_fu_921_p1 = $signed(trunc_ln63_3_reg_1190);

assign shl_ln3_fu_892_p3 = {{grp_fu_1047_p3}, {1'd0}};

assign shl_ln63_1_fu_979_p3 = {{add_ln63_3_fu_974_p2}, {3'd0}};

assign sub_ln67_fu_961_p2 = (p_shl_cast_fu_943_p3 - zext_ln67_3_fu_957_p1);

assign tmp_fu_950_p3 = {{add_ln67_reg_1211_pp0_iter75_reg}, {2'd0}};

assign trunc_ln63_1_fu_996_p1 = lshr_ln63_fu_991_p2[15:0];

assign trunc_ln63_2_fu_967_p3 = {{trunc_ln63_reg_1185_pp0_iter75_reg}, {1'd0}};

assign trunc_ln63_fu_903_p1 = grp_fu_1047_p3[5:0];

assign trunc_ln67_1_fu_786_p1 = select_ln59_fu_770_p3[2:0];

assign trunc_ln67_fu_940_p1 = grp_fu_1057_p3[5:0];

assign xor_ln57_fu_740_p2 = (icmp_ln59_fu_714_p2 ^ 1'd1);

assign zext_ln63_2_fu_899_p1 = shl_ln3_fu_892_p3;

assign zext_ln63_3_fu_987_p1 = shl_ln63_1_fu_979_p3;

assign zext_ln63_fu_880_p1 = select_ln59_reg_1156;

assign zext_ln67_3_fu_957_p1 = tmp_fu_950_p3;

assign zext_ln67_4_fu_1000_p1 = lshr_ln_reg_1170_pp0_iter75_reg;

assign zext_ln67_5_fu_1009_p1 = grp_fu_1067_p3;

assign zext_ln67_6_fu_1028_p1 = add_ln67_2_reg_1272;

endmodule //GIN_compute_graphs_load_weights_Pipeline_load_edge_emb_weights_load_edge_emb_weights_feat_load_edge_emb_weights_dim
