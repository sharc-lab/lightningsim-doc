-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
-- Version: 2021.1.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GIN_compute_graphs_finalize is
port (
    embeddings_0_0_0_0_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_0_0_0_0_0_empty_n : IN STD_LOGIC;
    embeddings_0_0_0_0_0_read : OUT STD_LOGIC;
    embeddings_0_0_0_0_01_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_0_0_0_0_01_empty_n : IN STD_LOGIC;
    embeddings_0_0_0_0_01_read : OUT STD_LOGIC;
    embeddings_0_0_0_0_012_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_0_0_0_0_012_empty_n : IN STD_LOGIC;
    embeddings_0_0_0_0_012_read : OUT STD_LOGIC;
    embeddings_0_0_0_0_013_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_0_0_0_0_013_empty_n : IN STD_LOGIC;
    embeddings_0_0_0_0_013_read : OUT STD_LOGIC;
    m_axi_mem_AWVALID : OUT STD_LOGIC;
    m_axi_mem_AWREADY : IN STD_LOGIC;
    m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_WVALID : OUT STD_LOGIC;
    m_axi_mem_WREADY : IN STD_LOGIC;
    m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
    m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
    m_axi_mem_WLAST : OUT STD_LOGIC;
    m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_ARVALID : OUT STD_LOGIC;
    m_axi_mem_ARREADY : IN STD_LOGIC;
    m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_RVALID : IN STD_LOGIC;
    m_axi_mem_RREADY : OUT STD_LOGIC;
    m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
    m_axi_mem_RLAST : IN STD_LOGIC;
    m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BVALID : IN STD_LOGIC;
    m_axi_mem_BREADY : OUT STD_LOGIC;
    m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    result : IN STD_LOGIC_VECTOR (63 downto 0);
    num_of_nodes : IN STD_LOGIC_VECTOR (31 downto 0);
    graph_pred_bias_V_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_4 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_6 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_7 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_8 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_9 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_10 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_12 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_13 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_14 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_15 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_16 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_17 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_18 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_19 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_20 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_21 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_22 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_23 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_24 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_25 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_26 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_27 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_28 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_29 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_30 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_31 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_32 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_33 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_34 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_35 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_36 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_37 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_38 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_39 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_40 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_41 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_42 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_43 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_44 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_45 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_46 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_47 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_48 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_49 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_50 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_51 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_52 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_53 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_54 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_55 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_56 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_57 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_58 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_59 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_60 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_61 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_62 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_63 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_64 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_65 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_66 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_67 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_68 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_69 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_70 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_71 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_72 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_73 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_74 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_75 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_76 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_77 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_78 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_79 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_80 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_81 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_82 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_83 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_84 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_85 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_86 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_87 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_88 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_89 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_90 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_91 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_92 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_93 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_94 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_95 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_96 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_97 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_98 : IN STD_LOGIC_VECTOR (15 downto 0);
    graph_pred_weights_V_0_99 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    result_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    num_of_nodes_ap_vld : IN STD_LOGIC;
    graph_pred_bias_V_0_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_0_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_1_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_2_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_3_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_4_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_5_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_6_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_7_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_8_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_9_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_10_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_11_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_12_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_13_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_14_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_15_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_16_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_17_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_18_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_19_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_20_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_21_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_22_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_23_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_24_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_25_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_26_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_27_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_28_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_29_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_30_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_31_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_32_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_33_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_34_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_35_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_36_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_37_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_38_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_39_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_40_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_41_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_42_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_43_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_44_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_45_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_46_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_47_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_48_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_49_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_50_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_51_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_52_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_53_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_54_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_55_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_56_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_57_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_58_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_59_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_60_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_61_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_62_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_63_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_64_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_65_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_66_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_67_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_68_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_69_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_70_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_71_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_72_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_73_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_74_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_75_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_76_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_77_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_78_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_79_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_80_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_81_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_82_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_83_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_84_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_85_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_86_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_87_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_88_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_89_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_90_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_91_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_92_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_93_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_94_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_95_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_96_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_97_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_98_ap_vld : IN STD_LOGIC;
    graph_pred_weights_V_0_99_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of GIN_compute_graphs_finalize is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv1024_lc_1 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc78_U0_ap_start : STD_LOGIC;
    signal entry_proc78_U0_ap_done : STD_LOGIC;
    signal entry_proc78_U0_ap_continue : STD_LOGIC;
    signal entry_proc78_U0_ap_idle : STD_LOGIC;
    signal entry_proc78_U0_ap_ready : STD_LOGIC;
    signal entry_proc78_U0_result_c_din : STD_LOGIC_VECTOR (63 downto 0);
    signal entry_proc78_U0_result_c_write : STD_LOGIC;
    signal global_mean_pooling_U0_ap_start : STD_LOGIC;
    signal global_mean_pooling_U0_ap_done : STD_LOGIC;
    signal global_mean_pooling_U0_ap_continue : STD_LOGIC;
    signal global_mean_pooling_U0_ap_idle : STD_LOGIC;
    signal global_mean_pooling_U0_ap_ready : STD_LOGIC;
    signal global_mean_pooling_U0_embeddings_0_0_0_0_0_read : STD_LOGIC;
    signal global_mean_pooling_U0_embeddings_0_0_0_0_01_read : STD_LOGIC;
    signal global_mean_pooling_U0_embeddings_0_0_0_0_012_read : STD_LOGIC;
    signal global_mean_pooling_U0_embeddings_0_0_0_0_013_read : STD_LOGIC;
    signal global_mean_pooling_U0_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_36 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_37 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_38 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_39 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_40 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_41 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_42 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_43 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_44 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_45 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_46 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_47 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_48 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_49 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_50 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_51 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_52 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_53 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_54 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_55 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_56 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_57 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_58 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_59 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_60 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_61 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_62 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_63 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_64 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_65 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_66 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_67 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_68 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_69 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_70 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_71 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_72 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_73 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_74 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_75 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_76 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_77 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_78 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_79 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_80 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_81 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_82 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_83 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_84 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_85 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_86 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_87 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_88 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_89 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_90 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_91 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_92 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_93 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_94 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_95 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_96 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_97 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_98 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_mean_pooling_U0_ap_return_99 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_h_graph_V_99 : STD_LOGIC;
    signal h_graph_V_99_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_99 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_99 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_98 : STD_LOGIC;
    signal h_graph_V_98_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_98 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_98 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_97 : STD_LOGIC;
    signal h_graph_V_97_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_97 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_97 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_96 : STD_LOGIC;
    signal h_graph_V_96_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_96 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_96 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_95 : STD_LOGIC;
    signal h_graph_V_95_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_95 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_95 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_94 : STD_LOGIC;
    signal h_graph_V_94_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_94 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_94 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_93 : STD_LOGIC;
    signal h_graph_V_93_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_93 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_93 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_92 : STD_LOGIC;
    signal h_graph_V_92_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_92 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_92 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_91 : STD_LOGIC;
    signal h_graph_V_91_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_91 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_91 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_90 : STD_LOGIC;
    signal h_graph_V_90_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_90 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_90 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_89 : STD_LOGIC;
    signal h_graph_V_89_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_89 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_89 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_88 : STD_LOGIC;
    signal h_graph_V_88_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_88 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_88 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_87 : STD_LOGIC;
    signal h_graph_V_87_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_87 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_87 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_86 : STD_LOGIC;
    signal h_graph_V_86_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_86 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_86 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_85 : STD_LOGIC;
    signal h_graph_V_85_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_85 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_85 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_84 : STD_LOGIC;
    signal h_graph_V_84_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_84 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_84 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_83 : STD_LOGIC;
    signal h_graph_V_83_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_83 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_83 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_82 : STD_LOGIC;
    signal h_graph_V_82_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_82 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_82 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_81 : STD_LOGIC;
    signal h_graph_V_81_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_81 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_81 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_80 : STD_LOGIC;
    signal h_graph_V_80_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_80 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_80 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_79 : STD_LOGIC;
    signal h_graph_V_79_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_79 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_79 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_78 : STD_LOGIC;
    signal h_graph_V_78_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_78 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_78 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_77 : STD_LOGIC;
    signal h_graph_V_77_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_77 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_77 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_76 : STD_LOGIC;
    signal h_graph_V_76_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_76 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_76 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_75 : STD_LOGIC;
    signal h_graph_V_75_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_75 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_75 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_74 : STD_LOGIC;
    signal h_graph_V_74_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_74 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_74 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_73 : STD_LOGIC;
    signal h_graph_V_73_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_73 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_73 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_72 : STD_LOGIC;
    signal h_graph_V_72_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_72 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_72 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_71 : STD_LOGIC;
    signal h_graph_V_71_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_71 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_71 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_70 : STD_LOGIC;
    signal h_graph_V_70_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_70 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_70 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_69 : STD_LOGIC;
    signal h_graph_V_69_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_69 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_69 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_68 : STD_LOGIC;
    signal h_graph_V_68_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_68 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_68 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_67 : STD_LOGIC;
    signal h_graph_V_67_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_67 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_67 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_66 : STD_LOGIC;
    signal h_graph_V_66_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_66 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_66 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_65 : STD_LOGIC;
    signal h_graph_V_65_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_65 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_65 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_64 : STD_LOGIC;
    signal h_graph_V_64_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_64 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_64 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_63 : STD_LOGIC;
    signal h_graph_V_63_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_63 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_63 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_62 : STD_LOGIC;
    signal h_graph_V_62_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_62 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_62 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_61 : STD_LOGIC;
    signal h_graph_V_61_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_61 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_61 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_60 : STD_LOGIC;
    signal h_graph_V_60_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_60 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_60 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_59 : STD_LOGIC;
    signal h_graph_V_59_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_59 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_59 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_58 : STD_LOGIC;
    signal h_graph_V_58_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_58 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_58 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_57 : STD_LOGIC;
    signal h_graph_V_57_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_57 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_57 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_56 : STD_LOGIC;
    signal h_graph_V_56_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_56 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_56 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_55 : STD_LOGIC;
    signal h_graph_V_55_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_55 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_55 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_54 : STD_LOGIC;
    signal h_graph_V_54_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_54 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_54 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_53 : STD_LOGIC;
    signal h_graph_V_53_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_53 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_53 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_52 : STD_LOGIC;
    signal h_graph_V_52_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_52 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_52 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_51 : STD_LOGIC;
    signal h_graph_V_51_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_51 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_51 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_50 : STD_LOGIC;
    signal h_graph_V_50_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_50 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_50 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_49 : STD_LOGIC;
    signal h_graph_V_49_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_49 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_49 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_48 : STD_LOGIC;
    signal h_graph_V_48_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_48 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_48 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_47 : STD_LOGIC;
    signal h_graph_V_47_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_47 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_47 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_46 : STD_LOGIC;
    signal h_graph_V_46_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_46 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_46 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_45 : STD_LOGIC;
    signal h_graph_V_45_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_45 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_45 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_44 : STD_LOGIC;
    signal h_graph_V_44_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_44 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_44 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_43 : STD_LOGIC;
    signal h_graph_V_43_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_43 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_43 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_42 : STD_LOGIC;
    signal h_graph_V_42_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_42 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_42 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_41 : STD_LOGIC;
    signal h_graph_V_41_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_41 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_41 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_40 : STD_LOGIC;
    signal h_graph_V_40_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_40 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_40 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_39 : STD_LOGIC;
    signal h_graph_V_39_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_39 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_39 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_38 : STD_LOGIC;
    signal h_graph_V_38_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_38 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_38 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_37 : STD_LOGIC;
    signal h_graph_V_37_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_37 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_37 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_36 : STD_LOGIC;
    signal h_graph_V_36_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_36 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_36 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_35 : STD_LOGIC;
    signal h_graph_V_35_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_35 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_35 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_34 : STD_LOGIC;
    signal h_graph_V_34_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_34 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_34 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_33 : STD_LOGIC;
    signal h_graph_V_33_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_33 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_33 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_32 : STD_LOGIC;
    signal h_graph_V_32_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_32 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_32 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_31 : STD_LOGIC;
    signal h_graph_V_31_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_31 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_31 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_30 : STD_LOGIC;
    signal h_graph_V_30_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_30 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_30 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_29 : STD_LOGIC;
    signal h_graph_V_29_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_29 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_29 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_28 : STD_LOGIC;
    signal h_graph_V_28_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_28 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_28 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_27 : STD_LOGIC;
    signal h_graph_V_27_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_27 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_27 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_26 : STD_LOGIC;
    signal h_graph_V_26_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_26 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_26 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_25 : STD_LOGIC;
    signal h_graph_V_25_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_25 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_25 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_24 : STD_LOGIC;
    signal h_graph_V_24_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_24 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_24 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_23 : STD_LOGIC;
    signal h_graph_V_23_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_23 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_23 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_22 : STD_LOGIC;
    signal h_graph_V_22_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_22 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_22 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_21 : STD_LOGIC;
    signal h_graph_V_21_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_21 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_21 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_20 : STD_LOGIC;
    signal h_graph_V_20_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_20 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_20 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_19 : STD_LOGIC;
    signal h_graph_V_19_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_19 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_19 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_18 : STD_LOGIC;
    signal h_graph_V_18_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_18 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_18 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_17 : STD_LOGIC;
    signal h_graph_V_17_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_17 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_17 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_16 : STD_LOGIC;
    signal h_graph_V_16_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_16 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_16 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_15 : STD_LOGIC;
    signal h_graph_V_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_15 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_14 : STD_LOGIC;
    signal h_graph_V_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_14 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_13 : STD_LOGIC;
    signal h_graph_V_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_13 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_12 : STD_LOGIC;
    signal h_graph_V_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_12 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_11 : STD_LOGIC;
    signal h_graph_V_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_11 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_10 : STD_LOGIC;
    signal h_graph_V_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_10 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_9 : STD_LOGIC;
    signal h_graph_V_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_9 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_8 : STD_LOGIC;
    signal h_graph_V_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_8 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_7 : STD_LOGIC;
    signal h_graph_V_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_7 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_6 : STD_LOGIC;
    signal h_graph_V_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_6 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_5 : STD_LOGIC;
    signal h_graph_V_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_5 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_4 : STD_LOGIC;
    signal h_graph_V_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_4 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_3 : STD_LOGIC;
    signal h_graph_V_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_3 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_2 : STD_LOGIC;
    signal h_graph_V_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_2 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_1 : STD_LOGIC;
    signal h_graph_V_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_1 : STD_LOGIC;
    signal ap_channel_done_h_graph_V_0 : STD_LOGIC;
    signal h_graph_V_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h_graph_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_h_graph_V_0 : STD_LOGIC;
    signal linear_100_1_1_false_U0_ap_start : STD_LOGIC;
    signal linear_100_1_1_false_U0_ap_done : STD_LOGIC;
    signal linear_100_1_1_false_U0_ap_continue : STD_LOGIC;
    signal linear_100_1_1_false_U0_ap_idle : STD_LOGIC;
    signal linear_100_1_1_false_U0_ap_ready : STD_LOGIC;
    signal linear_100_1_1_false_U0_m_axi_mem_AWVALID : STD_LOGIC;
    signal linear_100_1_1_false_U0_m_axi_mem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_WVALID : STD_LOGIC;
    signal linear_100_1_1_false_U0_m_axi_mem_WDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_WSTRB : STD_LOGIC_VECTOR (127 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_WLAST : STD_LOGIC;
    signal linear_100_1_1_false_U0_m_axi_mem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARVALID : STD_LOGIC;
    signal linear_100_1_1_false_U0_m_axi_mem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal linear_100_1_1_false_U0_m_axi_mem_RREADY : STD_LOGIC;
    signal linear_100_1_1_false_U0_m_axi_mem_BREADY : STD_LOGIC;
    signal linear_100_1_1_false_U0_output_r_read : STD_LOGIC;
    signal result_c_full_n : STD_LOGIC;
    signal result_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal result_c_empty_n : STD_LOGIC;
    signal h_graph_V_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_0_empty_n : STD_LOGIC;
    signal h_graph_V_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_1_empty_n : STD_LOGIC;
    signal h_graph_V_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_2_empty_n : STD_LOGIC;
    signal h_graph_V_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_3_empty_n : STD_LOGIC;
    signal h_graph_V_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_4_empty_n : STD_LOGIC;
    signal h_graph_V_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_5_empty_n : STD_LOGIC;
    signal h_graph_V_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_6_empty_n : STD_LOGIC;
    signal h_graph_V_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_7_empty_n : STD_LOGIC;
    signal h_graph_V_8_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_8_empty_n : STD_LOGIC;
    signal h_graph_V_9_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_9_empty_n : STD_LOGIC;
    signal h_graph_V_10_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_10_empty_n : STD_LOGIC;
    signal h_graph_V_11_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_11_empty_n : STD_LOGIC;
    signal h_graph_V_12_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_12_empty_n : STD_LOGIC;
    signal h_graph_V_13_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_13_empty_n : STD_LOGIC;
    signal h_graph_V_14_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_14_empty_n : STD_LOGIC;
    signal h_graph_V_15_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_15_empty_n : STD_LOGIC;
    signal h_graph_V_16_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_16_empty_n : STD_LOGIC;
    signal h_graph_V_17_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_17_empty_n : STD_LOGIC;
    signal h_graph_V_18_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_18_empty_n : STD_LOGIC;
    signal h_graph_V_19_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_19_empty_n : STD_LOGIC;
    signal h_graph_V_20_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_20_empty_n : STD_LOGIC;
    signal h_graph_V_21_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_21_empty_n : STD_LOGIC;
    signal h_graph_V_22_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_22_empty_n : STD_LOGIC;
    signal h_graph_V_23_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_23_empty_n : STD_LOGIC;
    signal h_graph_V_24_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_24_empty_n : STD_LOGIC;
    signal h_graph_V_25_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_25_empty_n : STD_LOGIC;
    signal h_graph_V_26_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_26_empty_n : STD_LOGIC;
    signal h_graph_V_27_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_27_empty_n : STD_LOGIC;
    signal h_graph_V_28_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_28_empty_n : STD_LOGIC;
    signal h_graph_V_29_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_29_empty_n : STD_LOGIC;
    signal h_graph_V_30_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_30_empty_n : STD_LOGIC;
    signal h_graph_V_31_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_31_empty_n : STD_LOGIC;
    signal h_graph_V_32_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_32_empty_n : STD_LOGIC;
    signal h_graph_V_33_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_33_empty_n : STD_LOGIC;
    signal h_graph_V_34_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_34_empty_n : STD_LOGIC;
    signal h_graph_V_35_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_35_empty_n : STD_LOGIC;
    signal h_graph_V_36_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_36_empty_n : STD_LOGIC;
    signal h_graph_V_37_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_37_empty_n : STD_LOGIC;
    signal h_graph_V_38_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_38_empty_n : STD_LOGIC;
    signal h_graph_V_39_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_39_empty_n : STD_LOGIC;
    signal h_graph_V_40_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_40_empty_n : STD_LOGIC;
    signal h_graph_V_41_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_41_empty_n : STD_LOGIC;
    signal h_graph_V_42_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_42_empty_n : STD_LOGIC;
    signal h_graph_V_43_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_43_empty_n : STD_LOGIC;
    signal h_graph_V_44_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_44_empty_n : STD_LOGIC;
    signal h_graph_V_45_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_45_empty_n : STD_LOGIC;
    signal h_graph_V_46_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_46_empty_n : STD_LOGIC;
    signal h_graph_V_47_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_47_empty_n : STD_LOGIC;
    signal h_graph_V_48_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_48_empty_n : STD_LOGIC;
    signal h_graph_V_49_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_49_empty_n : STD_LOGIC;
    signal h_graph_V_50_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_50_empty_n : STD_LOGIC;
    signal h_graph_V_51_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_51_empty_n : STD_LOGIC;
    signal h_graph_V_52_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_52_empty_n : STD_LOGIC;
    signal h_graph_V_53_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_53_empty_n : STD_LOGIC;
    signal h_graph_V_54_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_54_empty_n : STD_LOGIC;
    signal h_graph_V_55_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_55_empty_n : STD_LOGIC;
    signal h_graph_V_56_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_56_empty_n : STD_LOGIC;
    signal h_graph_V_57_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_57_empty_n : STD_LOGIC;
    signal h_graph_V_58_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_58_empty_n : STD_LOGIC;
    signal h_graph_V_59_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_59_empty_n : STD_LOGIC;
    signal h_graph_V_60_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_60_empty_n : STD_LOGIC;
    signal h_graph_V_61_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_61_empty_n : STD_LOGIC;
    signal h_graph_V_62_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_62_empty_n : STD_LOGIC;
    signal h_graph_V_63_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_63_empty_n : STD_LOGIC;
    signal h_graph_V_64_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_64_empty_n : STD_LOGIC;
    signal h_graph_V_65_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_65_empty_n : STD_LOGIC;
    signal h_graph_V_66_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_66_empty_n : STD_LOGIC;
    signal h_graph_V_67_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_67_empty_n : STD_LOGIC;
    signal h_graph_V_68_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_68_empty_n : STD_LOGIC;
    signal h_graph_V_69_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_69_empty_n : STD_LOGIC;
    signal h_graph_V_70_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_70_empty_n : STD_LOGIC;
    signal h_graph_V_71_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_71_empty_n : STD_LOGIC;
    signal h_graph_V_72_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_72_empty_n : STD_LOGIC;
    signal h_graph_V_73_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_73_empty_n : STD_LOGIC;
    signal h_graph_V_74_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_74_empty_n : STD_LOGIC;
    signal h_graph_V_75_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_75_empty_n : STD_LOGIC;
    signal h_graph_V_76_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_76_empty_n : STD_LOGIC;
    signal h_graph_V_77_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_77_empty_n : STD_LOGIC;
    signal h_graph_V_78_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_78_empty_n : STD_LOGIC;
    signal h_graph_V_79_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_79_empty_n : STD_LOGIC;
    signal h_graph_V_80_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_80_empty_n : STD_LOGIC;
    signal h_graph_V_81_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_81_empty_n : STD_LOGIC;
    signal h_graph_V_82_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_82_empty_n : STD_LOGIC;
    signal h_graph_V_83_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_83_empty_n : STD_LOGIC;
    signal h_graph_V_84_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_84_empty_n : STD_LOGIC;
    signal h_graph_V_85_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_85_empty_n : STD_LOGIC;
    signal h_graph_V_86_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_86_empty_n : STD_LOGIC;
    signal h_graph_V_87_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_87_empty_n : STD_LOGIC;
    signal h_graph_V_88_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_88_empty_n : STD_LOGIC;
    signal h_graph_V_89_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_89_empty_n : STD_LOGIC;
    signal h_graph_V_90_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_90_empty_n : STD_LOGIC;
    signal h_graph_V_91_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_91_empty_n : STD_LOGIC;
    signal h_graph_V_92_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_92_empty_n : STD_LOGIC;
    signal h_graph_V_93_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_93_empty_n : STD_LOGIC;
    signal h_graph_V_94_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_94_empty_n : STD_LOGIC;
    signal h_graph_V_95_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_95_empty_n : STD_LOGIC;
    signal h_graph_V_96_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_96_empty_n : STD_LOGIC;
    signal h_graph_V_97_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_97_empty_n : STD_LOGIC;
    signal h_graph_V_98_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_98_empty_n : STD_LOGIC;
    signal h_graph_V_99_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal h_graph_V_99_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc78_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc78_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_global_mean_pooling_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_global_mean_pooling_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_linear_100_1_1_false_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_linear_100_1_1_false_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component GIN_compute_graphs_entry_proc78 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result : IN STD_LOGIC_VECTOR (63 downto 0);
        result_c_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        result_c_full_n : IN STD_LOGIC;
        result_c_write : OUT STD_LOGIC );
    end component;


    component GIN_compute_graphs_global_mean_pooling IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        embeddings_0_0_0_0_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_0_0_0_0_0_empty_n : IN STD_LOGIC;
        embeddings_0_0_0_0_0_read : OUT STD_LOGIC;
        embeddings_0_0_0_0_01_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_0_0_0_0_01_empty_n : IN STD_LOGIC;
        embeddings_0_0_0_0_01_read : OUT STD_LOGIC;
        embeddings_0_0_0_0_012_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_0_0_0_0_012_empty_n : IN STD_LOGIC;
        embeddings_0_0_0_0_012_read : OUT STD_LOGIC;
        embeddings_0_0_0_0_013_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        embeddings_0_0_0_0_013_empty_n : IN STD_LOGIC;
        embeddings_0_0_0_0_013_read : OUT STD_LOGIC;
        num_of_nodes : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_64 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_65 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_66 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_67 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_68 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_69 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_70 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_71 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_72 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_73 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_74 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_75 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_76 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_77 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_78 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_79 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_80 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_81 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_82 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_83 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_84 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_85 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_86 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_87 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_88 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_89 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_90 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_91 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_92 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_93 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_94 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_95 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_96 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_97 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_98 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_99 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_linear_100_1_1_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read52 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read53 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read54 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read55 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read56 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read57 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read58 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read59 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read60 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read61 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read62 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read63 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read64 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read65 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read66 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read67 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read68 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read69 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read70 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read71 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read72 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read73 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read74 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read75 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read76 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read77 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read78 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read79 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read80 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read81 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read82 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read83 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read84 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read85 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read86 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read87 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read88 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read89 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read90 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read91 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read92 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read93 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read94 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read95 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read96 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read97 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read98 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read99 : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_mem_AWVALID : OUT STD_LOGIC;
        m_axi_mem_AWREADY : IN STD_LOGIC;
        m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WVALID : OUT STD_LOGIC;
        m_axi_mem_WREADY : IN STD_LOGIC;
        m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_mem_WLAST : OUT STD_LOGIC;
        m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARVALID : OUT STD_LOGIC;
        m_axi_mem_ARREADY : IN STD_LOGIC;
        m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RVALID : IN STD_LOGIC;
        m_axi_mem_RREADY : OUT STD_LOGIC;
        m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_mem_RLAST : IN STD_LOGIC;
        m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BVALID : IN STD_LOGIC;
        m_axi_mem_BREADY : OUT STD_LOGIC;
        m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        output_r_empty_n : IN STD_LOGIC;
        output_r_read : OUT STD_LOGIC;
        graph_pred_bias_V_0 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_4 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_6 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_7 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_8 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_9 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_10 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_11 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_12 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_13 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_14 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_15 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_16 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_17 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_18 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_19 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_20 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_21 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_22 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_23 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_24 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_25 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_26 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_27 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_28 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_29 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_30 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_31 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_32 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_33 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_34 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_35 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_36 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_37 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_38 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_39 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_40 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_41 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_42 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_43 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_44 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_45 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_46 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_47 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_48 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_49 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_50 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_51 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_52 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_53 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_54 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_55 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_56 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_57 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_58 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_59 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_60 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_61 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_62 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_63 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_64 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_65 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_66 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_67 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_68 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_69 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_70 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_71 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_72 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_73 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_74 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_75 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_76 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_77 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_78 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_79 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_80 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_81 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_82 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_83 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_84 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_85 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_86 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_87 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_88 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_89 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_90 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_91 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_92 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_93 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_94 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_95 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_96 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_97 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_98 : IN STD_LOGIC_VECTOR (15 downto 0);
        graph_pred_weights_V_0_99 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_fifo_w64_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component GIN_compute_graphs_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc78_U0 : component GIN_compute_graphs_entry_proc78
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc78_U0_ap_start,
        ap_done => entry_proc78_U0_ap_done,
        ap_continue => entry_proc78_U0_ap_continue,
        ap_idle => entry_proc78_U0_ap_idle,
        ap_ready => entry_proc78_U0_ap_ready,
        result => result,
        result_c_din => entry_proc78_U0_result_c_din,
        result_c_full_n => result_c_full_n,
        result_c_write => entry_proc78_U0_result_c_write);

    global_mean_pooling_U0 : component GIN_compute_graphs_global_mean_pooling
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => global_mean_pooling_U0_ap_start,
        ap_done => global_mean_pooling_U0_ap_done,
        ap_continue => global_mean_pooling_U0_ap_continue,
        ap_idle => global_mean_pooling_U0_ap_idle,
        ap_ready => global_mean_pooling_U0_ap_ready,
        embeddings_0_0_0_0_0_dout => embeddings_0_0_0_0_0_dout,
        embeddings_0_0_0_0_0_empty_n => embeddings_0_0_0_0_0_empty_n,
        embeddings_0_0_0_0_0_read => global_mean_pooling_U0_embeddings_0_0_0_0_0_read,
        embeddings_0_0_0_0_01_dout => embeddings_0_0_0_0_01_dout,
        embeddings_0_0_0_0_01_empty_n => embeddings_0_0_0_0_01_empty_n,
        embeddings_0_0_0_0_01_read => global_mean_pooling_U0_embeddings_0_0_0_0_01_read,
        embeddings_0_0_0_0_012_dout => embeddings_0_0_0_0_012_dout,
        embeddings_0_0_0_0_012_empty_n => embeddings_0_0_0_0_012_empty_n,
        embeddings_0_0_0_0_012_read => global_mean_pooling_U0_embeddings_0_0_0_0_012_read,
        embeddings_0_0_0_0_013_dout => embeddings_0_0_0_0_013_dout,
        embeddings_0_0_0_0_013_empty_n => embeddings_0_0_0_0_013_empty_n,
        embeddings_0_0_0_0_013_read => global_mean_pooling_U0_embeddings_0_0_0_0_013_read,
        num_of_nodes => num_of_nodes,
        ap_return_0 => global_mean_pooling_U0_ap_return_0,
        ap_return_1 => global_mean_pooling_U0_ap_return_1,
        ap_return_2 => global_mean_pooling_U0_ap_return_2,
        ap_return_3 => global_mean_pooling_U0_ap_return_3,
        ap_return_4 => global_mean_pooling_U0_ap_return_4,
        ap_return_5 => global_mean_pooling_U0_ap_return_5,
        ap_return_6 => global_mean_pooling_U0_ap_return_6,
        ap_return_7 => global_mean_pooling_U0_ap_return_7,
        ap_return_8 => global_mean_pooling_U0_ap_return_8,
        ap_return_9 => global_mean_pooling_U0_ap_return_9,
        ap_return_10 => global_mean_pooling_U0_ap_return_10,
        ap_return_11 => global_mean_pooling_U0_ap_return_11,
        ap_return_12 => global_mean_pooling_U0_ap_return_12,
        ap_return_13 => global_mean_pooling_U0_ap_return_13,
        ap_return_14 => global_mean_pooling_U0_ap_return_14,
        ap_return_15 => global_mean_pooling_U0_ap_return_15,
        ap_return_16 => global_mean_pooling_U0_ap_return_16,
        ap_return_17 => global_mean_pooling_U0_ap_return_17,
        ap_return_18 => global_mean_pooling_U0_ap_return_18,
        ap_return_19 => global_mean_pooling_U0_ap_return_19,
        ap_return_20 => global_mean_pooling_U0_ap_return_20,
        ap_return_21 => global_mean_pooling_U0_ap_return_21,
        ap_return_22 => global_mean_pooling_U0_ap_return_22,
        ap_return_23 => global_mean_pooling_U0_ap_return_23,
        ap_return_24 => global_mean_pooling_U0_ap_return_24,
        ap_return_25 => global_mean_pooling_U0_ap_return_25,
        ap_return_26 => global_mean_pooling_U0_ap_return_26,
        ap_return_27 => global_mean_pooling_U0_ap_return_27,
        ap_return_28 => global_mean_pooling_U0_ap_return_28,
        ap_return_29 => global_mean_pooling_U0_ap_return_29,
        ap_return_30 => global_mean_pooling_U0_ap_return_30,
        ap_return_31 => global_mean_pooling_U0_ap_return_31,
        ap_return_32 => global_mean_pooling_U0_ap_return_32,
        ap_return_33 => global_mean_pooling_U0_ap_return_33,
        ap_return_34 => global_mean_pooling_U0_ap_return_34,
        ap_return_35 => global_mean_pooling_U0_ap_return_35,
        ap_return_36 => global_mean_pooling_U0_ap_return_36,
        ap_return_37 => global_mean_pooling_U0_ap_return_37,
        ap_return_38 => global_mean_pooling_U0_ap_return_38,
        ap_return_39 => global_mean_pooling_U0_ap_return_39,
        ap_return_40 => global_mean_pooling_U0_ap_return_40,
        ap_return_41 => global_mean_pooling_U0_ap_return_41,
        ap_return_42 => global_mean_pooling_U0_ap_return_42,
        ap_return_43 => global_mean_pooling_U0_ap_return_43,
        ap_return_44 => global_mean_pooling_U0_ap_return_44,
        ap_return_45 => global_mean_pooling_U0_ap_return_45,
        ap_return_46 => global_mean_pooling_U0_ap_return_46,
        ap_return_47 => global_mean_pooling_U0_ap_return_47,
        ap_return_48 => global_mean_pooling_U0_ap_return_48,
        ap_return_49 => global_mean_pooling_U0_ap_return_49,
        ap_return_50 => global_mean_pooling_U0_ap_return_50,
        ap_return_51 => global_mean_pooling_U0_ap_return_51,
        ap_return_52 => global_mean_pooling_U0_ap_return_52,
        ap_return_53 => global_mean_pooling_U0_ap_return_53,
        ap_return_54 => global_mean_pooling_U0_ap_return_54,
        ap_return_55 => global_mean_pooling_U0_ap_return_55,
        ap_return_56 => global_mean_pooling_U0_ap_return_56,
        ap_return_57 => global_mean_pooling_U0_ap_return_57,
        ap_return_58 => global_mean_pooling_U0_ap_return_58,
        ap_return_59 => global_mean_pooling_U0_ap_return_59,
        ap_return_60 => global_mean_pooling_U0_ap_return_60,
        ap_return_61 => global_mean_pooling_U0_ap_return_61,
        ap_return_62 => global_mean_pooling_U0_ap_return_62,
        ap_return_63 => global_mean_pooling_U0_ap_return_63,
        ap_return_64 => global_mean_pooling_U0_ap_return_64,
        ap_return_65 => global_mean_pooling_U0_ap_return_65,
        ap_return_66 => global_mean_pooling_U0_ap_return_66,
        ap_return_67 => global_mean_pooling_U0_ap_return_67,
        ap_return_68 => global_mean_pooling_U0_ap_return_68,
        ap_return_69 => global_mean_pooling_U0_ap_return_69,
        ap_return_70 => global_mean_pooling_U0_ap_return_70,
        ap_return_71 => global_mean_pooling_U0_ap_return_71,
        ap_return_72 => global_mean_pooling_U0_ap_return_72,
        ap_return_73 => global_mean_pooling_U0_ap_return_73,
        ap_return_74 => global_mean_pooling_U0_ap_return_74,
        ap_return_75 => global_mean_pooling_U0_ap_return_75,
        ap_return_76 => global_mean_pooling_U0_ap_return_76,
        ap_return_77 => global_mean_pooling_U0_ap_return_77,
        ap_return_78 => global_mean_pooling_U0_ap_return_78,
        ap_return_79 => global_mean_pooling_U0_ap_return_79,
        ap_return_80 => global_mean_pooling_U0_ap_return_80,
        ap_return_81 => global_mean_pooling_U0_ap_return_81,
        ap_return_82 => global_mean_pooling_U0_ap_return_82,
        ap_return_83 => global_mean_pooling_U0_ap_return_83,
        ap_return_84 => global_mean_pooling_U0_ap_return_84,
        ap_return_85 => global_mean_pooling_U0_ap_return_85,
        ap_return_86 => global_mean_pooling_U0_ap_return_86,
        ap_return_87 => global_mean_pooling_U0_ap_return_87,
        ap_return_88 => global_mean_pooling_U0_ap_return_88,
        ap_return_89 => global_mean_pooling_U0_ap_return_89,
        ap_return_90 => global_mean_pooling_U0_ap_return_90,
        ap_return_91 => global_mean_pooling_U0_ap_return_91,
        ap_return_92 => global_mean_pooling_U0_ap_return_92,
        ap_return_93 => global_mean_pooling_U0_ap_return_93,
        ap_return_94 => global_mean_pooling_U0_ap_return_94,
        ap_return_95 => global_mean_pooling_U0_ap_return_95,
        ap_return_96 => global_mean_pooling_U0_ap_return_96,
        ap_return_97 => global_mean_pooling_U0_ap_return_97,
        ap_return_98 => global_mean_pooling_U0_ap_return_98,
        ap_return_99 => global_mean_pooling_U0_ap_return_99);

    linear_100_1_1_false_U0 : component GIN_compute_graphs_linear_100_1_1_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => linear_100_1_1_false_U0_ap_start,
        ap_done => linear_100_1_1_false_U0_ap_done,
        ap_continue => linear_100_1_1_false_U0_ap_continue,
        ap_idle => linear_100_1_1_false_U0_ap_idle,
        ap_ready => linear_100_1_1_false_U0_ap_ready,
        p_read => h_graph_V_0_dout,
        p_read1 => h_graph_V_1_dout,
        p_read2 => h_graph_V_2_dout,
        p_read3 => h_graph_V_3_dout,
        p_read4 => h_graph_V_4_dout,
        p_read5 => h_graph_V_5_dout,
        p_read6 => h_graph_V_6_dout,
        p_read7 => h_graph_V_7_dout,
        p_read8 => h_graph_V_8_dout,
        p_read9 => h_graph_V_9_dout,
        p_read10 => h_graph_V_10_dout,
        p_read11 => h_graph_V_11_dout,
        p_read12 => h_graph_V_12_dout,
        p_read13 => h_graph_V_13_dout,
        p_read14 => h_graph_V_14_dout,
        p_read15 => h_graph_V_15_dout,
        p_read16 => h_graph_V_16_dout,
        p_read17 => h_graph_V_17_dout,
        p_read18 => h_graph_V_18_dout,
        p_read19 => h_graph_V_19_dout,
        p_read20 => h_graph_V_20_dout,
        p_read21 => h_graph_V_21_dout,
        p_read22 => h_graph_V_22_dout,
        p_read23 => h_graph_V_23_dout,
        p_read24 => h_graph_V_24_dout,
        p_read25 => h_graph_V_25_dout,
        p_read26 => h_graph_V_26_dout,
        p_read27 => h_graph_V_27_dout,
        p_read28 => h_graph_V_28_dout,
        p_read29 => h_graph_V_29_dout,
        p_read30 => h_graph_V_30_dout,
        p_read31 => h_graph_V_31_dout,
        p_read32 => h_graph_V_32_dout,
        p_read33 => h_graph_V_33_dout,
        p_read34 => h_graph_V_34_dout,
        p_read35 => h_graph_V_35_dout,
        p_read36 => h_graph_V_36_dout,
        p_read37 => h_graph_V_37_dout,
        p_read38 => h_graph_V_38_dout,
        p_read39 => h_graph_V_39_dout,
        p_read40 => h_graph_V_40_dout,
        p_read41 => h_graph_V_41_dout,
        p_read42 => h_graph_V_42_dout,
        p_read43 => h_graph_V_43_dout,
        p_read44 => h_graph_V_44_dout,
        p_read45 => h_graph_V_45_dout,
        p_read46 => h_graph_V_46_dout,
        p_read47 => h_graph_V_47_dout,
        p_read48 => h_graph_V_48_dout,
        p_read49 => h_graph_V_49_dout,
        p_read50 => h_graph_V_50_dout,
        p_read51 => h_graph_V_51_dout,
        p_read52 => h_graph_V_52_dout,
        p_read53 => h_graph_V_53_dout,
        p_read54 => h_graph_V_54_dout,
        p_read55 => h_graph_V_55_dout,
        p_read56 => h_graph_V_56_dout,
        p_read57 => h_graph_V_57_dout,
        p_read58 => h_graph_V_58_dout,
        p_read59 => h_graph_V_59_dout,
        p_read60 => h_graph_V_60_dout,
        p_read61 => h_graph_V_61_dout,
        p_read62 => h_graph_V_62_dout,
        p_read63 => h_graph_V_63_dout,
        p_read64 => h_graph_V_64_dout,
        p_read65 => h_graph_V_65_dout,
        p_read66 => h_graph_V_66_dout,
        p_read67 => h_graph_V_67_dout,
        p_read68 => h_graph_V_68_dout,
        p_read69 => h_graph_V_69_dout,
        p_read70 => h_graph_V_70_dout,
        p_read71 => h_graph_V_71_dout,
        p_read72 => h_graph_V_72_dout,
        p_read73 => h_graph_V_73_dout,
        p_read74 => h_graph_V_74_dout,
        p_read75 => h_graph_V_75_dout,
        p_read76 => h_graph_V_76_dout,
        p_read77 => h_graph_V_77_dout,
        p_read78 => h_graph_V_78_dout,
        p_read79 => h_graph_V_79_dout,
        p_read80 => h_graph_V_80_dout,
        p_read81 => h_graph_V_81_dout,
        p_read82 => h_graph_V_82_dout,
        p_read83 => h_graph_V_83_dout,
        p_read84 => h_graph_V_84_dout,
        p_read85 => h_graph_V_85_dout,
        p_read86 => h_graph_V_86_dout,
        p_read87 => h_graph_V_87_dout,
        p_read88 => h_graph_V_88_dout,
        p_read89 => h_graph_V_89_dout,
        p_read90 => h_graph_V_90_dout,
        p_read91 => h_graph_V_91_dout,
        p_read92 => h_graph_V_92_dout,
        p_read93 => h_graph_V_93_dout,
        p_read94 => h_graph_V_94_dout,
        p_read95 => h_graph_V_95_dout,
        p_read96 => h_graph_V_96_dout,
        p_read97 => h_graph_V_97_dout,
        p_read98 => h_graph_V_98_dout,
        p_read99 => h_graph_V_99_dout,
        m_axi_mem_AWVALID => linear_100_1_1_false_U0_m_axi_mem_AWVALID,
        m_axi_mem_AWREADY => m_axi_mem_AWREADY,
        m_axi_mem_AWADDR => linear_100_1_1_false_U0_m_axi_mem_AWADDR,
        m_axi_mem_AWID => linear_100_1_1_false_U0_m_axi_mem_AWID,
        m_axi_mem_AWLEN => linear_100_1_1_false_U0_m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE => linear_100_1_1_false_U0_m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST => linear_100_1_1_false_U0_m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK => linear_100_1_1_false_U0_m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE => linear_100_1_1_false_U0_m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT => linear_100_1_1_false_U0_m_axi_mem_AWPROT,
        m_axi_mem_AWQOS => linear_100_1_1_false_U0_m_axi_mem_AWQOS,
        m_axi_mem_AWREGION => linear_100_1_1_false_U0_m_axi_mem_AWREGION,
        m_axi_mem_AWUSER => linear_100_1_1_false_U0_m_axi_mem_AWUSER,
        m_axi_mem_WVALID => linear_100_1_1_false_U0_m_axi_mem_WVALID,
        m_axi_mem_WREADY => m_axi_mem_WREADY,
        m_axi_mem_WDATA => linear_100_1_1_false_U0_m_axi_mem_WDATA,
        m_axi_mem_WSTRB => linear_100_1_1_false_U0_m_axi_mem_WSTRB,
        m_axi_mem_WLAST => linear_100_1_1_false_U0_m_axi_mem_WLAST,
        m_axi_mem_WID => linear_100_1_1_false_U0_m_axi_mem_WID,
        m_axi_mem_WUSER => linear_100_1_1_false_U0_m_axi_mem_WUSER,
        m_axi_mem_ARVALID => linear_100_1_1_false_U0_m_axi_mem_ARVALID,
        m_axi_mem_ARREADY => ap_const_logic_0,
        m_axi_mem_ARADDR => linear_100_1_1_false_U0_m_axi_mem_ARADDR,
        m_axi_mem_ARID => linear_100_1_1_false_U0_m_axi_mem_ARID,
        m_axi_mem_ARLEN => linear_100_1_1_false_U0_m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE => linear_100_1_1_false_U0_m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST => linear_100_1_1_false_U0_m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK => linear_100_1_1_false_U0_m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE => linear_100_1_1_false_U0_m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT => linear_100_1_1_false_U0_m_axi_mem_ARPROT,
        m_axi_mem_ARQOS => linear_100_1_1_false_U0_m_axi_mem_ARQOS,
        m_axi_mem_ARREGION => linear_100_1_1_false_U0_m_axi_mem_ARREGION,
        m_axi_mem_ARUSER => linear_100_1_1_false_U0_m_axi_mem_ARUSER,
        m_axi_mem_RVALID => ap_const_logic_0,
        m_axi_mem_RREADY => linear_100_1_1_false_U0_m_axi_mem_RREADY,
        m_axi_mem_RDATA => ap_const_lv1024_lc_1,
        m_axi_mem_RLAST => ap_const_logic_0,
        m_axi_mem_RID => ap_const_lv1_0,
        m_axi_mem_RUSER => ap_const_lv1_0,
        m_axi_mem_RRESP => ap_const_lv2_0,
        m_axi_mem_BVALID => m_axi_mem_BVALID,
        m_axi_mem_BREADY => linear_100_1_1_false_U0_m_axi_mem_BREADY,
        m_axi_mem_BRESP => m_axi_mem_BRESP,
        m_axi_mem_BID => m_axi_mem_BID,
        m_axi_mem_BUSER => m_axi_mem_BUSER,
        output_r_dout => result_c_dout,
        output_r_empty_n => result_c_empty_n,
        output_r_read => linear_100_1_1_false_U0_output_r_read,
        graph_pred_bias_V_0 => graph_pred_bias_V_0,
        graph_pred_weights_V_0_0 => graph_pred_weights_V_0_0,
        graph_pred_weights_V_0_1 => graph_pred_weights_V_0_1,
        graph_pred_weights_V_0_2 => graph_pred_weights_V_0_2,
        graph_pred_weights_V_0_3 => graph_pred_weights_V_0_3,
        graph_pred_weights_V_0_4 => graph_pred_weights_V_0_4,
        graph_pred_weights_V_0_5 => graph_pred_weights_V_0_5,
        graph_pred_weights_V_0_6 => graph_pred_weights_V_0_6,
        graph_pred_weights_V_0_7 => graph_pred_weights_V_0_7,
        graph_pred_weights_V_0_8 => graph_pred_weights_V_0_8,
        graph_pred_weights_V_0_9 => graph_pred_weights_V_0_9,
        graph_pred_weights_V_0_10 => graph_pred_weights_V_0_10,
        graph_pred_weights_V_0_11 => graph_pred_weights_V_0_11,
        graph_pred_weights_V_0_12 => graph_pred_weights_V_0_12,
        graph_pred_weights_V_0_13 => graph_pred_weights_V_0_13,
        graph_pred_weights_V_0_14 => graph_pred_weights_V_0_14,
        graph_pred_weights_V_0_15 => graph_pred_weights_V_0_15,
        graph_pred_weights_V_0_16 => graph_pred_weights_V_0_16,
        graph_pred_weights_V_0_17 => graph_pred_weights_V_0_17,
        graph_pred_weights_V_0_18 => graph_pred_weights_V_0_18,
        graph_pred_weights_V_0_19 => graph_pred_weights_V_0_19,
        graph_pred_weights_V_0_20 => graph_pred_weights_V_0_20,
        graph_pred_weights_V_0_21 => graph_pred_weights_V_0_21,
        graph_pred_weights_V_0_22 => graph_pred_weights_V_0_22,
        graph_pred_weights_V_0_23 => graph_pred_weights_V_0_23,
        graph_pred_weights_V_0_24 => graph_pred_weights_V_0_24,
        graph_pred_weights_V_0_25 => graph_pred_weights_V_0_25,
        graph_pred_weights_V_0_26 => graph_pred_weights_V_0_26,
        graph_pred_weights_V_0_27 => graph_pred_weights_V_0_27,
        graph_pred_weights_V_0_28 => graph_pred_weights_V_0_28,
        graph_pred_weights_V_0_29 => graph_pred_weights_V_0_29,
        graph_pred_weights_V_0_30 => graph_pred_weights_V_0_30,
        graph_pred_weights_V_0_31 => graph_pred_weights_V_0_31,
        graph_pred_weights_V_0_32 => graph_pred_weights_V_0_32,
        graph_pred_weights_V_0_33 => graph_pred_weights_V_0_33,
        graph_pred_weights_V_0_34 => graph_pred_weights_V_0_34,
        graph_pred_weights_V_0_35 => graph_pred_weights_V_0_35,
        graph_pred_weights_V_0_36 => graph_pred_weights_V_0_36,
        graph_pred_weights_V_0_37 => graph_pred_weights_V_0_37,
        graph_pred_weights_V_0_38 => graph_pred_weights_V_0_38,
        graph_pred_weights_V_0_39 => graph_pred_weights_V_0_39,
        graph_pred_weights_V_0_40 => graph_pred_weights_V_0_40,
        graph_pred_weights_V_0_41 => graph_pred_weights_V_0_41,
        graph_pred_weights_V_0_42 => graph_pred_weights_V_0_42,
        graph_pred_weights_V_0_43 => graph_pred_weights_V_0_43,
        graph_pred_weights_V_0_44 => graph_pred_weights_V_0_44,
        graph_pred_weights_V_0_45 => graph_pred_weights_V_0_45,
        graph_pred_weights_V_0_46 => graph_pred_weights_V_0_46,
        graph_pred_weights_V_0_47 => graph_pred_weights_V_0_47,
        graph_pred_weights_V_0_48 => graph_pred_weights_V_0_48,
        graph_pred_weights_V_0_49 => graph_pred_weights_V_0_49,
        graph_pred_weights_V_0_50 => graph_pred_weights_V_0_50,
        graph_pred_weights_V_0_51 => graph_pred_weights_V_0_51,
        graph_pred_weights_V_0_52 => graph_pred_weights_V_0_52,
        graph_pred_weights_V_0_53 => graph_pred_weights_V_0_53,
        graph_pred_weights_V_0_54 => graph_pred_weights_V_0_54,
        graph_pred_weights_V_0_55 => graph_pred_weights_V_0_55,
        graph_pred_weights_V_0_56 => graph_pred_weights_V_0_56,
        graph_pred_weights_V_0_57 => graph_pred_weights_V_0_57,
        graph_pred_weights_V_0_58 => graph_pred_weights_V_0_58,
        graph_pred_weights_V_0_59 => graph_pred_weights_V_0_59,
        graph_pred_weights_V_0_60 => graph_pred_weights_V_0_60,
        graph_pred_weights_V_0_61 => graph_pred_weights_V_0_61,
        graph_pred_weights_V_0_62 => graph_pred_weights_V_0_62,
        graph_pred_weights_V_0_63 => graph_pred_weights_V_0_63,
        graph_pred_weights_V_0_64 => graph_pred_weights_V_0_64,
        graph_pred_weights_V_0_65 => graph_pred_weights_V_0_65,
        graph_pred_weights_V_0_66 => graph_pred_weights_V_0_66,
        graph_pred_weights_V_0_67 => graph_pred_weights_V_0_67,
        graph_pred_weights_V_0_68 => graph_pred_weights_V_0_68,
        graph_pred_weights_V_0_69 => graph_pred_weights_V_0_69,
        graph_pred_weights_V_0_70 => graph_pred_weights_V_0_70,
        graph_pred_weights_V_0_71 => graph_pred_weights_V_0_71,
        graph_pred_weights_V_0_72 => graph_pred_weights_V_0_72,
        graph_pred_weights_V_0_73 => graph_pred_weights_V_0_73,
        graph_pred_weights_V_0_74 => graph_pred_weights_V_0_74,
        graph_pred_weights_V_0_75 => graph_pred_weights_V_0_75,
        graph_pred_weights_V_0_76 => graph_pred_weights_V_0_76,
        graph_pred_weights_V_0_77 => graph_pred_weights_V_0_77,
        graph_pred_weights_V_0_78 => graph_pred_weights_V_0_78,
        graph_pred_weights_V_0_79 => graph_pred_weights_V_0_79,
        graph_pred_weights_V_0_80 => graph_pred_weights_V_0_80,
        graph_pred_weights_V_0_81 => graph_pred_weights_V_0_81,
        graph_pred_weights_V_0_82 => graph_pred_weights_V_0_82,
        graph_pred_weights_V_0_83 => graph_pred_weights_V_0_83,
        graph_pred_weights_V_0_84 => graph_pred_weights_V_0_84,
        graph_pred_weights_V_0_85 => graph_pred_weights_V_0_85,
        graph_pred_weights_V_0_86 => graph_pred_weights_V_0_86,
        graph_pred_weights_V_0_87 => graph_pred_weights_V_0_87,
        graph_pred_weights_V_0_88 => graph_pred_weights_V_0_88,
        graph_pred_weights_V_0_89 => graph_pred_weights_V_0_89,
        graph_pred_weights_V_0_90 => graph_pred_weights_V_0_90,
        graph_pred_weights_V_0_91 => graph_pred_weights_V_0_91,
        graph_pred_weights_V_0_92 => graph_pred_weights_V_0_92,
        graph_pred_weights_V_0_93 => graph_pred_weights_V_0_93,
        graph_pred_weights_V_0_94 => graph_pred_weights_V_0_94,
        graph_pred_weights_V_0_95 => graph_pred_weights_V_0_95,
        graph_pred_weights_V_0_96 => graph_pred_weights_V_0_96,
        graph_pred_weights_V_0_97 => graph_pred_weights_V_0_97,
        graph_pred_weights_V_0_98 => graph_pred_weights_V_0_98,
        graph_pred_weights_V_0_99 => graph_pred_weights_V_0_99);

    result_c_U : component GIN_compute_graphs_fifo_w64_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc78_U0_result_c_din,
        if_full_n => result_c_full_n,
        if_write => entry_proc78_U0_result_c_write,
        if_dout => result_c_dout,
        if_empty_n => result_c_empty_n,
        if_read => linear_100_1_1_false_U0_output_r_read);

    h_graph_V_0_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_0,
        if_full_n => h_graph_V_0_full_n,
        if_write => ap_channel_done_h_graph_V_0,
        if_dout => h_graph_V_0_dout,
        if_empty_n => h_graph_V_0_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_1_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_1,
        if_full_n => h_graph_V_1_full_n,
        if_write => ap_channel_done_h_graph_V_1,
        if_dout => h_graph_V_1_dout,
        if_empty_n => h_graph_V_1_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_2_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_2,
        if_full_n => h_graph_V_2_full_n,
        if_write => ap_channel_done_h_graph_V_2,
        if_dout => h_graph_V_2_dout,
        if_empty_n => h_graph_V_2_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_3_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_3,
        if_full_n => h_graph_V_3_full_n,
        if_write => ap_channel_done_h_graph_V_3,
        if_dout => h_graph_V_3_dout,
        if_empty_n => h_graph_V_3_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_4_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_4,
        if_full_n => h_graph_V_4_full_n,
        if_write => ap_channel_done_h_graph_V_4,
        if_dout => h_graph_V_4_dout,
        if_empty_n => h_graph_V_4_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_5_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_5,
        if_full_n => h_graph_V_5_full_n,
        if_write => ap_channel_done_h_graph_V_5,
        if_dout => h_graph_V_5_dout,
        if_empty_n => h_graph_V_5_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_6_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_6,
        if_full_n => h_graph_V_6_full_n,
        if_write => ap_channel_done_h_graph_V_6,
        if_dout => h_graph_V_6_dout,
        if_empty_n => h_graph_V_6_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_7_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_7,
        if_full_n => h_graph_V_7_full_n,
        if_write => ap_channel_done_h_graph_V_7,
        if_dout => h_graph_V_7_dout,
        if_empty_n => h_graph_V_7_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_8_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_8,
        if_full_n => h_graph_V_8_full_n,
        if_write => ap_channel_done_h_graph_V_8,
        if_dout => h_graph_V_8_dout,
        if_empty_n => h_graph_V_8_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_9_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_9,
        if_full_n => h_graph_V_9_full_n,
        if_write => ap_channel_done_h_graph_V_9,
        if_dout => h_graph_V_9_dout,
        if_empty_n => h_graph_V_9_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_10_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_10,
        if_full_n => h_graph_V_10_full_n,
        if_write => ap_channel_done_h_graph_V_10,
        if_dout => h_graph_V_10_dout,
        if_empty_n => h_graph_V_10_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_11_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_11,
        if_full_n => h_graph_V_11_full_n,
        if_write => ap_channel_done_h_graph_V_11,
        if_dout => h_graph_V_11_dout,
        if_empty_n => h_graph_V_11_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_12_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_12,
        if_full_n => h_graph_V_12_full_n,
        if_write => ap_channel_done_h_graph_V_12,
        if_dout => h_graph_V_12_dout,
        if_empty_n => h_graph_V_12_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_13_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_13,
        if_full_n => h_graph_V_13_full_n,
        if_write => ap_channel_done_h_graph_V_13,
        if_dout => h_graph_V_13_dout,
        if_empty_n => h_graph_V_13_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_14_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_14,
        if_full_n => h_graph_V_14_full_n,
        if_write => ap_channel_done_h_graph_V_14,
        if_dout => h_graph_V_14_dout,
        if_empty_n => h_graph_V_14_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_15_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_15,
        if_full_n => h_graph_V_15_full_n,
        if_write => ap_channel_done_h_graph_V_15,
        if_dout => h_graph_V_15_dout,
        if_empty_n => h_graph_V_15_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_16_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_16,
        if_full_n => h_graph_V_16_full_n,
        if_write => ap_channel_done_h_graph_V_16,
        if_dout => h_graph_V_16_dout,
        if_empty_n => h_graph_V_16_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_17_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_17,
        if_full_n => h_graph_V_17_full_n,
        if_write => ap_channel_done_h_graph_V_17,
        if_dout => h_graph_V_17_dout,
        if_empty_n => h_graph_V_17_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_18_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_18,
        if_full_n => h_graph_V_18_full_n,
        if_write => ap_channel_done_h_graph_V_18,
        if_dout => h_graph_V_18_dout,
        if_empty_n => h_graph_V_18_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_19_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_19,
        if_full_n => h_graph_V_19_full_n,
        if_write => ap_channel_done_h_graph_V_19,
        if_dout => h_graph_V_19_dout,
        if_empty_n => h_graph_V_19_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_20_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_20,
        if_full_n => h_graph_V_20_full_n,
        if_write => ap_channel_done_h_graph_V_20,
        if_dout => h_graph_V_20_dout,
        if_empty_n => h_graph_V_20_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_21_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_21,
        if_full_n => h_graph_V_21_full_n,
        if_write => ap_channel_done_h_graph_V_21,
        if_dout => h_graph_V_21_dout,
        if_empty_n => h_graph_V_21_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_22_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_22,
        if_full_n => h_graph_V_22_full_n,
        if_write => ap_channel_done_h_graph_V_22,
        if_dout => h_graph_V_22_dout,
        if_empty_n => h_graph_V_22_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_23_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_23,
        if_full_n => h_graph_V_23_full_n,
        if_write => ap_channel_done_h_graph_V_23,
        if_dout => h_graph_V_23_dout,
        if_empty_n => h_graph_V_23_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_24_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_24,
        if_full_n => h_graph_V_24_full_n,
        if_write => ap_channel_done_h_graph_V_24,
        if_dout => h_graph_V_24_dout,
        if_empty_n => h_graph_V_24_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_25_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_25,
        if_full_n => h_graph_V_25_full_n,
        if_write => ap_channel_done_h_graph_V_25,
        if_dout => h_graph_V_25_dout,
        if_empty_n => h_graph_V_25_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_26_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_26,
        if_full_n => h_graph_V_26_full_n,
        if_write => ap_channel_done_h_graph_V_26,
        if_dout => h_graph_V_26_dout,
        if_empty_n => h_graph_V_26_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_27_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_27,
        if_full_n => h_graph_V_27_full_n,
        if_write => ap_channel_done_h_graph_V_27,
        if_dout => h_graph_V_27_dout,
        if_empty_n => h_graph_V_27_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_28_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_28,
        if_full_n => h_graph_V_28_full_n,
        if_write => ap_channel_done_h_graph_V_28,
        if_dout => h_graph_V_28_dout,
        if_empty_n => h_graph_V_28_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_29_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_29,
        if_full_n => h_graph_V_29_full_n,
        if_write => ap_channel_done_h_graph_V_29,
        if_dout => h_graph_V_29_dout,
        if_empty_n => h_graph_V_29_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_30_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_30,
        if_full_n => h_graph_V_30_full_n,
        if_write => ap_channel_done_h_graph_V_30,
        if_dout => h_graph_V_30_dout,
        if_empty_n => h_graph_V_30_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_31_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_31,
        if_full_n => h_graph_V_31_full_n,
        if_write => ap_channel_done_h_graph_V_31,
        if_dout => h_graph_V_31_dout,
        if_empty_n => h_graph_V_31_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_32_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_32,
        if_full_n => h_graph_V_32_full_n,
        if_write => ap_channel_done_h_graph_V_32,
        if_dout => h_graph_V_32_dout,
        if_empty_n => h_graph_V_32_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_33_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_33,
        if_full_n => h_graph_V_33_full_n,
        if_write => ap_channel_done_h_graph_V_33,
        if_dout => h_graph_V_33_dout,
        if_empty_n => h_graph_V_33_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_34_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_34,
        if_full_n => h_graph_V_34_full_n,
        if_write => ap_channel_done_h_graph_V_34,
        if_dout => h_graph_V_34_dout,
        if_empty_n => h_graph_V_34_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_35_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_35,
        if_full_n => h_graph_V_35_full_n,
        if_write => ap_channel_done_h_graph_V_35,
        if_dout => h_graph_V_35_dout,
        if_empty_n => h_graph_V_35_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_36_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_36,
        if_full_n => h_graph_V_36_full_n,
        if_write => ap_channel_done_h_graph_V_36,
        if_dout => h_graph_V_36_dout,
        if_empty_n => h_graph_V_36_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_37_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_37,
        if_full_n => h_graph_V_37_full_n,
        if_write => ap_channel_done_h_graph_V_37,
        if_dout => h_graph_V_37_dout,
        if_empty_n => h_graph_V_37_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_38_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_38,
        if_full_n => h_graph_V_38_full_n,
        if_write => ap_channel_done_h_graph_V_38,
        if_dout => h_graph_V_38_dout,
        if_empty_n => h_graph_V_38_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_39_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_39,
        if_full_n => h_graph_V_39_full_n,
        if_write => ap_channel_done_h_graph_V_39,
        if_dout => h_graph_V_39_dout,
        if_empty_n => h_graph_V_39_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_40_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_40,
        if_full_n => h_graph_V_40_full_n,
        if_write => ap_channel_done_h_graph_V_40,
        if_dout => h_graph_V_40_dout,
        if_empty_n => h_graph_V_40_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_41_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_41,
        if_full_n => h_graph_V_41_full_n,
        if_write => ap_channel_done_h_graph_V_41,
        if_dout => h_graph_V_41_dout,
        if_empty_n => h_graph_V_41_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_42_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_42,
        if_full_n => h_graph_V_42_full_n,
        if_write => ap_channel_done_h_graph_V_42,
        if_dout => h_graph_V_42_dout,
        if_empty_n => h_graph_V_42_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_43_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_43,
        if_full_n => h_graph_V_43_full_n,
        if_write => ap_channel_done_h_graph_V_43,
        if_dout => h_graph_V_43_dout,
        if_empty_n => h_graph_V_43_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_44_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_44,
        if_full_n => h_graph_V_44_full_n,
        if_write => ap_channel_done_h_graph_V_44,
        if_dout => h_graph_V_44_dout,
        if_empty_n => h_graph_V_44_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_45_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_45,
        if_full_n => h_graph_V_45_full_n,
        if_write => ap_channel_done_h_graph_V_45,
        if_dout => h_graph_V_45_dout,
        if_empty_n => h_graph_V_45_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_46_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_46,
        if_full_n => h_graph_V_46_full_n,
        if_write => ap_channel_done_h_graph_V_46,
        if_dout => h_graph_V_46_dout,
        if_empty_n => h_graph_V_46_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_47_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_47,
        if_full_n => h_graph_V_47_full_n,
        if_write => ap_channel_done_h_graph_V_47,
        if_dout => h_graph_V_47_dout,
        if_empty_n => h_graph_V_47_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_48_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_48,
        if_full_n => h_graph_V_48_full_n,
        if_write => ap_channel_done_h_graph_V_48,
        if_dout => h_graph_V_48_dout,
        if_empty_n => h_graph_V_48_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_49_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_49,
        if_full_n => h_graph_V_49_full_n,
        if_write => ap_channel_done_h_graph_V_49,
        if_dout => h_graph_V_49_dout,
        if_empty_n => h_graph_V_49_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_50_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_50,
        if_full_n => h_graph_V_50_full_n,
        if_write => ap_channel_done_h_graph_V_50,
        if_dout => h_graph_V_50_dout,
        if_empty_n => h_graph_V_50_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_51_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_51,
        if_full_n => h_graph_V_51_full_n,
        if_write => ap_channel_done_h_graph_V_51,
        if_dout => h_graph_V_51_dout,
        if_empty_n => h_graph_V_51_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_52_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_52,
        if_full_n => h_graph_V_52_full_n,
        if_write => ap_channel_done_h_graph_V_52,
        if_dout => h_graph_V_52_dout,
        if_empty_n => h_graph_V_52_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_53_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_53,
        if_full_n => h_graph_V_53_full_n,
        if_write => ap_channel_done_h_graph_V_53,
        if_dout => h_graph_V_53_dout,
        if_empty_n => h_graph_V_53_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_54_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_54,
        if_full_n => h_graph_V_54_full_n,
        if_write => ap_channel_done_h_graph_V_54,
        if_dout => h_graph_V_54_dout,
        if_empty_n => h_graph_V_54_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_55_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_55,
        if_full_n => h_graph_V_55_full_n,
        if_write => ap_channel_done_h_graph_V_55,
        if_dout => h_graph_V_55_dout,
        if_empty_n => h_graph_V_55_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_56_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_56,
        if_full_n => h_graph_V_56_full_n,
        if_write => ap_channel_done_h_graph_V_56,
        if_dout => h_graph_V_56_dout,
        if_empty_n => h_graph_V_56_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_57_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_57,
        if_full_n => h_graph_V_57_full_n,
        if_write => ap_channel_done_h_graph_V_57,
        if_dout => h_graph_V_57_dout,
        if_empty_n => h_graph_V_57_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_58_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_58,
        if_full_n => h_graph_V_58_full_n,
        if_write => ap_channel_done_h_graph_V_58,
        if_dout => h_graph_V_58_dout,
        if_empty_n => h_graph_V_58_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_59_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_59,
        if_full_n => h_graph_V_59_full_n,
        if_write => ap_channel_done_h_graph_V_59,
        if_dout => h_graph_V_59_dout,
        if_empty_n => h_graph_V_59_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_60_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_60,
        if_full_n => h_graph_V_60_full_n,
        if_write => ap_channel_done_h_graph_V_60,
        if_dout => h_graph_V_60_dout,
        if_empty_n => h_graph_V_60_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_61_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_61,
        if_full_n => h_graph_V_61_full_n,
        if_write => ap_channel_done_h_graph_V_61,
        if_dout => h_graph_V_61_dout,
        if_empty_n => h_graph_V_61_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_62_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_62,
        if_full_n => h_graph_V_62_full_n,
        if_write => ap_channel_done_h_graph_V_62,
        if_dout => h_graph_V_62_dout,
        if_empty_n => h_graph_V_62_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_63_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_63,
        if_full_n => h_graph_V_63_full_n,
        if_write => ap_channel_done_h_graph_V_63,
        if_dout => h_graph_V_63_dout,
        if_empty_n => h_graph_V_63_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_64_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_64,
        if_full_n => h_graph_V_64_full_n,
        if_write => ap_channel_done_h_graph_V_64,
        if_dout => h_graph_V_64_dout,
        if_empty_n => h_graph_V_64_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_65_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_65,
        if_full_n => h_graph_V_65_full_n,
        if_write => ap_channel_done_h_graph_V_65,
        if_dout => h_graph_V_65_dout,
        if_empty_n => h_graph_V_65_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_66_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_66,
        if_full_n => h_graph_V_66_full_n,
        if_write => ap_channel_done_h_graph_V_66,
        if_dout => h_graph_V_66_dout,
        if_empty_n => h_graph_V_66_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_67_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_67,
        if_full_n => h_graph_V_67_full_n,
        if_write => ap_channel_done_h_graph_V_67,
        if_dout => h_graph_V_67_dout,
        if_empty_n => h_graph_V_67_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_68_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_68,
        if_full_n => h_graph_V_68_full_n,
        if_write => ap_channel_done_h_graph_V_68,
        if_dout => h_graph_V_68_dout,
        if_empty_n => h_graph_V_68_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_69_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_69,
        if_full_n => h_graph_V_69_full_n,
        if_write => ap_channel_done_h_graph_V_69,
        if_dout => h_graph_V_69_dout,
        if_empty_n => h_graph_V_69_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_70_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_70,
        if_full_n => h_graph_V_70_full_n,
        if_write => ap_channel_done_h_graph_V_70,
        if_dout => h_graph_V_70_dout,
        if_empty_n => h_graph_V_70_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_71_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_71,
        if_full_n => h_graph_V_71_full_n,
        if_write => ap_channel_done_h_graph_V_71,
        if_dout => h_graph_V_71_dout,
        if_empty_n => h_graph_V_71_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_72_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_72,
        if_full_n => h_graph_V_72_full_n,
        if_write => ap_channel_done_h_graph_V_72,
        if_dout => h_graph_V_72_dout,
        if_empty_n => h_graph_V_72_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_73_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_73,
        if_full_n => h_graph_V_73_full_n,
        if_write => ap_channel_done_h_graph_V_73,
        if_dout => h_graph_V_73_dout,
        if_empty_n => h_graph_V_73_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_74_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_74,
        if_full_n => h_graph_V_74_full_n,
        if_write => ap_channel_done_h_graph_V_74,
        if_dout => h_graph_V_74_dout,
        if_empty_n => h_graph_V_74_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_75_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_75,
        if_full_n => h_graph_V_75_full_n,
        if_write => ap_channel_done_h_graph_V_75,
        if_dout => h_graph_V_75_dout,
        if_empty_n => h_graph_V_75_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_76_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_76,
        if_full_n => h_graph_V_76_full_n,
        if_write => ap_channel_done_h_graph_V_76,
        if_dout => h_graph_V_76_dout,
        if_empty_n => h_graph_V_76_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_77_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_77,
        if_full_n => h_graph_V_77_full_n,
        if_write => ap_channel_done_h_graph_V_77,
        if_dout => h_graph_V_77_dout,
        if_empty_n => h_graph_V_77_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_78_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_78,
        if_full_n => h_graph_V_78_full_n,
        if_write => ap_channel_done_h_graph_V_78,
        if_dout => h_graph_V_78_dout,
        if_empty_n => h_graph_V_78_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_79_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_79,
        if_full_n => h_graph_V_79_full_n,
        if_write => ap_channel_done_h_graph_V_79,
        if_dout => h_graph_V_79_dout,
        if_empty_n => h_graph_V_79_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_80_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_80,
        if_full_n => h_graph_V_80_full_n,
        if_write => ap_channel_done_h_graph_V_80,
        if_dout => h_graph_V_80_dout,
        if_empty_n => h_graph_V_80_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_81_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_81,
        if_full_n => h_graph_V_81_full_n,
        if_write => ap_channel_done_h_graph_V_81,
        if_dout => h_graph_V_81_dout,
        if_empty_n => h_graph_V_81_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_82_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_82,
        if_full_n => h_graph_V_82_full_n,
        if_write => ap_channel_done_h_graph_V_82,
        if_dout => h_graph_V_82_dout,
        if_empty_n => h_graph_V_82_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_83_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_83,
        if_full_n => h_graph_V_83_full_n,
        if_write => ap_channel_done_h_graph_V_83,
        if_dout => h_graph_V_83_dout,
        if_empty_n => h_graph_V_83_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_84_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_84,
        if_full_n => h_graph_V_84_full_n,
        if_write => ap_channel_done_h_graph_V_84,
        if_dout => h_graph_V_84_dout,
        if_empty_n => h_graph_V_84_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_85_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_85,
        if_full_n => h_graph_V_85_full_n,
        if_write => ap_channel_done_h_graph_V_85,
        if_dout => h_graph_V_85_dout,
        if_empty_n => h_graph_V_85_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_86_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_86,
        if_full_n => h_graph_V_86_full_n,
        if_write => ap_channel_done_h_graph_V_86,
        if_dout => h_graph_V_86_dout,
        if_empty_n => h_graph_V_86_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_87_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_87,
        if_full_n => h_graph_V_87_full_n,
        if_write => ap_channel_done_h_graph_V_87,
        if_dout => h_graph_V_87_dout,
        if_empty_n => h_graph_V_87_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_88_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_88,
        if_full_n => h_graph_V_88_full_n,
        if_write => ap_channel_done_h_graph_V_88,
        if_dout => h_graph_V_88_dout,
        if_empty_n => h_graph_V_88_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_89_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_89,
        if_full_n => h_graph_V_89_full_n,
        if_write => ap_channel_done_h_graph_V_89,
        if_dout => h_graph_V_89_dout,
        if_empty_n => h_graph_V_89_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_90_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_90,
        if_full_n => h_graph_V_90_full_n,
        if_write => ap_channel_done_h_graph_V_90,
        if_dout => h_graph_V_90_dout,
        if_empty_n => h_graph_V_90_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_91_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_91,
        if_full_n => h_graph_V_91_full_n,
        if_write => ap_channel_done_h_graph_V_91,
        if_dout => h_graph_V_91_dout,
        if_empty_n => h_graph_V_91_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_92_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_92,
        if_full_n => h_graph_V_92_full_n,
        if_write => ap_channel_done_h_graph_V_92,
        if_dout => h_graph_V_92_dout,
        if_empty_n => h_graph_V_92_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_93_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_93,
        if_full_n => h_graph_V_93_full_n,
        if_write => ap_channel_done_h_graph_V_93,
        if_dout => h_graph_V_93_dout,
        if_empty_n => h_graph_V_93_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_94_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_94,
        if_full_n => h_graph_V_94_full_n,
        if_write => ap_channel_done_h_graph_V_94,
        if_dout => h_graph_V_94_dout,
        if_empty_n => h_graph_V_94_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_95_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_95,
        if_full_n => h_graph_V_95_full_n,
        if_write => ap_channel_done_h_graph_V_95,
        if_dout => h_graph_V_95_dout,
        if_empty_n => h_graph_V_95_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_96_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_96,
        if_full_n => h_graph_V_96_full_n,
        if_write => ap_channel_done_h_graph_V_96,
        if_dout => h_graph_V_96_dout,
        if_empty_n => h_graph_V_96_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_97_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_97,
        if_full_n => h_graph_V_97_full_n,
        if_write => ap_channel_done_h_graph_V_97,
        if_dout => h_graph_V_97_dout,
        if_empty_n => h_graph_V_97_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_98_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_98,
        if_full_n => h_graph_V_98_full_n,
        if_write => ap_channel_done_h_graph_V_98,
        if_dout => h_graph_V_98_dout,
        if_empty_n => h_graph_V_98_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);

    h_graph_V_99_U : component GIN_compute_graphs_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => global_mean_pooling_U0_ap_return_99,
        if_full_n => h_graph_V_99_full_n,
        if_write => ap_channel_done_h_graph_V_99,
        if_dout => h_graph_V_99_dout,
        if_empty_n => h_graph_V_99_empty_n,
        if_read => linear_100_1_1_false_U0_ap_ready);





    ap_sync_reg_channel_write_h_graph_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_0 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_0 <= ap_sync_channel_write_h_graph_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_1 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_1 <= ap_sync_channel_write_h_graph_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_10 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_10 <= ap_sync_channel_write_h_graph_V_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_11 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_11 <= ap_sync_channel_write_h_graph_V_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_12 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_12 <= ap_sync_channel_write_h_graph_V_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_13 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_13 <= ap_sync_channel_write_h_graph_V_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_14 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_14 <= ap_sync_channel_write_h_graph_V_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_15 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_15 <= ap_sync_channel_write_h_graph_V_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_16 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_16 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_16 <= ap_sync_channel_write_h_graph_V_16;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_17 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_17 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_17 <= ap_sync_channel_write_h_graph_V_17;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_18 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_18 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_18 <= ap_sync_channel_write_h_graph_V_18;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_19 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_19 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_19 <= ap_sync_channel_write_h_graph_V_19;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_2 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_2 <= ap_sync_channel_write_h_graph_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_20 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_20 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_20 <= ap_sync_channel_write_h_graph_V_20;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_21 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_21 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_21 <= ap_sync_channel_write_h_graph_V_21;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_22 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_22 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_22 <= ap_sync_channel_write_h_graph_V_22;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_23 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_23 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_23 <= ap_sync_channel_write_h_graph_V_23;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_24 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_24 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_24 <= ap_sync_channel_write_h_graph_V_24;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_25 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_25 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_25 <= ap_sync_channel_write_h_graph_V_25;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_26 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_26 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_26 <= ap_sync_channel_write_h_graph_V_26;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_27 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_27 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_27 <= ap_sync_channel_write_h_graph_V_27;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_28 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_28 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_28 <= ap_sync_channel_write_h_graph_V_28;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_29 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_29 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_29 <= ap_sync_channel_write_h_graph_V_29;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_3 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_3 <= ap_sync_channel_write_h_graph_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_30 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_30 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_30 <= ap_sync_channel_write_h_graph_V_30;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_31 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_31 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_31 <= ap_sync_channel_write_h_graph_V_31;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_32 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_32 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_32 <= ap_sync_channel_write_h_graph_V_32;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_33 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_33 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_33 <= ap_sync_channel_write_h_graph_V_33;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_34 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_34 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_34 <= ap_sync_channel_write_h_graph_V_34;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_35 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_35 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_35 <= ap_sync_channel_write_h_graph_V_35;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_36 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_36 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_36 <= ap_sync_channel_write_h_graph_V_36;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_37 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_37 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_37 <= ap_sync_channel_write_h_graph_V_37;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_38 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_38 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_38 <= ap_sync_channel_write_h_graph_V_38;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_39 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_39 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_39 <= ap_sync_channel_write_h_graph_V_39;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_4 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_4 <= ap_sync_channel_write_h_graph_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_40 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_40 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_40 <= ap_sync_channel_write_h_graph_V_40;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_41 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_41 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_41 <= ap_sync_channel_write_h_graph_V_41;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_42 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_42 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_42 <= ap_sync_channel_write_h_graph_V_42;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_43 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_43 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_43 <= ap_sync_channel_write_h_graph_V_43;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_44 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_44 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_44 <= ap_sync_channel_write_h_graph_V_44;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_45 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_45 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_45 <= ap_sync_channel_write_h_graph_V_45;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_46 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_46 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_46 <= ap_sync_channel_write_h_graph_V_46;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_47 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_47 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_47 <= ap_sync_channel_write_h_graph_V_47;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_48 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_48 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_48 <= ap_sync_channel_write_h_graph_V_48;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_49 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_49 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_49 <= ap_sync_channel_write_h_graph_V_49;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_5 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_5 <= ap_sync_channel_write_h_graph_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_50 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_50 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_50 <= ap_sync_channel_write_h_graph_V_50;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_51 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_51 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_51 <= ap_sync_channel_write_h_graph_V_51;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_52 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_52 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_52 <= ap_sync_channel_write_h_graph_V_52;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_53 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_53 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_53 <= ap_sync_channel_write_h_graph_V_53;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_54 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_54 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_54 <= ap_sync_channel_write_h_graph_V_54;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_55 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_55 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_55 <= ap_sync_channel_write_h_graph_V_55;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_56 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_56 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_56 <= ap_sync_channel_write_h_graph_V_56;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_57 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_57 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_57 <= ap_sync_channel_write_h_graph_V_57;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_58 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_58 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_58 <= ap_sync_channel_write_h_graph_V_58;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_59 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_59 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_59 <= ap_sync_channel_write_h_graph_V_59;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_6 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_6 <= ap_sync_channel_write_h_graph_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_60 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_60 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_60 <= ap_sync_channel_write_h_graph_V_60;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_61_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_61 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_61 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_61 <= ap_sync_channel_write_h_graph_V_61;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_62_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_62 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_62 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_62 <= ap_sync_channel_write_h_graph_V_62;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_63_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_63 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_63 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_63 <= ap_sync_channel_write_h_graph_V_63;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_64_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_64 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_64 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_64 <= ap_sync_channel_write_h_graph_V_64;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_65_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_65 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_65 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_65 <= ap_sync_channel_write_h_graph_V_65;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_66_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_66 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_66 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_66 <= ap_sync_channel_write_h_graph_V_66;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_67_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_67 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_67 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_67 <= ap_sync_channel_write_h_graph_V_67;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_68_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_68 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_68 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_68 <= ap_sync_channel_write_h_graph_V_68;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_69_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_69 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_69 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_69 <= ap_sync_channel_write_h_graph_V_69;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_7 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_7 <= ap_sync_channel_write_h_graph_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_70_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_70 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_70 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_70 <= ap_sync_channel_write_h_graph_V_70;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_71_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_71 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_71 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_71 <= ap_sync_channel_write_h_graph_V_71;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_72_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_72 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_72 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_72 <= ap_sync_channel_write_h_graph_V_72;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_73_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_73 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_73 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_73 <= ap_sync_channel_write_h_graph_V_73;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_74_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_74 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_74 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_74 <= ap_sync_channel_write_h_graph_V_74;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_75_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_75 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_75 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_75 <= ap_sync_channel_write_h_graph_V_75;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_76_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_76 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_76 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_76 <= ap_sync_channel_write_h_graph_V_76;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_77_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_77 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_77 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_77 <= ap_sync_channel_write_h_graph_V_77;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_78_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_78 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_78 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_78 <= ap_sync_channel_write_h_graph_V_78;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_79_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_79 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_79 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_79 <= ap_sync_channel_write_h_graph_V_79;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_8 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_8 <= ap_sync_channel_write_h_graph_V_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_80_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_80 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_80 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_80 <= ap_sync_channel_write_h_graph_V_80;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_81_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_81 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_81 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_81 <= ap_sync_channel_write_h_graph_V_81;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_82_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_82 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_82 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_82 <= ap_sync_channel_write_h_graph_V_82;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_83_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_83 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_83 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_83 <= ap_sync_channel_write_h_graph_V_83;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_84_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_84 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_84 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_84 <= ap_sync_channel_write_h_graph_V_84;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_85_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_85 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_85 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_85 <= ap_sync_channel_write_h_graph_V_85;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_86_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_86 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_86 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_86 <= ap_sync_channel_write_h_graph_V_86;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_87_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_87 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_87 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_87 <= ap_sync_channel_write_h_graph_V_87;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_88_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_88 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_88 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_88 <= ap_sync_channel_write_h_graph_V_88;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_89_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_89 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_89 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_89 <= ap_sync_channel_write_h_graph_V_89;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_9 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_9 <= ap_sync_channel_write_h_graph_V_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_90_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_90 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_90 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_90 <= ap_sync_channel_write_h_graph_V_90;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_91_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_91 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_91 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_91 <= ap_sync_channel_write_h_graph_V_91;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_92_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_92 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_92 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_92 <= ap_sync_channel_write_h_graph_V_92;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_93_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_93 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_93 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_93 <= ap_sync_channel_write_h_graph_V_93;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_94_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_94 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_94 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_94 <= ap_sync_channel_write_h_graph_V_94;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_95_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_95 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_95 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_95 <= ap_sync_channel_write_h_graph_V_95;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_96_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_96 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_96 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_96 <= ap_sync_channel_write_h_graph_V_96;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_97_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_97 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_97 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_97 <= ap_sync_channel_write_h_graph_V_97;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_98_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_98 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_98 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_98 <= ap_sync_channel_write_h_graph_V_98;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_h_graph_V_99_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h_graph_V_99 <= ap_const_logic_0;
            else
                if (((global_mean_pooling_U0_ap_done and global_mean_pooling_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h_graph_V_99 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h_graph_V_99 <= ap_sync_channel_write_h_graph_V_99;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc78_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc78_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc78_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc78_U0_ap_ready <= ap_sync_entry_proc78_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_global_mean_pooling_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_global_mean_pooling_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_global_mean_pooling_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_global_mean_pooling_U0_ap_ready <= ap_sync_global_mean_pooling_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_linear_100_1_1_false_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_linear_100_1_1_false_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_linear_100_1_1_false_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_linear_100_1_1_false_U0_ap_ready <= ap_sync_linear_100_1_1_false_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_h_graph_V_0 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_0 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_1 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_1 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_10 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_10 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_11 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_11 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_12 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_12 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_13 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_13 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_14 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_14 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_15 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_15 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_16 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_16 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_17 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_17 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_18 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_18 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_19 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_19 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_2 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_2 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_20 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_20 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_21 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_21 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_22 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_22 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_23 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_23 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_24 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_24 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_25 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_25 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_26 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_26 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_27 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_27 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_28 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_28 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_29 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_29 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_3 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_3 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_30 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_30 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_31 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_31 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_32 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_32 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_33 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_33 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_34 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_34 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_35 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_35 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_36 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_36 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_37 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_37 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_38 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_38 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_39 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_39 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_4 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_4 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_40 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_40 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_41 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_41 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_42 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_42 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_43 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_43 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_44 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_44 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_45 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_45 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_46 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_46 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_47 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_47 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_48 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_48 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_49 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_49 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_5 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_5 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_50 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_50 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_51 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_51 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_52 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_52 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_53 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_53 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_54 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_54 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_55 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_55 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_56 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_56 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_57 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_57 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_58 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_58 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_59 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_59 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_6 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_6 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_60 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_60 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_61 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_61 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_62 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_62 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_63 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_63 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_64 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_64 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_65 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_65 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_66 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_66 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_67 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_67 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_68 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_68 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_69 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_69 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_7 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_7 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_70 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_70 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_71 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_71 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_72 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_72 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_73 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_73 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_74 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_74 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_75 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_75 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_76 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_76 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_77 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_77 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_78 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_78 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_79 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_79 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_8 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_8 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_80 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_80 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_81 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_81 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_82 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_82 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_83 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_83 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_84 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_84 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_85 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_85 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_86 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_86 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_87 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_87 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_88 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_88 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_89 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_89 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_9 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_9 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_90 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_90 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_91 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_91 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_92 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_92 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_93 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_93 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_94 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_94 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_95 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_95 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_96 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_96 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_97 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_97 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_98 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_98 xor ap_const_logic_1));
    ap_channel_done_h_graph_V_99 <= (global_mean_pooling_U0_ap_done and (ap_sync_reg_channel_write_h_graph_V_99 xor ap_const_logic_1));
    ap_done <= linear_100_1_1_false_U0_ap_done;
    ap_idle <= (linear_100_1_1_false_U0_ap_idle and global_mean_pooling_U0_ap_idle and (h_graph_V_99_empty_n xor ap_const_logic_1) and (h_graph_V_98_empty_n xor ap_const_logic_1) and (h_graph_V_97_empty_n xor ap_const_logic_1) and (h_graph_V_96_empty_n xor ap_const_logic_1) and (h_graph_V_95_empty_n xor ap_const_logic_1) and (h_graph_V_94_empty_n xor ap_const_logic_1) and (h_graph_V_93_empty_n xor ap_const_logic_1) and (h_graph_V_92_empty_n xor ap_const_logic_1) and (h_graph_V_91_empty_n xor ap_const_logic_1) and (h_graph_V_90_empty_n xor ap_const_logic_1) and (h_graph_V_89_empty_n xor ap_const_logic_1) and (h_graph_V_88_empty_n xor ap_const_logic_1) and (h_graph_V_87_empty_n xor ap_const_logic_1) and (h_graph_V_86_empty_n xor ap_const_logic_1) and (h_graph_V_85_empty_n xor ap_const_logic_1) and (h_graph_V_84_empty_n xor ap_const_logic_1) and (h_graph_V_83_empty_n xor ap_const_logic_1) and (h_graph_V_82_empty_n xor ap_const_logic_1) and (h_graph_V_81_empty_n xor ap_const_logic_1) and (h_graph_V_80_empty_n xor ap_const_logic_1) and (h_graph_V_79_empty_n xor ap_const_logic_1) and (h_graph_V_78_empty_n xor ap_const_logic_1) and (h_graph_V_77_empty_n xor ap_const_logic_1) and (h_graph_V_76_empty_n xor ap_const_logic_1) and (h_graph_V_75_empty_n xor ap_const_logic_1) and (h_graph_V_74_empty_n xor ap_const_logic_1) and (h_graph_V_73_empty_n xor ap_const_logic_1) and (h_graph_V_72_empty_n xor ap_const_logic_1) and (h_graph_V_71_empty_n xor ap_const_logic_1) and (h_graph_V_70_empty_n xor ap_const_logic_1) and (h_graph_V_69_empty_n xor ap_const_logic_1) and (h_graph_V_68_empty_n xor ap_const_logic_1) and (h_graph_V_67_empty_n xor ap_const_logic_1) and (h_graph_V_66_empty_n xor ap_const_logic_1) and (h_graph_V_65_empty_n xor ap_const_logic_1) and (h_graph_V_64_empty_n xor ap_const_logic_1) and (h_graph_V_63_empty_n xor ap_const_logic_1) and (h_graph_V_62_empty_n xor ap_const_logic_1) and (h_graph_V_61_empty_n xor ap_const_logic_1) and (h_graph_V_60_empty_n xor ap_const_logic_1) and (h_graph_V_59_empty_n xor ap_const_logic_1) and (h_graph_V_58_empty_n xor ap_const_logic_1) and (h_graph_V_57_empty_n xor ap_const_logic_1) and (h_graph_V_56_empty_n xor ap_const_logic_1) and (h_graph_V_55_empty_n xor ap_const_logic_1) and (h_graph_V_54_empty_n xor ap_const_logic_1) and (h_graph_V_53_empty_n xor ap_const_logic_1) and (h_graph_V_52_empty_n xor ap_const_logic_1) and (h_graph_V_51_empty_n xor ap_const_logic_1) and (h_graph_V_50_empty_n xor ap_const_logic_1) and (h_graph_V_49_empty_n xor ap_const_logic_1) and (h_graph_V_48_empty_n xor ap_const_logic_1) and (h_graph_V_47_empty_n xor ap_const_logic_1) and (h_graph_V_46_empty_n xor ap_const_logic_1) and (h_graph_V_45_empty_n xor ap_const_logic_1) and (h_graph_V_44_empty_n xor ap_const_logic_1) and (h_graph_V_43_empty_n xor ap_const_logic_1) and (h_graph_V_42_empty_n xor ap_const_logic_1) and (h_graph_V_41_empty_n xor ap_const_logic_1) and (h_graph_V_40_empty_n xor ap_const_logic_1) and (h_graph_V_39_empty_n xor ap_const_logic_1) and (h_graph_V_38_empty_n xor ap_const_logic_1) and (h_graph_V_37_empty_n xor ap_const_logic_1) and (h_graph_V_36_empty_n xor ap_const_logic_1) and (h_graph_V_35_empty_n xor ap_const_logic_1) and (h_graph_V_34_empty_n xor ap_const_logic_1) and (h_graph_V_33_empty_n xor ap_const_logic_1) and (h_graph_V_32_empty_n xor ap_const_logic_1) and (h_graph_V_31_empty_n xor ap_const_logic_1) and (h_graph_V_30_empty_n xor ap_const_logic_1) and (h_graph_V_29_empty_n xor ap_const_logic_1) and (h_graph_V_28_empty_n xor ap_const_logic_1) and (h_graph_V_27_empty_n xor ap_const_logic_1) and (h_graph_V_26_empty_n xor ap_const_logic_1) and (h_graph_V_25_empty_n xor ap_const_logic_1) and (h_graph_V_24_empty_n xor ap_const_logic_1) and (h_graph_V_23_empty_n xor ap_const_logic_1) and (h_graph_V_22_empty_n xor ap_const_logic_1) and (h_graph_V_21_empty_n xor ap_const_logic_1) and (h_graph_V_20_empty_n xor ap_const_logic_1) and (h_graph_V_19_empty_n xor ap_const_logic_1) and (h_graph_V_18_empty_n xor ap_const_logic_1) and (h_graph_V_17_empty_n xor ap_const_logic_1) and (h_graph_V_16_empty_n xor ap_const_logic_1) and (h_graph_V_15_empty_n xor ap_const_logic_1) and (h_graph_V_14_empty_n xor ap_const_logic_1) and (h_graph_V_13_empty_n xor ap_const_logic_1) and (h_graph_V_12_empty_n xor ap_const_logic_1) and (h_graph_V_11_empty_n xor ap_const_logic_1) and (h_graph_V_10_empty_n xor ap_const_logic_1) and (h_graph_V_9_empty_n xor ap_const_logic_1) and (h_graph_V_8_empty_n xor ap_const_logic_1) and (h_graph_V_7_empty_n xor ap_const_logic_1) and (h_graph_V_6_empty_n xor ap_const_logic_1) and (h_graph_V_5_empty_n xor ap_const_logic_1) and (h_graph_V_4_empty_n xor ap_const_logic_1) and (h_graph_V_3_empty_n xor ap_const_logic_1) and (h_graph_V_2_empty_n xor ap_const_logic_1) and (h_graph_V_1_empty_n xor ap_const_logic_1) and (h_graph_V_0_empty_n xor ap_const_logic_1) and entry_proc78_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_h_graph_V_0 <= ((h_graph_V_0_full_n and ap_channel_done_h_graph_V_0) or ap_sync_reg_channel_write_h_graph_V_0);
    ap_sync_channel_write_h_graph_V_1 <= ((h_graph_V_1_full_n and ap_channel_done_h_graph_V_1) or ap_sync_reg_channel_write_h_graph_V_1);
    ap_sync_channel_write_h_graph_V_10 <= ((h_graph_V_10_full_n and ap_channel_done_h_graph_V_10) or ap_sync_reg_channel_write_h_graph_V_10);
    ap_sync_channel_write_h_graph_V_11 <= ((h_graph_V_11_full_n and ap_channel_done_h_graph_V_11) or ap_sync_reg_channel_write_h_graph_V_11);
    ap_sync_channel_write_h_graph_V_12 <= ((h_graph_V_12_full_n and ap_channel_done_h_graph_V_12) or ap_sync_reg_channel_write_h_graph_V_12);
    ap_sync_channel_write_h_graph_V_13 <= ((h_graph_V_13_full_n and ap_channel_done_h_graph_V_13) or ap_sync_reg_channel_write_h_graph_V_13);
    ap_sync_channel_write_h_graph_V_14 <= ((h_graph_V_14_full_n and ap_channel_done_h_graph_V_14) or ap_sync_reg_channel_write_h_graph_V_14);
    ap_sync_channel_write_h_graph_V_15 <= ((h_graph_V_15_full_n and ap_channel_done_h_graph_V_15) or ap_sync_reg_channel_write_h_graph_V_15);
    ap_sync_channel_write_h_graph_V_16 <= ((h_graph_V_16_full_n and ap_channel_done_h_graph_V_16) or ap_sync_reg_channel_write_h_graph_V_16);
    ap_sync_channel_write_h_graph_V_17 <= ((h_graph_V_17_full_n and ap_channel_done_h_graph_V_17) or ap_sync_reg_channel_write_h_graph_V_17);
    ap_sync_channel_write_h_graph_V_18 <= ((h_graph_V_18_full_n and ap_channel_done_h_graph_V_18) or ap_sync_reg_channel_write_h_graph_V_18);
    ap_sync_channel_write_h_graph_V_19 <= ((h_graph_V_19_full_n and ap_channel_done_h_graph_V_19) or ap_sync_reg_channel_write_h_graph_V_19);
    ap_sync_channel_write_h_graph_V_2 <= ((h_graph_V_2_full_n and ap_channel_done_h_graph_V_2) or ap_sync_reg_channel_write_h_graph_V_2);
    ap_sync_channel_write_h_graph_V_20 <= ((h_graph_V_20_full_n and ap_channel_done_h_graph_V_20) or ap_sync_reg_channel_write_h_graph_V_20);
    ap_sync_channel_write_h_graph_V_21 <= ((h_graph_V_21_full_n and ap_channel_done_h_graph_V_21) or ap_sync_reg_channel_write_h_graph_V_21);
    ap_sync_channel_write_h_graph_V_22 <= ((h_graph_V_22_full_n and ap_channel_done_h_graph_V_22) or ap_sync_reg_channel_write_h_graph_V_22);
    ap_sync_channel_write_h_graph_V_23 <= ((h_graph_V_23_full_n and ap_channel_done_h_graph_V_23) or ap_sync_reg_channel_write_h_graph_V_23);
    ap_sync_channel_write_h_graph_V_24 <= ((h_graph_V_24_full_n and ap_channel_done_h_graph_V_24) or ap_sync_reg_channel_write_h_graph_V_24);
    ap_sync_channel_write_h_graph_V_25 <= ((h_graph_V_25_full_n and ap_channel_done_h_graph_V_25) or ap_sync_reg_channel_write_h_graph_V_25);
    ap_sync_channel_write_h_graph_V_26 <= ((h_graph_V_26_full_n and ap_channel_done_h_graph_V_26) or ap_sync_reg_channel_write_h_graph_V_26);
    ap_sync_channel_write_h_graph_V_27 <= ((h_graph_V_27_full_n and ap_channel_done_h_graph_V_27) or ap_sync_reg_channel_write_h_graph_V_27);
    ap_sync_channel_write_h_graph_V_28 <= ((h_graph_V_28_full_n and ap_channel_done_h_graph_V_28) or ap_sync_reg_channel_write_h_graph_V_28);
    ap_sync_channel_write_h_graph_V_29 <= ((h_graph_V_29_full_n and ap_channel_done_h_graph_V_29) or ap_sync_reg_channel_write_h_graph_V_29);
    ap_sync_channel_write_h_graph_V_3 <= ((h_graph_V_3_full_n and ap_channel_done_h_graph_V_3) or ap_sync_reg_channel_write_h_graph_V_3);
    ap_sync_channel_write_h_graph_V_30 <= ((h_graph_V_30_full_n and ap_channel_done_h_graph_V_30) or ap_sync_reg_channel_write_h_graph_V_30);
    ap_sync_channel_write_h_graph_V_31 <= ((h_graph_V_31_full_n and ap_channel_done_h_graph_V_31) or ap_sync_reg_channel_write_h_graph_V_31);
    ap_sync_channel_write_h_graph_V_32 <= ((h_graph_V_32_full_n and ap_channel_done_h_graph_V_32) or ap_sync_reg_channel_write_h_graph_V_32);
    ap_sync_channel_write_h_graph_V_33 <= ((h_graph_V_33_full_n and ap_channel_done_h_graph_V_33) or ap_sync_reg_channel_write_h_graph_V_33);
    ap_sync_channel_write_h_graph_V_34 <= ((h_graph_V_34_full_n and ap_channel_done_h_graph_V_34) or ap_sync_reg_channel_write_h_graph_V_34);
    ap_sync_channel_write_h_graph_V_35 <= ((h_graph_V_35_full_n and ap_channel_done_h_graph_V_35) or ap_sync_reg_channel_write_h_graph_V_35);
    ap_sync_channel_write_h_graph_V_36 <= ((h_graph_V_36_full_n and ap_channel_done_h_graph_V_36) or ap_sync_reg_channel_write_h_graph_V_36);
    ap_sync_channel_write_h_graph_V_37 <= ((h_graph_V_37_full_n and ap_channel_done_h_graph_V_37) or ap_sync_reg_channel_write_h_graph_V_37);
    ap_sync_channel_write_h_graph_V_38 <= ((h_graph_V_38_full_n and ap_channel_done_h_graph_V_38) or ap_sync_reg_channel_write_h_graph_V_38);
    ap_sync_channel_write_h_graph_V_39 <= ((h_graph_V_39_full_n and ap_channel_done_h_graph_V_39) or ap_sync_reg_channel_write_h_graph_V_39);
    ap_sync_channel_write_h_graph_V_4 <= ((h_graph_V_4_full_n and ap_channel_done_h_graph_V_4) or ap_sync_reg_channel_write_h_graph_V_4);
    ap_sync_channel_write_h_graph_V_40 <= ((h_graph_V_40_full_n and ap_channel_done_h_graph_V_40) or ap_sync_reg_channel_write_h_graph_V_40);
    ap_sync_channel_write_h_graph_V_41 <= ((h_graph_V_41_full_n and ap_channel_done_h_graph_V_41) or ap_sync_reg_channel_write_h_graph_V_41);
    ap_sync_channel_write_h_graph_V_42 <= ((h_graph_V_42_full_n and ap_channel_done_h_graph_V_42) or ap_sync_reg_channel_write_h_graph_V_42);
    ap_sync_channel_write_h_graph_V_43 <= ((h_graph_V_43_full_n and ap_channel_done_h_graph_V_43) or ap_sync_reg_channel_write_h_graph_V_43);
    ap_sync_channel_write_h_graph_V_44 <= ((h_graph_V_44_full_n and ap_channel_done_h_graph_V_44) or ap_sync_reg_channel_write_h_graph_V_44);
    ap_sync_channel_write_h_graph_V_45 <= ((h_graph_V_45_full_n and ap_channel_done_h_graph_V_45) or ap_sync_reg_channel_write_h_graph_V_45);
    ap_sync_channel_write_h_graph_V_46 <= ((h_graph_V_46_full_n and ap_channel_done_h_graph_V_46) or ap_sync_reg_channel_write_h_graph_V_46);
    ap_sync_channel_write_h_graph_V_47 <= ((h_graph_V_47_full_n and ap_channel_done_h_graph_V_47) or ap_sync_reg_channel_write_h_graph_V_47);
    ap_sync_channel_write_h_graph_V_48 <= ((h_graph_V_48_full_n and ap_channel_done_h_graph_V_48) or ap_sync_reg_channel_write_h_graph_V_48);
    ap_sync_channel_write_h_graph_V_49 <= ((h_graph_V_49_full_n and ap_channel_done_h_graph_V_49) or ap_sync_reg_channel_write_h_graph_V_49);
    ap_sync_channel_write_h_graph_V_5 <= ((h_graph_V_5_full_n and ap_channel_done_h_graph_V_5) or ap_sync_reg_channel_write_h_graph_V_5);
    ap_sync_channel_write_h_graph_V_50 <= ((h_graph_V_50_full_n and ap_channel_done_h_graph_V_50) or ap_sync_reg_channel_write_h_graph_V_50);
    ap_sync_channel_write_h_graph_V_51 <= ((h_graph_V_51_full_n and ap_channel_done_h_graph_V_51) or ap_sync_reg_channel_write_h_graph_V_51);
    ap_sync_channel_write_h_graph_V_52 <= ((h_graph_V_52_full_n and ap_channel_done_h_graph_V_52) or ap_sync_reg_channel_write_h_graph_V_52);
    ap_sync_channel_write_h_graph_V_53 <= ((h_graph_V_53_full_n and ap_channel_done_h_graph_V_53) or ap_sync_reg_channel_write_h_graph_V_53);
    ap_sync_channel_write_h_graph_V_54 <= ((h_graph_V_54_full_n and ap_channel_done_h_graph_V_54) or ap_sync_reg_channel_write_h_graph_V_54);
    ap_sync_channel_write_h_graph_V_55 <= ((h_graph_V_55_full_n and ap_channel_done_h_graph_V_55) or ap_sync_reg_channel_write_h_graph_V_55);
    ap_sync_channel_write_h_graph_V_56 <= ((h_graph_V_56_full_n and ap_channel_done_h_graph_V_56) or ap_sync_reg_channel_write_h_graph_V_56);
    ap_sync_channel_write_h_graph_V_57 <= ((h_graph_V_57_full_n and ap_channel_done_h_graph_V_57) or ap_sync_reg_channel_write_h_graph_V_57);
    ap_sync_channel_write_h_graph_V_58 <= ((h_graph_V_58_full_n and ap_channel_done_h_graph_V_58) or ap_sync_reg_channel_write_h_graph_V_58);
    ap_sync_channel_write_h_graph_V_59 <= ((h_graph_V_59_full_n and ap_channel_done_h_graph_V_59) or ap_sync_reg_channel_write_h_graph_V_59);
    ap_sync_channel_write_h_graph_V_6 <= ((h_graph_V_6_full_n and ap_channel_done_h_graph_V_6) or ap_sync_reg_channel_write_h_graph_V_6);
    ap_sync_channel_write_h_graph_V_60 <= ((h_graph_V_60_full_n and ap_channel_done_h_graph_V_60) or ap_sync_reg_channel_write_h_graph_V_60);
    ap_sync_channel_write_h_graph_V_61 <= ((h_graph_V_61_full_n and ap_channel_done_h_graph_V_61) or ap_sync_reg_channel_write_h_graph_V_61);
    ap_sync_channel_write_h_graph_V_62 <= ((h_graph_V_62_full_n and ap_channel_done_h_graph_V_62) or ap_sync_reg_channel_write_h_graph_V_62);
    ap_sync_channel_write_h_graph_V_63 <= ((h_graph_V_63_full_n and ap_channel_done_h_graph_V_63) or ap_sync_reg_channel_write_h_graph_V_63);
    ap_sync_channel_write_h_graph_V_64 <= ((h_graph_V_64_full_n and ap_channel_done_h_graph_V_64) or ap_sync_reg_channel_write_h_graph_V_64);
    ap_sync_channel_write_h_graph_V_65 <= ((h_graph_V_65_full_n and ap_channel_done_h_graph_V_65) or ap_sync_reg_channel_write_h_graph_V_65);
    ap_sync_channel_write_h_graph_V_66 <= ((h_graph_V_66_full_n and ap_channel_done_h_graph_V_66) or ap_sync_reg_channel_write_h_graph_V_66);
    ap_sync_channel_write_h_graph_V_67 <= ((h_graph_V_67_full_n and ap_channel_done_h_graph_V_67) or ap_sync_reg_channel_write_h_graph_V_67);
    ap_sync_channel_write_h_graph_V_68 <= ((h_graph_V_68_full_n and ap_channel_done_h_graph_V_68) or ap_sync_reg_channel_write_h_graph_V_68);
    ap_sync_channel_write_h_graph_V_69 <= ((h_graph_V_69_full_n and ap_channel_done_h_graph_V_69) or ap_sync_reg_channel_write_h_graph_V_69);
    ap_sync_channel_write_h_graph_V_7 <= ((h_graph_V_7_full_n and ap_channel_done_h_graph_V_7) or ap_sync_reg_channel_write_h_graph_V_7);
    ap_sync_channel_write_h_graph_V_70 <= ((h_graph_V_70_full_n and ap_channel_done_h_graph_V_70) or ap_sync_reg_channel_write_h_graph_V_70);
    ap_sync_channel_write_h_graph_V_71 <= ((h_graph_V_71_full_n and ap_channel_done_h_graph_V_71) or ap_sync_reg_channel_write_h_graph_V_71);
    ap_sync_channel_write_h_graph_V_72 <= ((h_graph_V_72_full_n and ap_channel_done_h_graph_V_72) or ap_sync_reg_channel_write_h_graph_V_72);
    ap_sync_channel_write_h_graph_V_73 <= ((h_graph_V_73_full_n and ap_channel_done_h_graph_V_73) or ap_sync_reg_channel_write_h_graph_V_73);
    ap_sync_channel_write_h_graph_V_74 <= ((h_graph_V_74_full_n and ap_channel_done_h_graph_V_74) or ap_sync_reg_channel_write_h_graph_V_74);
    ap_sync_channel_write_h_graph_V_75 <= ((h_graph_V_75_full_n and ap_channel_done_h_graph_V_75) or ap_sync_reg_channel_write_h_graph_V_75);
    ap_sync_channel_write_h_graph_V_76 <= ((h_graph_V_76_full_n and ap_channel_done_h_graph_V_76) or ap_sync_reg_channel_write_h_graph_V_76);
    ap_sync_channel_write_h_graph_V_77 <= ((h_graph_V_77_full_n and ap_channel_done_h_graph_V_77) or ap_sync_reg_channel_write_h_graph_V_77);
    ap_sync_channel_write_h_graph_V_78 <= ((h_graph_V_78_full_n and ap_channel_done_h_graph_V_78) or ap_sync_reg_channel_write_h_graph_V_78);
    ap_sync_channel_write_h_graph_V_79 <= ((h_graph_V_79_full_n and ap_channel_done_h_graph_V_79) or ap_sync_reg_channel_write_h_graph_V_79);
    ap_sync_channel_write_h_graph_V_8 <= ((h_graph_V_8_full_n and ap_channel_done_h_graph_V_8) or ap_sync_reg_channel_write_h_graph_V_8);
    ap_sync_channel_write_h_graph_V_80 <= ((h_graph_V_80_full_n and ap_channel_done_h_graph_V_80) or ap_sync_reg_channel_write_h_graph_V_80);
    ap_sync_channel_write_h_graph_V_81 <= ((h_graph_V_81_full_n and ap_channel_done_h_graph_V_81) or ap_sync_reg_channel_write_h_graph_V_81);
    ap_sync_channel_write_h_graph_V_82 <= ((h_graph_V_82_full_n and ap_channel_done_h_graph_V_82) or ap_sync_reg_channel_write_h_graph_V_82);
    ap_sync_channel_write_h_graph_V_83 <= ((h_graph_V_83_full_n and ap_channel_done_h_graph_V_83) or ap_sync_reg_channel_write_h_graph_V_83);
    ap_sync_channel_write_h_graph_V_84 <= ((h_graph_V_84_full_n and ap_channel_done_h_graph_V_84) or ap_sync_reg_channel_write_h_graph_V_84);
    ap_sync_channel_write_h_graph_V_85 <= ((h_graph_V_85_full_n and ap_channel_done_h_graph_V_85) or ap_sync_reg_channel_write_h_graph_V_85);
    ap_sync_channel_write_h_graph_V_86 <= ((h_graph_V_86_full_n and ap_channel_done_h_graph_V_86) or ap_sync_reg_channel_write_h_graph_V_86);
    ap_sync_channel_write_h_graph_V_87 <= ((h_graph_V_87_full_n and ap_channel_done_h_graph_V_87) or ap_sync_reg_channel_write_h_graph_V_87);
    ap_sync_channel_write_h_graph_V_88 <= ((h_graph_V_88_full_n and ap_channel_done_h_graph_V_88) or ap_sync_reg_channel_write_h_graph_V_88);
    ap_sync_channel_write_h_graph_V_89 <= ((h_graph_V_89_full_n and ap_channel_done_h_graph_V_89) or ap_sync_reg_channel_write_h_graph_V_89);
    ap_sync_channel_write_h_graph_V_9 <= ((h_graph_V_9_full_n and ap_channel_done_h_graph_V_9) or ap_sync_reg_channel_write_h_graph_V_9);
    ap_sync_channel_write_h_graph_V_90 <= ((h_graph_V_90_full_n and ap_channel_done_h_graph_V_90) or ap_sync_reg_channel_write_h_graph_V_90);
    ap_sync_channel_write_h_graph_V_91 <= ((h_graph_V_91_full_n and ap_channel_done_h_graph_V_91) or ap_sync_reg_channel_write_h_graph_V_91);
    ap_sync_channel_write_h_graph_V_92 <= ((h_graph_V_92_full_n and ap_channel_done_h_graph_V_92) or ap_sync_reg_channel_write_h_graph_V_92);
    ap_sync_channel_write_h_graph_V_93 <= ((h_graph_V_93_full_n and ap_channel_done_h_graph_V_93) or ap_sync_reg_channel_write_h_graph_V_93);
    ap_sync_channel_write_h_graph_V_94 <= ((h_graph_V_94_full_n and ap_channel_done_h_graph_V_94) or ap_sync_reg_channel_write_h_graph_V_94);
    ap_sync_channel_write_h_graph_V_95 <= ((h_graph_V_95_full_n and ap_channel_done_h_graph_V_95) or ap_sync_reg_channel_write_h_graph_V_95);
    ap_sync_channel_write_h_graph_V_96 <= ((h_graph_V_96_full_n and ap_channel_done_h_graph_V_96) or ap_sync_reg_channel_write_h_graph_V_96);
    ap_sync_channel_write_h_graph_V_97 <= ((h_graph_V_97_full_n and ap_channel_done_h_graph_V_97) or ap_sync_reg_channel_write_h_graph_V_97);
    ap_sync_channel_write_h_graph_V_98 <= ((h_graph_V_98_full_n and ap_channel_done_h_graph_V_98) or ap_sync_reg_channel_write_h_graph_V_98);
    ap_sync_channel_write_h_graph_V_99 <= ((h_graph_V_99_full_n and ap_channel_done_h_graph_V_99) or ap_sync_reg_channel_write_h_graph_V_99);
    ap_sync_entry_proc78_U0_ap_ready <= (entry_proc78_U0_ap_ready or ap_sync_reg_entry_proc78_U0_ap_ready);
    ap_sync_global_mean_pooling_U0_ap_ready <= (global_mean_pooling_U0_ap_ready or ap_sync_reg_global_mean_pooling_U0_ap_ready);
    ap_sync_linear_100_1_1_false_U0_ap_ready <= (linear_100_1_1_false_U0_ap_ready or ap_sync_reg_linear_100_1_1_false_U0_ap_ready);
    ap_sync_ready <= (ap_sync_linear_100_1_1_false_U0_ap_ready and ap_sync_global_mean_pooling_U0_ap_ready and ap_sync_entry_proc78_U0_ap_ready);
    embeddings_0_0_0_0_012_read <= global_mean_pooling_U0_embeddings_0_0_0_0_012_read;
    embeddings_0_0_0_0_013_read <= global_mean_pooling_U0_embeddings_0_0_0_0_013_read;
    embeddings_0_0_0_0_01_read <= global_mean_pooling_U0_embeddings_0_0_0_0_01_read;
    embeddings_0_0_0_0_0_read <= global_mean_pooling_U0_embeddings_0_0_0_0_0_read;
    entry_proc78_U0_ap_continue <= ap_const_logic_1;
    entry_proc78_U0_ap_start <= ((ap_sync_reg_entry_proc78_U0_ap_ready xor ap_const_logic_1) and ap_start);
    global_mean_pooling_U0_ap_continue <= (ap_sync_channel_write_h_graph_V_99 and ap_sync_channel_write_h_graph_V_98 and ap_sync_channel_write_h_graph_V_97 and ap_sync_channel_write_h_graph_V_96 and ap_sync_channel_write_h_graph_V_95 and ap_sync_channel_write_h_graph_V_94 and ap_sync_channel_write_h_graph_V_93 and ap_sync_channel_write_h_graph_V_92 and ap_sync_channel_write_h_graph_V_91 and ap_sync_channel_write_h_graph_V_90 and ap_sync_channel_write_h_graph_V_9 and ap_sync_channel_write_h_graph_V_89 and ap_sync_channel_write_h_graph_V_88 and ap_sync_channel_write_h_graph_V_87 and ap_sync_channel_write_h_graph_V_86 and ap_sync_channel_write_h_graph_V_85 and ap_sync_channel_write_h_graph_V_84 and ap_sync_channel_write_h_graph_V_83 and ap_sync_channel_write_h_graph_V_82 and ap_sync_channel_write_h_graph_V_81 and ap_sync_channel_write_h_graph_V_80 and ap_sync_channel_write_h_graph_V_8 and ap_sync_channel_write_h_graph_V_79 and ap_sync_channel_write_h_graph_V_78 and ap_sync_channel_write_h_graph_V_77 and ap_sync_channel_write_h_graph_V_76 and ap_sync_channel_write_h_graph_V_75 and ap_sync_channel_write_h_graph_V_74 and ap_sync_channel_write_h_graph_V_73 and ap_sync_channel_write_h_graph_V_72 and ap_sync_channel_write_h_graph_V_71 and ap_sync_channel_write_h_graph_V_70 and ap_sync_channel_write_h_graph_V_7 and ap_sync_channel_write_h_graph_V_69 and ap_sync_channel_write_h_graph_V_68 and ap_sync_channel_write_h_graph_V_67 and ap_sync_channel_write_h_graph_V_66 and ap_sync_channel_write_h_graph_V_65 and ap_sync_channel_write_h_graph_V_64 and ap_sync_channel_write_h_graph_V_63 and ap_sync_channel_write_h_graph_V_62 and ap_sync_channel_write_h_graph_V_61 and ap_sync_channel_write_h_graph_V_60 and ap_sync_channel_write_h_graph_V_6 and ap_sync_channel_write_h_graph_V_59 and ap_sync_channel_write_h_graph_V_58 and ap_sync_channel_write_h_graph_V_57 and ap_sync_channel_write_h_graph_V_56 and ap_sync_channel_write_h_graph_V_55 and ap_sync_channel_write_h_graph_V_54 and ap_sync_channel_write_h_graph_V_53 and ap_sync_channel_write_h_graph_V_52 and ap_sync_channel_write_h_graph_V_51 and ap_sync_channel_write_h_graph_V_50 and ap_sync_channel_write_h_graph_V_5 and ap_sync_channel_write_h_graph_V_49 and ap_sync_channel_write_h_graph_V_48 and ap_sync_channel_write_h_graph_V_47 and ap_sync_channel_write_h_graph_V_46 and ap_sync_channel_write_h_graph_V_45 and ap_sync_channel_write_h_graph_V_44 and ap_sync_channel_write_h_graph_V_43 and ap_sync_channel_write_h_graph_V_42 and ap_sync_channel_write_h_graph_V_41 and ap_sync_channel_write_h_graph_V_40 and ap_sync_channel_write_h_graph_V_4 and ap_sync_channel_write_h_graph_V_39 and ap_sync_channel_write_h_graph_V_38 and ap_sync_channel_write_h_graph_V_37 and ap_sync_channel_write_h_graph_V_36 and ap_sync_channel_write_h_graph_V_35 and ap_sync_channel_write_h_graph_V_34 and ap_sync_channel_write_h_graph_V_33 and ap_sync_channel_write_h_graph_V_32 and ap_sync_channel_write_h_graph_V_31 and ap_sync_channel_write_h_graph_V_30 and ap_sync_channel_write_h_graph_V_3 and ap_sync_channel_write_h_graph_V_29 and ap_sync_channel_write_h_graph_V_28 and ap_sync_channel_write_h_graph_V_27 and ap_sync_channel_write_h_graph_V_26 and ap_sync_channel_write_h_graph_V_25 and ap_sync_channel_write_h_graph_V_24 and ap_sync_channel_write_h_graph_V_23 and ap_sync_channel_write_h_graph_V_22 and ap_sync_channel_write_h_graph_V_21 and ap_sync_channel_write_h_graph_V_20 and ap_sync_channel_write_h_graph_V_2 and ap_sync_channel_write_h_graph_V_19 and ap_sync_channel_write_h_graph_V_18 and ap_sync_channel_write_h_graph_V_17 and ap_sync_channel_write_h_graph_V_16 and ap_sync_channel_write_h_graph_V_15 and ap_sync_channel_write_h_graph_V_14 and ap_sync_channel_write_h_graph_V_13 and ap_sync_channel_write_h_graph_V_12 and ap_sync_channel_write_h_graph_V_11 and ap_sync_channel_write_h_graph_V_10 and ap_sync_channel_write_h_graph_V_1 and ap_sync_channel_write_h_graph_V_0);
    global_mean_pooling_U0_ap_start <= ((ap_sync_reg_global_mean_pooling_U0_ap_ready xor ap_const_logic_1) and ap_start);
    linear_100_1_1_false_U0_ap_continue <= ap_continue;
    linear_100_1_1_false_U0_ap_start <= (h_graph_V_9_empty_n and h_graph_V_99_empty_n and h_graph_V_98_empty_n and h_graph_V_97_empty_n and h_graph_V_96_empty_n and h_graph_V_95_empty_n and h_graph_V_94_empty_n and h_graph_V_93_empty_n and h_graph_V_92_empty_n and h_graph_V_91_empty_n and h_graph_V_90_empty_n and h_graph_V_8_empty_n and h_graph_V_89_empty_n and h_graph_V_88_empty_n and h_graph_V_87_empty_n and h_graph_V_86_empty_n and h_graph_V_85_empty_n and h_graph_V_84_empty_n and h_graph_V_83_empty_n and h_graph_V_82_empty_n and h_graph_V_81_empty_n and h_graph_V_80_empty_n and h_graph_V_7_empty_n and h_graph_V_79_empty_n and h_graph_V_78_empty_n and h_graph_V_77_empty_n and h_graph_V_76_empty_n and h_graph_V_75_empty_n and h_graph_V_74_empty_n and h_graph_V_73_empty_n and h_graph_V_72_empty_n and h_graph_V_71_empty_n and h_graph_V_70_empty_n and h_graph_V_6_empty_n and h_graph_V_69_empty_n and h_graph_V_68_empty_n and h_graph_V_67_empty_n and h_graph_V_66_empty_n and h_graph_V_65_empty_n and h_graph_V_64_empty_n and h_graph_V_63_empty_n and h_graph_V_62_empty_n and h_graph_V_61_empty_n and h_graph_V_60_empty_n and h_graph_V_5_empty_n and h_graph_V_59_empty_n and h_graph_V_58_empty_n and h_graph_V_57_empty_n and h_graph_V_56_empty_n and h_graph_V_55_empty_n and h_graph_V_54_empty_n and h_graph_V_53_empty_n and h_graph_V_52_empty_n and h_graph_V_51_empty_n and h_graph_V_50_empty_n and h_graph_V_4_empty_n and h_graph_V_49_empty_n and h_graph_V_48_empty_n and h_graph_V_47_empty_n and h_graph_V_46_empty_n and h_graph_V_45_empty_n and h_graph_V_44_empty_n and h_graph_V_43_empty_n and h_graph_V_42_empty_n and h_graph_V_41_empty_n and h_graph_V_40_empty_n and h_graph_V_3_empty_n and h_graph_V_39_empty_n and h_graph_V_38_empty_n and h_graph_V_37_empty_n and h_graph_V_36_empty_n and h_graph_V_35_empty_n and h_graph_V_34_empty_n and h_graph_V_33_empty_n and h_graph_V_32_empty_n and h_graph_V_31_empty_n and h_graph_V_30_empty_n and h_graph_V_2_empty_n and h_graph_V_29_empty_n and h_graph_V_28_empty_n and h_graph_V_27_empty_n and h_graph_V_26_empty_n and h_graph_V_25_empty_n and h_graph_V_24_empty_n and h_graph_V_23_empty_n and h_graph_V_22_empty_n and h_graph_V_21_empty_n and h_graph_V_20_empty_n and h_graph_V_1_empty_n and h_graph_V_19_empty_n and h_graph_V_18_empty_n and h_graph_V_17_empty_n and h_graph_V_16_empty_n and h_graph_V_15_empty_n and h_graph_V_14_empty_n and h_graph_V_13_empty_n and h_graph_V_12_empty_n and h_graph_V_11_empty_n and h_graph_V_10_empty_n and h_graph_V_0_empty_n and (ap_sync_reg_linear_100_1_1_false_U0_ap_ready xor ap_const_logic_1) and ap_start);
    m_axi_mem_ARADDR <= ap_const_lv64_0;
    m_axi_mem_ARBURST <= ap_const_lv2_0;
    m_axi_mem_ARCACHE <= ap_const_lv4_0;
    m_axi_mem_ARID <= ap_const_lv1_0;
    m_axi_mem_ARLEN <= ap_const_lv32_0;
    m_axi_mem_ARLOCK <= ap_const_lv2_0;
    m_axi_mem_ARPROT <= ap_const_lv3_0;
    m_axi_mem_ARQOS <= ap_const_lv4_0;
    m_axi_mem_ARREGION <= ap_const_lv4_0;
    m_axi_mem_ARSIZE <= ap_const_lv3_0;
    m_axi_mem_ARUSER <= ap_const_lv1_0;
    m_axi_mem_ARVALID <= ap_const_logic_0;
    m_axi_mem_AWADDR <= linear_100_1_1_false_U0_m_axi_mem_AWADDR;
    m_axi_mem_AWBURST <= linear_100_1_1_false_U0_m_axi_mem_AWBURST;
    m_axi_mem_AWCACHE <= linear_100_1_1_false_U0_m_axi_mem_AWCACHE;
    m_axi_mem_AWID <= linear_100_1_1_false_U0_m_axi_mem_AWID;
    m_axi_mem_AWLEN <= linear_100_1_1_false_U0_m_axi_mem_AWLEN;
    m_axi_mem_AWLOCK <= linear_100_1_1_false_U0_m_axi_mem_AWLOCK;
    m_axi_mem_AWPROT <= linear_100_1_1_false_U0_m_axi_mem_AWPROT;
    m_axi_mem_AWQOS <= linear_100_1_1_false_U0_m_axi_mem_AWQOS;
    m_axi_mem_AWREGION <= linear_100_1_1_false_U0_m_axi_mem_AWREGION;
    m_axi_mem_AWSIZE <= linear_100_1_1_false_U0_m_axi_mem_AWSIZE;
    m_axi_mem_AWUSER <= linear_100_1_1_false_U0_m_axi_mem_AWUSER;
    m_axi_mem_AWVALID <= linear_100_1_1_false_U0_m_axi_mem_AWVALID;
    m_axi_mem_BREADY <= linear_100_1_1_false_U0_m_axi_mem_BREADY;
    m_axi_mem_RREADY <= ap_const_logic_0;
    m_axi_mem_WDATA <= linear_100_1_1_false_U0_m_axi_mem_WDATA;
    m_axi_mem_WID <= linear_100_1_1_false_U0_m_axi_mem_WID;
    m_axi_mem_WLAST <= linear_100_1_1_false_U0_m_axi_mem_WLAST;
    m_axi_mem_WSTRB <= linear_100_1_1_false_U0_m_axi_mem_WSTRB;
    m_axi_mem_WUSER <= linear_100_1_1_false_U0_m_axi_mem_WUSER;
    m_axi_mem_WVALID <= linear_100_1_1_false_U0_m_axi_mem_WVALID;
end behav;
