-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
-- Version: 2021.1.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_01_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_01_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_01_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_02_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_02_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_02_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_03_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_03_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_03_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_04_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_04_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_04_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_05_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_05_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_05_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_06_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_06_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_06_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_07_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_07_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_07_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_018_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_018_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_018_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_019_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_019_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_019_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0110_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0110_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0110_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0111_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0111_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0111_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0112_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0112_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0112_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0113_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0113_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0113_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0114_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0114_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0114_read : OUT STD_LOGIC;
    embeddings_per_node_0_0_0_0_0115_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    embeddings_per_node_0_0_0_0_0115_empty_n : IN STD_LOGIC;
    embeddings_per_node_0_0_0_0_0115_read : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (35 downto 0);
    mul_ln712 : IN STD_LOGIC_VECTOR (6 downto 0);
    message_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message_ce0 : OUT STD_LOGIC;
    message_we0 : OUT STD_LOGIC;
    message_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message_ce1 : OUT STD_LOGIC;
    message_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message6_ce0 : OUT STD_LOGIC;
    message6_we0 : OUT STD_LOGIC;
    message6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message6_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message6_ce1 : OUT STD_LOGIC;
    message6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message7_ce0 : OUT STD_LOGIC;
    message7_we0 : OUT STD_LOGIC;
    message7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message7_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message7_ce1 : OUT STD_LOGIC;
    message7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message8_ce0 : OUT STD_LOGIC;
    message8_we0 : OUT STD_LOGIC;
    message8_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message8_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message8_ce1 : OUT STD_LOGIC;
    message8_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message9_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message9_ce0 : OUT STD_LOGIC;
    message9_we0 : OUT STD_LOGIC;
    message9_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message9_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message9_ce1 : OUT STD_LOGIC;
    message9_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message10_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message10_ce0 : OUT STD_LOGIC;
    message10_we0 : OUT STD_LOGIC;
    message10_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message10_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message10_ce1 : OUT STD_LOGIC;
    message10_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message11_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message11_ce0 : OUT STD_LOGIC;
    message11_we0 : OUT STD_LOGIC;
    message11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message11_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message11_ce1 : OUT STD_LOGIC;
    message11_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    message12_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message12_ce0 : OUT STD_LOGIC;
    message12_we0 : OUT STD_LOGIC;
    message12_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message12_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    message12_ce1 : OUT STD_LOGIC;
    message12_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_0_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_0_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_0_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_1_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_1_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_2_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_2_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_3_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_3_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    neighbor_tables_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    neighbor_tables_1_0_ce0 : OUT STD_LOGIC;
    neighbor_tables_1_0_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    edge_attrs_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    edge_attrs_1_0_ce0 : OUT STD_LOGIC;
    edge_attrs_1_0_q0 : IN STD_LOGIC_VECTOR (70 downto 0);
    degree_tables_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    degree_tables_1_0_ce0 : OUT STD_LOGIC;
    degree_tables_1_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    edge_embedding_weights_V_0_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_4_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_4_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_5_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_5_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_6_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce0 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce1 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    edge_embedding_weights_V_0_7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    edge_embedding_weights_V_0_7_ce2 : OUT STD_LOGIC;
    edge_embedding_weights_V_0_7_q2 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv36_1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv11_D : STD_LOGIC_VECTOR (10 downto 0) := "00000001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal io_acc_block_signal_op158 : STD_LOGIC;
    signal icmp_ln43_reg_2428 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2428_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2498 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_reg_2502 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op158_read_state4 : BOOLEAN;
    signal io_acc_block_signal_op168 : STD_LOGIC;
    signal ap_predicate_op168_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln43_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal embeddings_per_node_0_0_0_0_01_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_02_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_03_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_04_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_05_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_06_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_07_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_018_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_019_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0110_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0111_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0112_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0113_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0114_blk_n : STD_LOGIC;
    signal embeddings_per_node_0_0_0_0_0115_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal mul_ln712_cast_fu_1119_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln712_cast_reg_2421 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln43_reg_2428_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2428_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2428_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2428_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nd_idx_2_load_reg_2432 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln43_fu_1196_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln43_reg_2438 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln43_reg_2438_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln43_reg_2438_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln43_reg_2438_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln43_14_fu_1212_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln43_14_reg_2445 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln43_4_fu_1236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_4_reg_2453 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_4_reg_2453_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln79_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2468 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2468_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2468_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2468_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2468_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2468_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln712_910_fu_1310_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln712_910_reg_2472 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln712_fu_1315_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln712_reg_2478 : STD_LOGIC_VECTOR (5 downto 0);
    signal idxprom34_165_mid2_v_v_reg_2483 : STD_LOGIC_VECTOR (6 downto 0);
    signal idxprom34_280_mid2_v_v_reg_2488 : STD_LOGIC_VECTOR (6 downto 0);
    signal e_end_fu_1388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_end_reg_2493 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln65_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2498_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2498_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_fu_1408_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln50_fu_1538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_reg_2526 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_71_fu_1549_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln712_71_reg_2538 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln712_71_reg_2538_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_927_fu_1566_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_927_reg_2550 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_928_fu_1572_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_928_reg_2555 : STD_LOGIC_VECTOR (9 downto 0);
    signal neighbor_tables_1_0_load_reg_2575 : STD_LOGIC_VECTOR (6 downto 0);
    signal edge_embed_V_25_reg_2666 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embed_V_25_reg_2666_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_122_fu_1680_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_122_reg_2671 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_122_reg_2671_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embed_V_26_reg_2676 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embed_V_26_reg_2676_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_126_fu_1684_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_126_reg_2681 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_126_reg_2681_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embed_V_27_reg_2686 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embed_V_27_reg_2686_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_130_fu_1688_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_130_reg_2691 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_130_reg_2691_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embed_V_28_reg_2696 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embed_V_28_reg_2696_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_134_fu_1692_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_134_reg_2701 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_134_reg_2701_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_70_fu_1720_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln712_70_reg_2706 : STD_LOGIC_VECTOR (10 downto 0);
    signal message9_addr_reg_2711 : STD_LOGIC_VECTOR (10 downto 0);
    signal message9_addr_reg_2711_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal message10_addr_reg_2717 : STD_LOGIC_VECTOR (10 downto 0);
    signal message10_addr_reg_2717_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal message11_addr_reg_2723 : STD_LOGIC_VECTOR (10 downto 0);
    signal message11_addr_reg_2723_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal message12_addr_reg_2729 : STD_LOGIC_VECTOR (10 downto 0);
    signal message12_addr_reg_2729_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal mp_ins_M_elems_V_0_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_3_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_4_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_5_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_7_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_4_load_reg_2775 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_4_load_1_reg_2780 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_82_fu_1745_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_82_reg_2785 : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embedding_weights_V_0_5_load_reg_2790 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_5_load_1_reg_2795 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_85_fu_1759_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_85_reg_2800 : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embedding_weights_V_0_6_load_reg_2805 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_6_load_1_reg_2810 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_88_fu_1773_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_88_reg_2815 : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embedding_weights_V_0_7_load_reg_2820 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_7_load_1_reg_2825 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_91_fu_1787_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_91_reg_2830 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_911_fu_1863_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_911_reg_2895 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_915_fu_1918_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_915_reg_2900 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_919_fu_1973_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_919_reg_2905 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_923_fu_2028_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_923_reg_2910 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_addr_reg_2915 : STD_LOGIC_VECTOR (10 downto 0);
    signal message_addr_reg_2915_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal message6_addr_reg_2921 : STD_LOGIC_VECTOR (10 downto 0);
    signal message6_addr_reg_2921_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal message7_addr_reg_2927 : STD_LOGIC_VECTOR (10 downto 0);
    signal message7_addr_reg_2927_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal message8_addr_reg_2933 : STD_LOGIC_VECTOR (10 downto 0);
    signal message8_addr_reg_2933_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal edge_embed_V_reg_2939 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_0_load_reg_2944 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_105_fu_2041_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_105_reg_2949 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_106_fu_2045_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_106_reg_2954 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_893_fu_2057_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_893_reg_2959 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_70_fu_2063_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_70_reg_2964 : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embed_V_22_reg_2969 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_1_load_reg_2974 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_109_fu_2069_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_109_reg_2979 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_110_fu_2073_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_110_reg_2984 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_897_fu_2085_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_897_reg_2989 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_73_fu_2091_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_73_reg_2994 : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embed_V_23_reg_2999 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_2_load_reg_3004 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_113_fu_2097_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_113_reg_3009 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_114_fu_2101_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_114_reg_3014 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_901_fu_2113_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_901_reg_3019 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_76_fu_2119_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_76_reg_3024 : STD_LOGIC_VECTOR (14 downto 0);
    signal edge_embed_V_24_reg_3029 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_embedding_weights_V_0_3_load_reg_3034 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_117_fu_2125_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_117_reg_3039 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_118_fu_2129_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_118_reg_3044 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_905_fu_2141_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_905_reg_3049 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_79_fu_2147_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_79_reg_3054 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_895_fu_2191_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_895_reg_3059 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_899_fu_2235_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_899_reg_3064 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_903_fu_2279_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_903_reg_3069 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_907_fu_2323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_907_reg_3074 : STD_LOGIC_VECTOR (15 downto 0);
    signal mp_ins_M_elems_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_0_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_0_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_0_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_1_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_1_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_1_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_2_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_2_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_2_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_3_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_3_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_3_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_4_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_4_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_4_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_5_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_5_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_5_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_6_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_6_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_6_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_6_ce1 : STD_LOGIC;
    signal mp_ins_M_elems_V_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_7_ce0 : STD_LOGIC;
    signal mp_ins_M_elems_V_7_we0 : STD_LOGIC;
    signal mp_ins_M_elems_V_7_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mp_ins_M_elems_V_7_ce1 : STD_LOGIC;
    signal ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_260_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_261_reg_1059 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_262_reg_1069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_263_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_264_reg_1089 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_265_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_266_reg_1109 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln57_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_75_fu_1558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_76_fu_1666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_77_fu_1673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_79_fu_1729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_72_fu_1793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_73_fu_1800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_74_fu_1807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln712_78_fu_2034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal node_nd_2_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal node_nd_fu_1373_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal nd_idx_2_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal nd_idx_fu_1381_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_nd_idx_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal e_end_2_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_e_end_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal e_start_2_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_start_fu_1396_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dim_fu_196 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_1_fu_1264_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_fu_200 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln50_fu_1258_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal e_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_208 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln43_12_fu_1166_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp_ln50_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln43_fu_1184_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln43_fu_1220_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln43_7_fu_1224_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln43_16_fu_1228_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln43_13_fu_1204_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln78_fu_1246_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln43_8_fu_1302_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln712_64_fu_1306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln55_fu_1339_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln43_fu_1299_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln55_fu_1339_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal node_degree_fu_1358_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln55_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal node_nd_5_fu_1354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal nd_idx_5_fu_1349_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_end_fu_1388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_end_5_fu_1368_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl4_cast_fu_1430_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_cast_fu_1437_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_10_fu_1450_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln712_66_fu_1455_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln712_914_fu_1459_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln712_103_fu_1468_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl2_cast_fu_1472_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_1480_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_11_fu_1494_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln712_68_fu_1499_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln712_918_fu_1503_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln712_104_fu_1512_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_1516_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_fu_1524_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln712_10_fu_1444_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_926_fu_1552_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln712_11_fu_1488_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln712_12_fu_1532_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_1703_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_1696_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln712_63_fu_1710_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln712_fu_1714_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln712_930_fu_1723_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln712_123_fu_1737_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_124_fu_1741_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_127_fu_1751_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_128_fu_1755_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_131_fu_1765_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_132_fu_1769_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_135_fu_1779_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_136_fu_1783_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2329_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2337_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2345_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_909_fu_1822_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_908_fu_1818_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_121_fu_1814_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_81_fu_1833_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_25_fu_1827_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_428_fu_1843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_83_fu_1838_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_28_fu_1851_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_25_fu_1859_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_913_fu_1877_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_912_fu_1873_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_125_fu_1869_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_84_fu_1888_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_26_fu_1882_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_429_fu_1898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_86_fu_1893_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_29_fu_1906_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_26_fu_1914_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_917_fu_1932_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_916_fu_1928_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_129_fu_1924_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_87_fu_1943_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_27_fu_1937_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_430_fu_1953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_89_fu_1948_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_30_fu_1961_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_27_fu_1969_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_921_fu_1987_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_920_fu_1983_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln712_133_fu_1979_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln89_90_fu_1998_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_28_fu_1992_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_431_fu_2008_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_92_fu_2003_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_31_fu_2016_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_28_fu_2024_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2353_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln712_107_fu_2049_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_108_fu_2053_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_111_fu_2077_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_112_fu_2081_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_115_fu_2105_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_116_fu_2109_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_119_fu_2133_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln712_120_fu_2137_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln712_fu_2153_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_fu_2162_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_fu_2157_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_2171_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_71_fu_2166_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_fu_2179_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_fu_2187_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_896_fu_2197_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_72_fu_2206_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_22_fu_2201_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_425_fu_2215_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_74_fu_2210_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_25_fu_2223_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_22_fu_2231_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_900_fu_2241_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_75_fu_2250_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_23_fu_2245_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_426_fu_2259_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_77_fu_2254_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_26_fu_2267_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_23_fu_2275_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln712_904_fu_2285_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_78_fu_2294_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal total_embed_V_24_fu_2289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_427_fu_2303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_80_fu_2298_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_27_fu_2311_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln712_24_fu_2319_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2329_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2329_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2329_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2337_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2337_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2337_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2345_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2345_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2345_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2353_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2353_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2353_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2329_ce : STD_LOGIC;
    signal grp_fu_2337_ce : STD_LOGIC;
    signal grp_fu_2345_ce : STD_LOGIC;
    signal grp_fu_2353_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_289 : BOOLEAN;
    signal ap_enable_state6_pp0_iter5_stage0 : BOOLEAN;
    signal ap_enable_operation_353 : BOOLEAN;
    signal ap_enable_state7_pp0_iter6_stage0 : BOOLEAN;
    signal ap_enable_operation_442 : BOOLEAN;
    signal ap_enable_state8_pp0_iter7_stage0 : BOOLEAN;
    signal ap_enable_operation_295 : BOOLEAN;
    signal ap_enable_operation_364 : BOOLEAN;
    signal ap_enable_operation_443 : BOOLEAN;
    signal ap_enable_operation_301 : BOOLEAN;
    signal ap_enable_operation_375 : BOOLEAN;
    signal ap_enable_operation_444 : BOOLEAN;
    signal ap_enable_operation_307 : BOOLEAN;
    signal ap_enable_operation_386 : BOOLEAN;
    signal ap_enable_operation_445 : BOOLEAN;
    signal ap_enable_operation_411 : BOOLEAN;
    signal ap_enable_operation_454 : BOOLEAN;
    signal ap_enable_state9_pp0_iter8_stage0 : BOOLEAN;
    signal ap_enable_operation_483 : BOOLEAN;
    signal ap_enable_state10_pp0_iter9_stage0 : BOOLEAN;
    signal ap_enable_operation_421 : BOOLEAN;
    signal ap_enable_operation_463 : BOOLEAN;
    signal ap_enable_operation_484 : BOOLEAN;
    signal ap_enable_operation_431 : BOOLEAN;
    signal ap_enable_operation_472 : BOOLEAN;
    signal ap_enable_operation_485 : BOOLEAN;
    signal ap_enable_operation_441 : BOOLEAN;
    signal ap_enable_operation_481 : BOOLEAN;
    signal ap_enable_operation_486 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_2329_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2337_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2345_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2353_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component GIN_compute_graphs_mac_muladd_7ns_4ns_4ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component GIN_compute_graphs_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mp_ins_M_elems_V_0_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_0_address0,
        ce0 => mp_ins_M_elems_V_0_ce0,
        we0 => mp_ins_M_elems_V_0_we0,
        d0 => ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4,
        address1 => mp_ins_M_elems_V_0_address1,
        ce1 => mp_ins_M_elems_V_0_ce1,
        q1 => mp_ins_M_elems_V_0_q1);

    mp_ins_M_elems_V_1_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_1_address0,
        ce0 => mp_ins_M_elems_V_1_ce0,
        we0 => mp_ins_M_elems_V_1_we0,
        d0 => ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4,
        address1 => mp_ins_M_elems_V_1_address1,
        ce1 => mp_ins_M_elems_V_1_ce1,
        q1 => mp_ins_M_elems_V_1_q1);

    mp_ins_M_elems_V_2_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_2_address0,
        ce0 => mp_ins_M_elems_V_2_ce0,
        we0 => mp_ins_M_elems_V_2_we0,
        d0 => ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4,
        address1 => mp_ins_M_elems_V_2_address1,
        ce1 => mp_ins_M_elems_V_2_ce1,
        q1 => mp_ins_M_elems_V_2_q1);

    mp_ins_M_elems_V_3_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_3_address0,
        ce0 => mp_ins_M_elems_V_3_ce0,
        we0 => mp_ins_M_elems_V_3_we0,
        d0 => ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4,
        address1 => mp_ins_M_elems_V_3_address1,
        ce1 => mp_ins_M_elems_V_3_ce1,
        q1 => mp_ins_M_elems_V_3_q1);

    mp_ins_M_elems_V_4_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_4_address0,
        ce0 => mp_ins_M_elems_V_4_ce0,
        we0 => mp_ins_M_elems_V_4_we0,
        d0 => ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4,
        address1 => mp_ins_M_elems_V_4_address1,
        ce1 => mp_ins_M_elems_V_4_ce1,
        q1 => mp_ins_M_elems_V_4_q1);

    mp_ins_M_elems_V_5_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_5_address0,
        ce0 => mp_ins_M_elems_V_5_ce0,
        we0 => mp_ins_M_elems_V_5_we0,
        d0 => ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4,
        address1 => mp_ins_M_elems_V_5_address1,
        ce1 => mp_ins_M_elems_V_5_ce1,
        q1 => mp_ins_M_elems_V_5_q1);

    mp_ins_M_elems_V_6_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_6_address0,
        ce0 => mp_ins_M_elems_V_6_ce0,
        we0 => mp_ins_M_elems_V_6_we0,
        d0 => ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4,
        address1 => mp_ins_M_elems_V_6_address1,
        ce1 => mp_ins_M_elems_V_6_ce1,
        q1 => mp_ins_M_elems_V_6_q1);

    mp_ins_M_elems_V_7_U : component GIN_compute_graphs_message_passing_pe18_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_50_2_mp_ins_M_elems_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mp_ins_M_elems_V_7_address0,
        ce0 => mp_ins_M_elems_V_7_ce0,
        we0 => mp_ins_M_elems_V_7_we0,
        d0 => ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4,
        address1 => mp_ins_M_elems_V_7_address1,
        ce1 => mp_ins_M_elems_V_7_ce1,
        q1 => mp_ins_M_elems_V_7_q1);

    mac_muladd_8ns_4ns_4ns_10_4_1_U6228 : component GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2329_p0,
        din1 => grp_fu_2329_p1,
        din2 => grp_fu_2329_p2,
        ce => grp_fu_2329_ce,
        dout => grp_fu_2329_p3);

    mac_muladd_8ns_4ns_4ns_10_4_1_U6229 : component GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2337_p0,
        din1 => grp_fu_2337_p1,
        din2 => grp_fu_2337_p2,
        ce => grp_fu_2337_ce,
        dout => grp_fu_2337_p3);

    mac_muladd_8ns_4ns_4ns_10_4_1_U6230 : component GIN_compute_graphs_mac_muladd_8ns_4ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2345_p0,
        din1 => grp_fu_2345_p1,
        din2 => grp_fu_2345_p2,
        ce => grp_fu_2345_ce,
        dout => grp_fu_2345_p3);

    mac_muladd_7ns_4ns_4ns_11_4_1_U6231 : component GIN_compute_graphs_mac_muladd_7ns_4ns_4ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 4,
        din2_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2353_p0,
        din1 => grp_fu_2353_p1,
        din2 => grp_fu_2353_p2,
        ce => grp_fu_2353_ce,
        dout => grp_fu_2353_p3);

    flow_control_loop_pipe_sequential_init_U : component GIN_compute_graphs_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter4_empty_260_reg_1049_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_260_reg_1049 <= ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_260_reg_1049 <= ap_phi_reg_pp0_iter3_empty_260_reg_1049;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_261_reg_1059_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_261_reg_1059 <= ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_261_reg_1059 <= ap_phi_reg_pp0_iter3_empty_261_reg_1059;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_262_reg_1069_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_262_reg_1069 <= ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_262_reg_1069 <= ap_phi_reg_pp0_iter3_empty_262_reg_1069;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_263_reg_1079_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_263_reg_1079 <= ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_263_reg_1079 <= ap_phi_reg_pp0_iter3_empty_263_reg_1079;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_264_reg_1089_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_264_reg_1089 <= ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_264_reg_1089 <= ap_phi_reg_pp0_iter3_empty_264_reg_1089;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_265_reg_1099_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_265_reg_1099 <= ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_265_reg_1099 <= ap_phi_reg_pp0_iter3_empty_265_reg_1099;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_266_reg_1109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_266_reg_1109 <= ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_266_reg_1109 <= ap_phi_reg_pp0_iter3_empty_266_reg_1109;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_empty_reg_1039_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_empty_reg_1039 <= ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_empty_reg_1039 <= ap_phi_reg_pp0_iter3_empty_reg_1039;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_260_reg_1049_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_260_reg_1049 <= mp_ins_M_elems_V_6_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_260_reg_1049 <= ap_phi_reg_pp0_iter5_empty_260_reg_1049;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_261_reg_1059_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_261_reg_1059 <= mp_ins_M_elems_V_5_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_261_reg_1059 <= ap_phi_reg_pp0_iter5_empty_261_reg_1059;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_262_reg_1069_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_262_reg_1069 <= mp_ins_M_elems_V_4_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_262_reg_1069 <= ap_phi_reg_pp0_iter5_empty_262_reg_1069;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_263_reg_1079_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_263_reg_1079 <= mp_ins_M_elems_V_3_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_263_reg_1079 <= ap_phi_reg_pp0_iter5_empty_263_reg_1079;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_264_reg_1089_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_264_reg_1089 <= mp_ins_M_elems_V_2_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_264_reg_1089 <= ap_phi_reg_pp0_iter5_empty_264_reg_1089;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_265_reg_1099_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_265_reg_1099 <= mp_ins_M_elems_V_1_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_265_reg_1099 <= ap_phi_reg_pp0_iter5_empty_265_reg_1099;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_266_reg_1109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_266_reg_1109 <= mp_ins_M_elems_V_0_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_266_reg_1109 <= ap_phi_reg_pp0_iter5_empty_266_reg_1109;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_empty_reg_1039_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln65_reg_2498_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_empty_reg_1039 <= mp_ins_M_elems_V_7_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_empty_reg_1039 <= ap_phi_reg_pp0_iter5_empty_reg_1039;
                end if;
            end if; 
        end if;
    end process;

    dim_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    dim_fu_196 <= ap_const_lv7_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_1161_p2 = ap_const_lv1_0))) then 
                    dim_fu_196 <= add_ln50_1_fu_1264_p2;
                end if;
            end if; 
        end if;
    end process;

    e_end_2_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    e_end_2_fu_188 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    e_end_2_fu_188 <= e_end_reg_2493;
                end if;
            end if; 
        end if;
    end process;

    e_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    e_fu_204 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_1161_p2 = ap_const_lv1_0))) then 
                    e_fu_204 <= select_ln43_14_fu_1212_p3;
                end if;
            end if; 
        end if;
    end process;

    e_start_2_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    e_start_2_fu_192 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    e_start_2_fu_192 <= e_start_fu_1396_p3;
                end if;
            end if; 
        end if;
    end process;

    i_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_200 <= ap_const_lv4_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_1161_p2 = ap_const_lv1_0))) then 
                    i_fu_200 <= add_ln50_fu_1258_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_208 <= ap_const_lv36_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_1161_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_208 <= add_ln43_12_fu_1166_p2;
                end if;
            end if; 
        end if;
    end process;

    nd_idx_2_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    nd_idx_2_fu_184 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    nd_idx_2_fu_184 <= nd_idx_fu_1381_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln712_893_reg_2959 <= add_ln712_893_fu_2057_p2;
                add_ln712_895_reg_3059 <= add_ln712_895_fu_2191_p2;
                add_ln712_897_reg_2989 <= add_ln712_897_fu_2085_p2;
                add_ln712_899_reg_3064 <= add_ln712_899_fu_2235_p2;
                add_ln712_901_reg_3019 <= add_ln712_901_fu_2113_p2;
                add_ln712_903_reg_3069 <= add_ln712_903_fu_2279_p2;
                add_ln712_905_reg_3049 <= add_ln712_905_fu_2141_p2;
                add_ln712_907_reg_3074 <= add_ln712_907_fu_2323_p2;
                add_ln89_70_reg_2964 <= add_ln89_70_fu_2063_p2;
                add_ln89_73_reg_2994 <= add_ln89_73_fu_2091_p2;
                add_ln89_76_reg_3024 <= add_ln89_76_fu_2119_p2;
                add_ln89_79_reg_3054 <= add_ln89_79_fu_2147_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                edge_embed_V_25_reg_2666_pp0_iter5_reg <= edge_embed_V_25_reg_2666;
                edge_embed_V_26_reg_2676_pp0_iter5_reg <= edge_embed_V_26_reg_2676;
                edge_embed_V_27_reg_2686_pp0_iter5_reg <= edge_embed_V_27_reg_2686;
                edge_embed_V_28_reg_2696_pp0_iter5_reg <= edge_embed_V_28_reg_2696;
                icmp_ln43_reg_2428_pp0_iter2_reg <= icmp_ln43_reg_2428;
                icmp_ln43_reg_2428_pp0_iter3_reg <= icmp_ln43_reg_2428_pp0_iter2_reg;
                icmp_ln43_reg_2428_pp0_iter4_reg <= icmp_ln43_reg_2428_pp0_iter3_reg;
                icmp_ln43_reg_2428_pp0_iter5_reg <= icmp_ln43_reg_2428_pp0_iter4_reg;
                icmp_ln43_reg_2428_pp0_iter6_reg <= icmp_ln43_reg_2428_pp0_iter5_reg;
                icmp_ln65_reg_2498_pp0_iter3_reg <= icmp_ln65_reg_2498;
                icmp_ln65_reg_2498_pp0_iter4_reg <= icmp_ln65_reg_2498_pp0_iter3_reg;
                icmp_ln79_reg_2468_pp0_iter2_reg <= icmp_ln79_reg_2468;
                icmp_ln79_reg_2468_pp0_iter3_reg <= icmp_ln79_reg_2468_pp0_iter2_reg;
                icmp_ln79_reg_2468_pp0_iter4_reg <= icmp_ln79_reg_2468_pp0_iter3_reg;
                icmp_ln79_reg_2468_pp0_iter5_reg <= icmp_ln79_reg_2468_pp0_iter4_reg;
                icmp_ln79_reg_2468_pp0_iter6_reg <= icmp_ln79_reg_2468_pp0_iter5_reg;
                message10_addr_reg_2717_pp0_iter6_reg <= message10_addr_reg_2717;
                message11_addr_reg_2723_pp0_iter6_reg <= message11_addr_reg_2723;
                message12_addr_reg_2729_pp0_iter6_reg <= message12_addr_reg_2729;
                message6_addr_reg_2921_pp0_iter8_reg <= message6_addr_reg_2921;
                message7_addr_reg_2927_pp0_iter8_reg <= message7_addr_reg_2927;
                message8_addr_reg_2933_pp0_iter8_reg <= message8_addr_reg_2933;
                message9_addr_reg_2711_pp0_iter6_reg <= message9_addr_reg_2711;
                message_addr_reg_2915_pp0_iter8_reg <= message_addr_reg_2915;
                select_ln43_reg_2438_pp0_iter2_reg <= select_ln43_reg_2438;
                select_ln43_reg_2438_pp0_iter3_reg <= select_ln43_reg_2438_pp0_iter2_reg;
                select_ln43_reg_2438_pp0_iter4_reg <= select_ln43_reg_2438_pp0_iter3_reg;
                trunc_ln712_105_reg_2949 <= trunc_ln712_105_fu_2041_p1;
                trunc_ln712_106_reg_2954 <= trunc_ln712_106_fu_2045_p1;
                trunc_ln712_109_reg_2979 <= trunc_ln712_109_fu_2069_p1;
                trunc_ln712_110_reg_2984 <= trunc_ln712_110_fu_2073_p1;
                trunc_ln712_113_reg_3009 <= trunc_ln712_113_fu_2097_p1;
                trunc_ln712_114_reg_3014 <= trunc_ln712_114_fu_2101_p1;
                trunc_ln712_117_reg_3039 <= trunc_ln712_117_fu_2125_p1;
                trunc_ln712_118_reg_3044 <= trunc_ln712_118_fu_2129_p1;
                trunc_ln712_122_reg_2671_pp0_iter5_reg <= trunc_ln712_122_reg_2671;
                trunc_ln712_126_reg_2681_pp0_iter5_reg <= trunc_ln712_126_reg_2681;
                trunc_ln712_130_reg_2691_pp0_iter5_reg <= trunc_ln712_130_reg_2691;
                trunc_ln712_134_reg_2701_pp0_iter5_reg <= trunc_ln712_134_reg_2701;
                    zext_ln43_4_reg_2453_pp0_iter2_reg(8 downto 0) <= zext_ln43_4_reg_2453(8 downto 0);
                    zext_ln712_71_reg_2538_pp0_iter4_reg(3 downto 0) <= zext_ln712_71_reg_2538(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_2428 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln712_910_reg_2472 <= add_ln712_910_fu_1310_p2;
                e_end_reg_2493 <= e_end_fu_1388_p3;
                icmp_ln65_reg_2498 <= icmp_ln65_fu_1403_p2;
                idxprom34_165_mid2_v_v_reg_2483 <= edge_attrs_1_0_q0(38 downto 32);
                idxprom34_280_mid2_v_v_reg_2488 <= edge_attrs_1_0_q0(70 downto 64);
                trunc_ln712_reg_2478 <= trunc_ln712_fu_1315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_2468_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln712_911_reg_2895 <= add_ln712_911_fu_1863_p2;
                add_ln712_915_reg_2900 <= add_ln712_915_fu_1918_p2;
                add_ln712_919_reg_2905 <= add_ln712_919_fu_1973_p2;
                add_ln712_923_reg_2910 <= add_ln712_923_fu_2028_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln712_927_reg_2550 <= add_ln712_927_fu_1566_p2;
                add_ln712_928_reg_2555 <= add_ln712_928_fu_1572_p2;
                    zext_ln50_reg_2526(3 downto 0) <= zext_ln50_fu_1538_p1(3 downto 0);
                    zext_ln712_71_reg_2538(3 downto 0) <= zext_ln712_71_fu_1549_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_2468_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln89_82_reg_2785 <= add_ln89_82_fu_1745_p2;
                add_ln89_85_reg_2800 <= add_ln89_85_fu_1759_p2;
                add_ln89_88_reg_2815 <= add_ln89_88_fu_1773_p2;
                add_ln89_91_reg_2830 <= add_ln89_91_fu_1787_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln43_reg_2428 <= icmp_ln43_fu_1161_p2;
                    mul_ln712_cast_reg_2421(6 downto 0) <= mul_ln712_cast_fu_1119_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_empty_260_reg_1049 <= ap_phi_reg_pp0_iter0_empty_260_reg_1049;
                ap_phi_reg_pp0_iter1_empty_261_reg_1059 <= ap_phi_reg_pp0_iter0_empty_261_reg_1059;
                ap_phi_reg_pp0_iter1_empty_262_reg_1069 <= ap_phi_reg_pp0_iter0_empty_262_reg_1069;
                ap_phi_reg_pp0_iter1_empty_263_reg_1079 <= ap_phi_reg_pp0_iter0_empty_263_reg_1079;
                ap_phi_reg_pp0_iter1_empty_264_reg_1089 <= ap_phi_reg_pp0_iter0_empty_264_reg_1089;
                ap_phi_reg_pp0_iter1_empty_265_reg_1099 <= ap_phi_reg_pp0_iter0_empty_265_reg_1099;
                ap_phi_reg_pp0_iter1_empty_266_reg_1109 <= ap_phi_reg_pp0_iter0_empty_266_reg_1109;
                ap_phi_reg_pp0_iter1_empty_reg_1039 <= ap_phi_reg_pp0_iter0_empty_reg_1039;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_empty_260_reg_1049 <= ap_phi_reg_pp0_iter1_empty_260_reg_1049;
                ap_phi_reg_pp0_iter2_empty_261_reg_1059 <= ap_phi_reg_pp0_iter1_empty_261_reg_1059;
                ap_phi_reg_pp0_iter2_empty_262_reg_1069 <= ap_phi_reg_pp0_iter1_empty_262_reg_1069;
                ap_phi_reg_pp0_iter2_empty_263_reg_1079 <= ap_phi_reg_pp0_iter1_empty_263_reg_1079;
                ap_phi_reg_pp0_iter2_empty_264_reg_1089 <= ap_phi_reg_pp0_iter1_empty_264_reg_1089;
                ap_phi_reg_pp0_iter2_empty_265_reg_1099 <= ap_phi_reg_pp0_iter1_empty_265_reg_1099;
                ap_phi_reg_pp0_iter2_empty_266_reg_1109 <= ap_phi_reg_pp0_iter1_empty_266_reg_1109;
                ap_phi_reg_pp0_iter2_empty_reg_1039 <= ap_phi_reg_pp0_iter1_empty_reg_1039;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_empty_260_reg_1049 <= ap_phi_reg_pp0_iter2_empty_260_reg_1049;
                ap_phi_reg_pp0_iter3_empty_261_reg_1059 <= ap_phi_reg_pp0_iter2_empty_261_reg_1059;
                ap_phi_reg_pp0_iter3_empty_262_reg_1069 <= ap_phi_reg_pp0_iter2_empty_262_reg_1069;
                ap_phi_reg_pp0_iter3_empty_263_reg_1079 <= ap_phi_reg_pp0_iter2_empty_263_reg_1079;
                ap_phi_reg_pp0_iter3_empty_264_reg_1089 <= ap_phi_reg_pp0_iter2_empty_264_reg_1089;
                ap_phi_reg_pp0_iter3_empty_265_reg_1099 <= ap_phi_reg_pp0_iter2_empty_265_reg_1099;
                ap_phi_reg_pp0_iter3_empty_266_reg_1109 <= ap_phi_reg_pp0_iter2_empty_266_reg_1109;
                ap_phi_reg_pp0_iter3_empty_reg_1039 <= ap_phi_reg_pp0_iter2_empty_reg_1039;
                node_nd_2_fu_180 <= node_nd_fu_1373_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_empty_260_reg_1049 <= ap_phi_reg_pp0_iter4_empty_260_reg_1049;
                ap_phi_reg_pp0_iter5_empty_261_reg_1059 <= ap_phi_reg_pp0_iter4_empty_261_reg_1059;
                ap_phi_reg_pp0_iter5_empty_262_reg_1069 <= ap_phi_reg_pp0_iter4_empty_262_reg_1069;
                ap_phi_reg_pp0_iter5_empty_263_reg_1079 <= ap_phi_reg_pp0_iter4_empty_263_reg_1079;
                ap_phi_reg_pp0_iter5_empty_264_reg_1089 <= ap_phi_reg_pp0_iter4_empty_264_reg_1089;
                ap_phi_reg_pp0_iter5_empty_265_reg_1099 <= ap_phi_reg_pp0_iter4_empty_265_reg_1099;
                ap_phi_reg_pp0_iter5_empty_266_reg_1109 <= ap_phi_reg_pp0_iter4_empty_266_reg_1109;
                ap_phi_reg_pp0_iter5_empty_reg_1039 <= ap_phi_reg_pp0_iter4_empty_reg_1039;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_empty_263_reg_1079 <= ap_phi_reg_pp0_iter6_empty_263_reg_1079;
                ap_phi_reg_pp0_iter7_empty_264_reg_1089 <= ap_phi_reg_pp0_iter6_empty_264_reg_1089;
                ap_phi_reg_pp0_iter7_empty_265_reg_1099 <= ap_phi_reg_pp0_iter6_empty_265_reg_1099;
                ap_phi_reg_pp0_iter7_empty_266_reg_1109 <= ap_phi_reg_pp0_iter6_empty_266_reg_1109;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                edge_embed_V_22_reg_2969 <= edge_embedding_weights_V_0_1_q2;
                edge_embed_V_23_reg_2999 <= edge_embedding_weights_V_0_2_q2;
                edge_embed_V_24_reg_3029 <= edge_embedding_weights_V_0_3_q2;
                edge_embed_V_reg_2939 <= edge_embedding_weights_V_0_0_q2;
                edge_embedding_weights_V_0_0_load_reg_2944 <= edge_embedding_weights_V_0_0_q1;
                edge_embedding_weights_V_0_1_load_reg_2974 <= edge_embedding_weights_V_0_1_q1;
                edge_embedding_weights_V_0_2_load_reg_3004 <= edge_embedding_weights_V_0_2_q1;
                edge_embedding_weights_V_0_3_load_reg_3034 <= edge_embedding_weights_V_0_3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_2468_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                edge_embed_V_25_reg_2666 <= edge_embedding_weights_V_0_4_q2;
                edge_embed_V_26_reg_2676 <= edge_embedding_weights_V_0_5_q2;
                edge_embed_V_27_reg_2686 <= edge_embedding_weights_V_0_6_q2;
                edge_embed_V_28_reg_2696 <= edge_embedding_weights_V_0_7_q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_2468_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                edge_embedding_weights_V_0_4_load_1_reg_2780 <= edge_embedding_weights_V_0_4_q0;
                edge_embedding_weights_V_0_4_load_reg_2775 <= edge_embedding_weights_V_0_4_q1;
                edge_embedding_weights_V_0_5_load_1_reg_2795 <= edge_embedding_weights_V_0_5_q0;
                edge_embedding_weights_V_0_5_load_reg_2790 <= edge_embedding_weights_V_0_5_q1;
                edge_embedding_weights_V_0_6_load_1_reg_2810 <= edge_embedding_weights_V_0_6_q0;
                edge_embedding_weights_V_0_6_load_reg_2805 <= edge_embedding_weights_V_0_6_q1;
                edge_embedding_weights_V_0_7_load_1_reg_2825 <= edge_embedding_weights_V_0_7_q0;
                edge_embedding_weights_V_0_7_load_reg_2820 <= edge_embedding_weights_V_0_7_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln43_fu_1161_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln79_reg_2468 <= icmp_ln79_fu_1252_p2;
                nd_idx_2_load_reg_2432 <= ap_sig_allocacmp_nd_idx_2_load;
                select_ln43_14_reg_2445 <= select_ln43_14_fu_1212_p3;
                select_ln43_reg_2438 <= select_ln43_fu_1196_p3;
                    zext_ln43_4_reg_2453(8 downto 0) <= zext_ln43_4_fu_1236_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_2428_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                message10_addr_reg_2717 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);
                message11_addr_reg_2723 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);
                message12_addr_reg_2729 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);
                message9_addr_reg_2711 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);
                    zext_ln712_70_reg_2706(3 downto 0) <= zext_ln712_70_fu_1720_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_2428_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                message6_addr_reg_2921 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);
                message7_addr_reg_2927 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);
                message8_addr_reg_2933 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);
                message_addr_reg_2915 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_2428_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                neighbor_tables_1_0_load_reg_2575 <= neighbor_tables_1_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_fu_1403_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln145_reg_2502 <= trunc_ln145_fu_1408_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_2468_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln712_122_reg_2671 <= trunc_ln712_122_fu_1680_p1;
                trunc_ln712_126_reg_2681 <= trunc_ln712_126_fu_1684_p1;
                trunc_ln712_130_reg_2691 <= trunc_ln712_130_fu_1688_p1;
                trunc_ln712_134_reg_2701 <= trunc_ln712_134_fu_1692_p1;
            end if;
        end if;
    end process;
    mul_ln712_cast_reg_2421(7) <= '0';
    zext_ln43_4_reg_2453(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    zext_ln43_4_reg_2453_pp0_iter2_reg(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    zext_ln50_reg_2526(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln712_71_reg_2538(9 downto 4) <= "000000";
    zext_ln712_71_reg_2538_pp0_iter4_reg(9 downto 4) <= "000000";
    zext_ln712_70_reg_2706(10 downto 4) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln43_10_fu_1450_p2 <= std_logic_vector(unsigned(idxprom34_165_mid2_v_v_reg_2483) + unsigned(ap_const_lv7_5));
    add_ln43_11_fu_1494_p2 <= std_logic_vector(unsigned(idxprom34_280_mid2_v_v_reg_2488) + unsigned(ap_const_lv7_B));
    add_ln43_12_fu_1166_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_208) + unsigned(ap_const_lv36_1));
    add_ln43_fu_1184_p2 <= std_logic_vector(unsigned(e_fu_204) + unsigned(ap_const_lv32_1));
    add_ln50_1_fu_1264_p2 <= std_logic_vector(unsigned(select_ln43_13_fu_1204_p3) + unsigned(ap_const_lv7_8));
    add_ln50_fu_1258_p2 <= std_logic_vector(unsigned(select_ln43_fu_1196_p3) + unsigned(ap_const_lv4_1));
    add_ln712_893_fu_2057_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_0_q0) + unsigned(ap_phi_reg_pp0_iter7_empty_266_reg_1109));
    add_ln712_895_fu_2191_p2 <= std_logic_vector(unsigned(message_q1) + unsigned(zext_ln712_fu_2187_p1));
    add_ln712_896_fu_2197_p2 <= std_logic_vector(unsigned(edge_embed_V_22_reg_2969) + unsigned(edge_embedding_weights_V_0_1_load_reg_2974));
    add_ln712_897_fu_2085_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_1_q0) + unsigned(ap_phi_reg_pp0_iter7_empty_265_reg_1099));
    add_ln712_899_fu_2235_p2 <= std_logic_vector(unsigned(message6_q1) + unsigned(zext_ln712_22_fu_2231_p1));
    add_ln712_900_fu_2241_p2 <= std_logic_vector(unsigned(edge_embed_V_23_reg_2999) + unsigned(edge_embedding_weights_V_0_2_load_reg_3004));
    add_ln712_901_fu_2113_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_2_q0) + unsigned(ap_phi_reg_pp0_iter7_empty_264_reg_1089));
    add_ln712_903_fu_2279_p2 <= std_logic_vector(unsigned(message7_q1) + unsigned(zext_ln712_23_fu_2275_p1));
    add_ln712_904_fu_2285_p2 <= std_logic_vector(unsigned(edge_embed_V_24_reg_3029) + unsigned(edge_embedding_weights_V_0_3_load_reg_3034));
    add_ln712_905_fu_2141_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_3_q0) + unsigned(ap_phi_reg_pp0_iter7_empty_263_reg_1079));
    add_ln712_907_fu_2323_p2 <= std_logic_vector(unsigned(message8_q1) + unsigned(zext_ln712_24_fu_2319_p1));
    add_ln712_908_fu_1818_p2 <= std_logic_vector(unsigned(edge_embed_V_25_reg_2666_pp0_iter5_reg) + unsigned(edge_embedding_weights_V_0_4_load_reg_2775));
    add_ln712_909_fu_1822_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_4_load_1_reg_2780) + unsigned(ap_phi_reg_pp0_iter6_empty_262_reg_1069));
    add_ln712_910_fu_1310_p2 <= std_logic_vector(unsigned(mul_ln712_cast_reg_2421) + unsigned(zext_ln712_64_fu_1306_p1));
    add_ln712_911_fu_1863_p2 <= std_logic_vector(unsigned(message9_q1) + unsigned(zext_ln712_25_fu_1859_p1));
    add_ln712_912_fu_1873_p2 <= std_logic_vector(unsigned(edge_embed_V_26_reg_2676_pp0_iter5_reg) + unsigned(edge_embedding_weights_V_0_5_load_reg_2790));
    add_ln712_913_fu_1877_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_5_load_1_reg_2795) + unsigned(ap_phi_reg_pp0_iter6_empty_261_reg_1059));
    add_ln712_914_fu_1459_p2 <= std_logic_vector(unsigned(mul_ln712_cast_reg_2421) + unsigned(zext_ln712_66_fu_1455_p1));
    add_ln712_915_fu_1918_p2 <= std_logic_vector(unsigned(message10_q1) + unsigned(zext_ln712_26_fu_1914_p1));
    add_ln712_916_fu_1928_p2 <= std_logic_vector(unsigned(edge_embed_V_27_reg_2686_pp0_iter5_reg) + unsigned(edge_embedding_weights_V_0_6_load_reg_2805));
    add_ln712_917_fu_1932_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_6_load_1_reg_2810) + unsigned(ap_phi_reg_pp0_iter6_empty_260_reg_1049));
    add_ln712_918_fu_1503_p2 <= std_logic_vector(unsigned(mul_ln712_cast_reg_2421) + unsigned(zext_ln712_68_fu_1499_p1));
    add_ln712_919_fu_1973_p2 <= std_logic_vector(unsigned(message11_q1) + unsigned(zext_ln712_27_fu_1969_p1));
    add_ln712_920_fu_1983_p2 <= std_logic_vector(unsigned(edge_embed_V_28_reg_2696_pp0_iter5_reg) + unsigned(edge_embedding_weights_V_0_7_load_reg_2820));
    add_ln712_921_fu_1987_p2 <= std_logic_vector(unsigned(edge_embedding_weights_V_0_7_load_1_reg_2825) + unsigned(ap_phi_reg_pp0_iter6_empty_reg_1039));
    add_ln712_923_fu_2028_p2 <= std_logic_vector(unsigned(message12_q1) + unsigned(zext_ln712_28_fu_2024_p1));
    add_ln712_926_fu_1552_p2 <= std_logic_vector(unsigned(sub_ln712_10_fu_1444_p2) + unsigned(zext_ln712_71_fu_1549_p1));
    add_ln712_927_fu_1566_p2 <= std_logic_vector(unsigned(sub_ln712_11_fu_1488_p2) + unsigned(zext_ln712_71_fu_1549_p1));
    add_ln712_928_fu_1572_p2 <= std_logic_vector(unsigned(sub_ln712_12_fu_1532_p2) + unsigned(zext_ln712_71_fu_1549_p1));
    add_ln712_930_fu_1723_p2 <= std_logic_vector(unsigned(sub_ln712_fu_1714_p2) + unsigned(zext_ln712_70_fu_1720_p1));
    add_ln712_fu_2153_p2 <= std_logic_vector(unsigned(edge_embed_V_reg_2939) + unsigned(edge_embedding_weights_V_0_0_load_reg_2944));
    add_ln89_70_fu_2063_p2 <= std_logic_vector(unsigned(trunc_ln712_107_fu_2049_p1) + unsigned(trunc_ln712_108_fu_2053_p1));
    add_ln89_71_fu_2166_p2 <= std_logic_vector(unsigned(add_ln89_70_reg_2964) + unsigned(add_ln89_fu_2162_p2));
    add_ln89_72_fu_2206_p2 <= std_logic_vector(unsigned(trunc_ln712_110_reg_2984) + unsigned(trunc_ln712_109_reg_2979));
    add_ln89_73_fu_2091_p2 <= std_logic_vector(unsigned(trunc_ln712_111_fu_2077_p1) + unsigned(trunc_ln712_112_fu_2081_p1));
    add_ln89_74_fu_2210_p2 <= std_logic_vector(unsigned(add_ln89_73_reg_2994) + unsigned(add_ln89_72_fu_2206_p2));
    add_ln89_75_fu_2250_p2 <= std_logic_vector(unsigned(trunc_ln712_114_reg_3014) + unsigned(trunc_ln712_113_reg_3009));
    add_ln89_76_fu_2119_p2 <= std_logic_vector(unsigned(trunc_ln712_115_fu_2105_p1) + unsigned(trunc_ln712_116_fu_2109_p1));
    add_ln89_77_fu_2254_p2 <= std_logic_vector(unsigned(add_ln89_76_reg_3024) + unsigned(add_ln89_75_fu_2250_p2));
    add_ln89_78_fu_2294_p2 <= std_logic_vector(unsigned(trunc_ln712_118_reg_3044) + unsigned(trunc_ln712_117_reg_3039));
    add_ln89_79_fu_2147_p2 <= std_logic_vector(unsigned(trunc_ln712_119_fu_2133_p1) + unsigned(trunc_ln712_120_fu_2137_p1));
    add_ln89_80_fu_2298_p2 <= std_logic_vector(unsigned(add_ln89_79_reg_3054) + unsigned(add_ln89_78_fu_2294_p2));
    add_ln89_81_fu_1833_p2 <= std_logic_vector(unsigned(trunc_ln712_122_reg_2671_pp0_iter5_reg) + unsigned(trunc_ln712_121_fu_1814_p1));
    add_ln89_82_fu_1745_p2 <= std_logic_vector(unsigned(trunc_ln712_123_fu_1737_p1) + unsigned(trunc_ln712_124_fu_1741_p1));
    add_ln89_83_fu_1838_p2 <= std_logic_vector(unsigned(add_ln89_82_reg_2785) + unsigned(add_ln89_81_fu_1833_p2));
    add_ln89_84_fu_1888_p2 <= std_logic_vector(unsigned(trunc_ln712_126_reg_2681_pp0_iter5_reg) + unsigned(trunc_ln712_125_fu_1869_p1));
    add_ln89_85_fu_1759_p2 <= std_logic_vector(unsigned(trunc_ln712_127_fu_1751_p1) + unsigned(trunc_ln712_128_fu_1755_p1));
    add_ln89_86_fu_1893_p2 <= std_logic_vector(unsigned(add_ln89_85_reg_2800) + unsigned(add_ln89_84_fu_1888_p2));
    add_ln89_87_fu_1943_p2 <= std_logic_vector(unsigned(trunc_ln712_130_reg_2691_pp0_iter5_reg) + unsigned(trunc_ln712_129_fu_1924_p1));
    add_ln89_88_fu_1773_p2 <= std_logic_vector(unsigned(trunc_ln712_131_fu_1765_p1) + unsigned(trunc_ln712_132_fu_1769_p1));
    add_ln89_89_fu_1948_p2 <= std_logic_vector(unsigned(add_ln89_88_reg_2815) + unsigned(add_ln89_87_fu_1943_p2));
    add_ln89_90_fu_1998_p2 <= std_logic_vector(unsigned(trunc_ln712_134_reg_2701_pp0_iter5_reg) + unsigned(trunc_ln712_133_fu_1979_p1));
    add_ln89_91_fu_1787_p2 <= std_logic_vector(unsigned(trunc_ln712_135_fu_1779_p1) + unsigned(trunc_ln712_136_fu_1783_p1));
    add_ln89_92_fu_2003_p2 <= std_logic_vector(unsigned(add_ln89_91_reg_2830) + unsigned(add_ln89_90_fu_1998_p2));
    add_ln89_fu_2162_p2 <= std_logic_vector(unsigned(trunc_ln712_106_reg_2954) + unsigned(trunc_ln712_105_reg_2949));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, io_acc_block_signal_op158, ap_predicate_op158_read_state4, io_acc_block_signal_op168, ap_predicate_op168_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((ap_predicate_op168_read_state4 = ap_const_boolean_1) and (io_acc_block_signal_op168 = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, io_acc_block_signal_op158, ap_predicate_op158_read_state4, io_acc_block_signal_op168, ap_predicate_op168_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((ap_predicate_op168_read_state4 = ap_const_boolean_1) and (io_acc_block_signal_op168 = ap_const_logic_0))));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(io_acc_block_signal_op158, ap_predicate_op158_read_state4, io_acc_block_signal_op168, ap_predicate_op168_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((ap_predicate_op168_read_state4 = ap_const_boolean_1) and (io_acc_block_signal_op168 = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln43_fu_1161_p2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln43_fu_1161_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_289_assign_proc : process(icmp_ln79_reg_2468_pp0_iter4_reg)
    begin
                ap_enable_operation_289 <= (icmp_ln79_reg_2468_pp0_iter4_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_295_assign_proc : process(icmp_ln79_reg_2468_pp0_iter4_reg)
    begin
                ap_enable_operation_295 <= (icmp_ln79_reg_2468_pp0_iter4_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_301_assign_proc : process(icmp_ln79_reg_2468_pp0_iter4_reg)
    begin
                ap_enable_operation_301 <= (icmp_ln79_reg_2468_pp0_iter4_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_307_assign_proc : process(icmp_ln79_reg_2468_pp0_iter4_reg)
    begin
                ap_enable_operation_307 <= (icmp_ln79_reg_2468_pp0_iter4_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_353_assign_proc : process(icmp_ln79_reg_2468_pp0_iter5_reg)
    begin
                ap_enable_operation_353 <= (icmp_ln79_reg_2468_pp0_iter5_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_364_assign_proc : process(icmp_ln79_reg_2468_pp0_iter5_reg)
    begin
                ap_enable_operation_364 <= (icmp_ln79_reg_2468_pp0_iter5_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_375_assign_proc : process(icmp_ln79_reg_2468_pp0_iter5_reg)
    begin
                ap_enable_operation_375 <= (icmp_ln79_reg_2468_pp0_iter5_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_386_assign_proc : process(icmp_ln79_reg_2468_pp0_iter5_reg)
    begin
                ap_enable_operation_386 <= (icmp_ln79_reg_2468_pp0_iter5_reg = ap_const_lv1_1);
    end process;

        ap_enable_operation_411 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_421 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_431 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_441 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_442_assign_proc : process(icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
                ap_enable_operation_442 <= (icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_443_assign_proc : process(icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
                ap_enable_operation_443 <= (icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_444_assign_proc : process(icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
                ap_enable_operation_444 <= (icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_445_assign_proc : process(icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
                ap_enable_operation_445 <= (icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1);
    end process;

        ap_enable_operation_454 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_463 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_472 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_481 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_483 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_484 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_485 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_486 <= (ap_const_boolean_1 = ap_const_boolean_1);
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state10_pp0_iter9_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9)
    begin
                ap_enable_state10_pp0_iter9_stage0 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state6_pp0_iter5_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5)
    begin
                ap_enable_state6_pp0_iter5_stage0 <= ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state7_pp0_iter6_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6)
    begin
                ap_enable_state7_pp0_iter6_stage0 <= ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state8_pp0_iter7_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7)
    begin
                ap_enable_state8_pp0_iter7_stage0 <= ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state9_pp0_iter8_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8)
    begin
                ap_enable_state9_pp0_iter8_stage0 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4_assign_proc : process(embeddings_per_node_0_0_0_0_0_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_018_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 <= embeddings_per_node_0_0_0_0_0_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 <= embeddings_per_node_0_0_0_0_018_dout;
            else 
                ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_0_0_phi_fu_1031_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4_assign_proc : process(embeddings_per_node_0_0_0_0_01_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_019_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 <= embeddings_per_node_0_0_0_0_01_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 <= embeddings_per_node_0_0_0_0_019_dout;
            else 
                ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_1_0_phi_fu_1020_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4_assign_proc : process(embeddings_per_node_0_0_0_0_02_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_0110_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 <= embeddings_per_node_0_0_0_0_02_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 <= embeddings_per_node_0_0_0_0_0110_dout;
            else 
                ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_2_0_phi_fu_1009_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4_assign_proc : process(embeddings_per_node_0_0_0_0_03_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_0111_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 <= embeddings_per_node_0_0_0_0_03_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 <= embeddings_per_node_0_0_0_0_0111_dout;
            else 
                ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_3_0_phi_fu_998_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4_assign_proc : process(embeddings_per_node_0_0_0_0_04_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_0112_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 <= embeddings_per_node_0_0_0_0_04_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 <= embeddings_per_node_0_0_0_0_0112_dout;
            else 
                ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_4_0_phi_fu_987_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4_assign_proc : process(embeddings_per_node_0_0_0_0_05_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_0113_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 <= embeddings_per_node_0_0_0_0_05_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 <= embeddings_per_node_0_0_0_0_0113_dout;
            else 
                ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_5_0_phi_fu_976_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4_assign_proc : process(embeddings_per_node_0_0_0_0_06_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_0114_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 <= embeddings_per_node_0_0_0_0_06_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 <= embeddings_per_node_0_0_0_0_0114_dout;
            else 
                ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_6_0_phi_fu_965_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4_assign_proc : process(embeddings_per_node_0_0_0_0_07_dout, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502, embeddings_per_node_0_0_0_0_0115_dout, ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0))) then
            if ((trunc_ln145_reg_2502 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 <= embeddings_per_node_0_0_0_0_07_dout;
            elsif ((trunc_ln145_reg_2502 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 <= embeddings_per_node_0_0_0_0_0115_dout;
            else 
                ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951;
            end if;
        else 
            ap_phi_mux_p_0_0_0_0_7_0_phi_fu_954_p4 <= ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_empty_260_reg_1049 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_261_reg_1059 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_262_reg_1069 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_263_reg_1079 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_264_reg_1089 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_265_reg_1099 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_266_reg_1109 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_reg_1039 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_0_0_reg_1028 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_1_0_reg_1017 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_2_0_reg_1006 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_3_0_reg_995 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_4_0_reg_984 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_5_0_reg_973 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_6_0_reg_962 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_0_0_7_0_reg_951 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op158_read_state4_assign_proc : process(icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502)
    begin
                ap_predicate_op158_read_state4 <= ((trunc_ln145_reg_2502 = ap_const_lv1_0) and (icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op168_read_state4_assign_proc : process(icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, trunc_ln145_reg_2502)
    begin
                ap_predicate_op168_read_state4 <= ((trunc_ln145_reg_2502 = ap_const_lv1_1) and (icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_e_end_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, e_end_reg_2493, e_end_2_fu_188)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_e_end_2_load <= e_end_reg_2493;
        else 
            ap_sig_allocacmp_e_end_2_load <= e_end_2_fu_188;
        end if; 
    end process;


    ap_sig_allocacmp_nd_idx_2_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, nd_idx_2_fu_184, nd_idx_fu_1381_p3)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_nd_idx_2_load <= nd_idx_fu_1381_p3;
        else 
            ap_sig_allocacmp_nd_idx_2_load <= nd_idx_2_fu_184;
        end if; 
    end process;

    degree_tables_1_0_address0 <= zext_ln57_fu_1241_p1(9 - 1 downto 0);

    degree_tables_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            degree_tables_1_0_ce0 <= ap_const_logic_1;
        else 
            degree_tables_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    e_end_5_fu_1368_p2 <= std_logic_vector(unsigned(node_degree_fu_1358_p4) + unsigned(select_ln43_14_reg_2445));
    e_end_fu_1388_p1 <= ap_sig_allocacmp_e_end_2_load;
    e_end_fu_1388_p3 <= 
        e_end_fu_1388_p1 when (icmp_ln55_fu_1343_p2(0) = '1') else 
        e_end_5_fu_1368_p2;
    e_start_fu_1396_p3 <= 
        e_start_2_fu_192 when (icmp_ln55_fu_1343_p2(0) = '1') else 
        select_ln43_14_reg_2445;
    edge_attrs_1_0_address0 <= zext_ln43_4_fu_1236_p1(9 - 1 downto 0);

    edge_attrs_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_attrs_1_0_ce0 <= ap_const_logic_1;
        else 
            edge_attrs_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_0_address0 <= zext_ln712_74_fu_1807_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_0_address1 <= zext_ln712_73_fu_1800_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_0_address2 <= zext_ln712_72_fu_1793_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_0_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_0_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_0_ce2_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_0_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_0_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_1_address0 <= zext_ln712_74_fu_1807_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_1_address1 <= zext_ln712_73_fu_1800_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_1_address2 <= zext_ln712_72_fu_1793_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_1_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_1_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_1_ce2_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_1_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_2_address0 <= zext_ln712_74_fu_1807_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_2_address1 <= zext_ln712_73_fu_1800_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_2_address2 <= zext_ln712_72_fu_1793_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_2_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_2_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_2_ce2_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_2_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_2_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_3_address0 <= zext_ln712_74_fu_1807_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_3_address1 <= zext_ln712_73_fu_1800_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_3_address2 <= zext_ln712_72_fu_1793_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_3_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_3_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_3_ce2_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_3_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_3_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_4_address0 <= zext_ln712_77_fu_1673_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_4_address1 <= zext_ln712_76_fu_1666_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_4_address2 <= zext_ln712_75_fu_1558_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_4_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_4_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_4_ce2_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_4_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_4_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_5_address0 <= zext_ln712_77_fu_1673_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_5_address1 <= zext_ln712_76_fu_1666_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_5_address2 <= zext_ln712_75_fu_1558_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_5_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_5_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_5_ce2_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_5_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_5_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_6_address0 <= zext_ln712_77_fu_1673_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_6_address1 <= zext_ln712_76_fu_1666_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_6_address2 <= zext_ln712_75_fu_1558_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_6_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_6_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_6_ce2_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_6_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_6_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    edge_embedding_weights_V_0_7_address0 <= zext_ln712_77_fu_1673_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_7_address1 <= zext_ln712_76_fu_1666_p1(10 - 1 downto 0);
    edge_embedding_weights_V_0_7_address2 <= zext_ln712_75_fu_1558_p1(10 - 1 downto 0);

    edge_embedding_weights_V_0_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_7_ce0 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_7_ce1 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_embedding_weights_V_0_7_ce2_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            edge_embedding_weights_V_0_7_ce2 <= ap_const_logic_1;
        else 
            edge_embedding_weights_V_0_7_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0110_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0110_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0110_blk_n <= embeddings_per_node_0_0_0_0_0110_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0110_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0110_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0110_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0110_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0111_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0111_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0111_blk_n <= embeddings_per_node_0_0_0_0_0111_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0111_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0111_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0111_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0111_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0112_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0112_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0112_blk_n <= embeddings_per_node_0_0_0_0_0112_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0112_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0112_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0112_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0112_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0113_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0113_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0113_blk_n <= embeddings_per_node_0_0_0_0_0113_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0113_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0113_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0113_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0113_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0114_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0114_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0114_blk_n <= embeddings_per_node_0_0_0_0_0114_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0114_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0114_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0114_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0114_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0115_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0115_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0115_blk_n <= embeddings_per_node_0_0_0_0_0115_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0115_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0115_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0115_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0115_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_018_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_018_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_018_blk_n <= embeddings_per_node_0_0_0_0_018_empty_n;
        else 
            embeddings_per_node_0_0_0_0_018_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_018_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_018_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_018_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_019_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_019_empty_n, ap_predicate_op168_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_019_blk_n <= embeddings_per_node_0_0_0_0_019_empty_n;
        else 
            embeddings_per_node_0_0_0_0_019_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_019_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op168_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op168_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_019_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_019_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_01_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_01_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_01_blk_n <= embeddings_per_node_0_0_0_0_01_empty_n;
        else 
            embeddings_per_node_0_0_0_0_01_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_01_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_01_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_01_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_02_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_02_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_02_blk_n <= embeddings_per_node_0_0_0_0_02_empty_n;
        else 
            embeddings_per_node_0_0_0_0_02_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_02_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_02_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_02_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_03_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_03_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_03_blk_n <= embeddings_per_node_0_0_0_0_03_empty_n;
        else 
            embeddings_per_node_0_0_0_0_03_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_03_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_03_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_03_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_04_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_04_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_04_blk_n <= embeddings_per_node_0_0_0_0_04_empty_n;
        else 
            embeddings_per_node_0_0_0_0_04_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_04_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_04_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_04_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_05_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_05_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_05_blk_n <= embeddings_per_node_0_0_0_0_05_empty_n;
        else 
            embeddings_per_node_0_0_0_0_05_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_05_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_05_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_05_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_06_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_06_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_06_blk_n <= embeddings_per_node_0_0_0_0_06_empty_n;
        else 
            embeddings_per_node_0_0_0_0_06_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_06_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_06_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_06_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_07_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_07_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_07_blk_n <= embeddings_per_node_0_0_0_0_07_empty_n;
        else 
            embeddings_per_node_0_0_0_0_07_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_07_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_07_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_07_read <= ap_const_logic_0;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, embeddings_per_node_0_0_0_0_0_empty_n, ap_predicate_op158_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0_blk_n <= embeddings_per_node_0_0_0_0_0_empty_n;
        else 
            embeddings_per_node_0_0_0_0_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    embeddings_per_node_0_0_0_0_0_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op158_read_state4 = ap_const_boolean_1))) then 
            embeddings_per_node_0_0_0_0_0_read <= ap_const_logic_1;
        else 
            embeddings_per_node_0_0_0_0_0_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2329_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2329_ce <= ap_const_logic_1;
        else 
            grp_fu_2329_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2329_p0 <= grp_fu_2329_p00(8 - 1 downto 0);
    grp_fu_2329_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_910_reg_2472),10));
    grp_fu_2329_p1 <= ap_const_lv10_D(4 - 1 downto 0);
    grp_fu_2329_p2 <= zext_ln712_71_reg_2538_pp0_iter4_reg(4 - 1 downto 0);

    grp_fu_2337_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2337_ce <= ap_const_logic_1;
        else 
            grp_fu_2337_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2337_p0 <= grp_fu_2337_p00(8 - 1 downto 0);
    grp_fu_2337_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_914_fu_1459_p2),10));
    grp_fu_2337_p1 <= ap_const_lv10_D(4 - 1 downto 0);
    grp_fu_2337_p2 <= zext_ln712_71_reg_2538_pp0_iter4_reg(4 - 1 downto 0);

    grp_fu_2345_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2345_ce <= ap_const_logic_1;
        else 
            grp_fu_2345_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2345_p0 <= grp_fu_2345_p00(8 - 1 downto 0);
    grp_fu_2345_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_918_fu_1503_p2),10));
    grp_fu_2345_p1 <= ap_const_lv10_D(4 - 1 downto 0);
    grp_fu_2345_p2 <= zext_ln712_71_reg_2538_pp0_iter4_reg(4 - 1 downto 0);

    grp_fu_2353_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2353_ce <= ap_const_logic_1;
        else 
            grp_fu_2353_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2353_p0 <= grp_fu_2353_p00(7 - 1 downto 0);
    grp_fu_2353_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(neighbor_tables_1_0_q0),11));
    grp_fu_2353_p1 <= ap_const_lv11_D(4 - 1 downto 0);
    grp_fu_2353_p2 <= zext_ln712_70_reg_2706(4 - 1 downto 0);
    icmp_ln43_fu_1161_p2 <= "1" when (indvar_flatten_fu_208 = bound) else "0";
    icmp_ln50_fu_1190_p2 <= "1" when (i_fu_200 = ap_const_lv4_D) else "0";
    icmp_ln55_fu_1343_p2 <= "1" when (signed(zext_ln43_fu_1299_p1) < signed(sext_ln55_fu_1339_p1)) else "0";
    icmp_ln65_fu_1403_p2 <= "1" when (select_ln43_14_reg_2445 = e_start_fu_1396_p3) else "0";
    icmp_ln79_fu_1252_p2 <= "1" when (unsigned(or_ln78_fu_1246_p2) < unsigned(ap_const_lv7_64)) else "0";
    io_acc_block_signal_op158 <= (embeddings_per_node_0_0_0_0_0_empty_n and embeddings_per_node_0_0_0_0_07_empty_n and embeddings_per_node_0_0_0_0_06_empty_n and embeddings_per_node_0_0_0_0_05_empty_n and embeddings_per_node_0_0_0_0_04_empty_n and embeddings_per_node_0_0_0_0_03_empty_n and embeddings_per_node_0_0_0_0_02_empty_n and embeddings_per_node_0_0_0_0_01_empty_n);
    io_acc_block_signal_op168 <= (embeddings_per_node_0_0_0_0_019_empty_n and embeddings_per_node_0_0_0_0_018_empty_n and embeddings_per_node_0_0_0_0_0115_empty_n and embeddings_per_node_0_0_0_0_0114_empty_n and embeddings_per_node_0_0_0_0_0113_empty_n and embeddings_per_node_0_0_0_0_0112_empty_n and embeddings_per_node_0_0_0_0_0111_empty_n and embeddings_per_node_0_0_0_0_0110_empty_n);
    message10_address0 <= message10_addr_reg_2717_pp0_iter6_reg;
    message10_address1 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);

    message10_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message10_ce0 <= ap_const_logic_1;
        else 
            message10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message10_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message10_ce1 <= ap_const_logic_1;
        else 
            message10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message10_d0 <= add_ln712_915_reg_2900;

    message10_we0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
        if (((icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message10_we0 <= ap_const_logic_1;
        else 
            message10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message11_address0 <= message11_addr_reg_2723_pp0_iter6_reg;
    message11_address1 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);

    message11_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message11_ce0 <= ap_const_logic_1;
        else 
            message11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message11_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message11_ce1 <= ap_const_logic_1;
        else 
            message11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message11_d0 <= add_ln712_919_reg_2905;

    message11_we0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
        if (((icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message11_we0 <= ap_const_logic_1;
        else 
            message11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message12_address0 <= message12_addr_reg_2729_pp0_iter6_reg;
    message12_address1 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);

    message12_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message12_ce0 <= ap_const_logic_1;
        else 
            message12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message12_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message12_ce1 <= ap_const_logic_1;
        else 
            message12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message12_d0 <= add_ln712_923_reg_2910;

    message12_we0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
        if (((icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message12_we0 <= ap_const_logic_1;
        else 
            message12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message6_address0 <= message6_addr_reg_2921_pp0_iter8_reg;
    message6_address1 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);

    message6_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message6_ce0 <= ap_const_logic_1;
        else 
            message6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message6_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message6_ce1 <= ap_const_logic_1;
        else 
            message6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message6_d0 <= add_ln712_899_reg_3064;

    message6_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message6_we0 <= ap_const_logic_1;
        else 
            message6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message7_address0 <= message7_addr_reg_2927_pp0_iter8_reg;
    message7_address1 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);

    message7_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message7_ce0 <= ap_const_logic_1;
        else 
            message7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message7_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message7_ce1 <= ap_const_logic_1;
        else 
            message7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message7_d0 <= add_ln712_903_reg_3069;

    message7_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message7_we0 <= ap_const_logic_1;
        else 
            message7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message8_address0 <= message8_addr_reg_2933_pp0_iter8_reg;
    message8_address1 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);

    message8_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message8_ce0 <= ap_const_logic_1;
        else 
            message8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message8_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message8_ce1 <= ap_const_logic_1;
        else 
            message8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message8_d0 <= add_ln712_907_reg_3074;

    message8_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message8_we0 <= ap_const_logic_1;
        else 
            message8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message9_address0 <= message9_addr_reg_2711_pp0_iter6_reg;
    message9_address1 <= zext_ln712_79_fu_1729_p1(11 - 1 downto 0);

    message9_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message9_ce0 <= ap_const_logic_1;
        else 
            message9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message9_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message9_ce1 <= ap_const_logic_1;
        else 
            message9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message9_d0 <= add_ln712_911_reg_2895;

    message9_we0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln79_reg_2468_pp0_iter6_reg)
    begin
        if (((icmp_ln79_reg_2468_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message9_we0 <= ap_const_logic_1;
        else 
            message9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    message_address0 <= message_addr_reg_2915_pp0_iter8_reg;
    message_address1 <= zext_ln712_78_fu_2034_p1(11 - 1 downto 0);

    message_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message_ce0 <= ap_const_logic_1;
        else 
            message_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message_ce1 <= ap_const_logic_1;
        else 
            message_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    message_d0 <= add_ln712_895_reg_3059;

    message_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            message_we0 <= ap_const_logic_1;
        else 
            message_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_0_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_0_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_0_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_0_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_0_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_0_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_1_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_1_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_1_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_1_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_1_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_2_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_2_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_2_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_2_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_2_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_3_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_3_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_3_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_3_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_3_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_4_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_4_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_4_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_4_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_4_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_4_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_5_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_5_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_5_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_5_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_5_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_5_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_6_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_6_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_6_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_6_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_6_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_6_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mp_ins_M_elems_V_7_address0 <= zext_ln50_fu_1538_p1(4 - 1 downto 0);
    mp_ins_M_elems_V_7_address1 <= zext_ln50_reg_2526(4 - 1 downto 0);

    mp_ins_M_elems_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_7_ce0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_7_ce1 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mp_ins_M_elems_V_7_we0_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln43_reg_2428_pp0_iter2_reg, icmp_ln65_reg_2498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln65_reg_2498 = ap_const_lv1_1) and (icmp_ln43_reg_2428_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mp_ins_M_elems_V_7_we0 <= ap_const_logic_1;
        else 
            mp_ins_M_elems_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln712_cast_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln712),8));
    nd_idx_5_fu_1349_p2 <= std_logic_vector(unsigned(nd_idx_2_load_reg_2432) + unsigned(ap_const_lv32_1));
    nd_idx_fu_1381_p3 <= 
        nd_idx_2_load_reg_2432 when (icmp_ln55_fu_1343_p2(0) = '1') else 
        nd_idx_5_fu_1349_p2;
    neighbor_tables_1_0_address0 <= zext_ln43_4_reg_2453_pp0_iter2_reg(9 - 1 downto 0);

    neighbor_tables_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            neighbor_tables_1_0_ce0 <= ap_const_logic_1;
        else 
            neighbor_tables_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    node_degree_fu_1358_p4 <= degree_tables_1_0_q0(63 downto 32);
    node_nd_5_fu_1354_p1 <= degree_tables_1_0_q0(32 - 1 downto 0);
    node_nd_fu_1373_p3 <= 
        node_nd_2_fu_180 when (icmp_ln55_fu_1343_p2(0) = '1') else 
        node_nd_5_fu_1354_p1;
    or_ln78_fu_1246_p2 <= (select_ln43_13_fu_1204_p3 or ap_const_lv7_4);
    p_Result_425_fu_2215_p3 <= total_embed_V_22_fu_2201_p2(15 downto 15);
    p_Result_426_fu_2259_p3 <= total_embed_V_23_fu_2245_p2(15 downto 15);
    p_Result_427_fu_2303_p3 <= total_embed_V_24_fu_2289_p2(15 downto 15);
    p_Result_428_fu_1843_p3 <= total_embed_V_25_fu_1827_p2(15 downto 15);
    p_Result_429_fu_1898_p3 <= total_embed_V_26_fu_1882_p2(15 downto 15);
    p_Result_430_fu_1953_p3 <= total_embed_V_27_fu_1937_p2(15 downto 15);
    p_Result_431_fu_2008_p3 <= total_embed_V_28_fu_1992_p2(15 downto 15);
    p_Result_s_fu_2171_p3 <= total_embed_V_fu_2157_p2(15 downto 15);
    p_shl1_cast_fu_1524_p3 <= (add_ln712_918_fu_1503_p2 & ap_const_lv2_0);
    p_shl2_cast_fu_1472_p3 <= (trunc_ln712_103_fu_1468_p1 & ap_const_lv4_0);
    p_shl3_cast_fu_1480_p3 <= (add_ln712_914_fu_1459_p2 & ap_const_lv2_0);
    p_shl4_cast_fu_1430_p3 <= (trunc_ln712_reg_2478 & ap_const_lv4_0);
    p_shl5_cast_fu_1437_p3 <= (add_ln712_910_reg_2472 & ap_const_lv2_0);
    p_shl_cast_fu_1516_p3 <= (trunc_ln712_104_fu_1512_p1 & ap_const_lv4_0);
    select_ln24_25_fu_2223_p3 <= 
        ap_const_lv15_0 when (p_Result_425_fu_2215_p3(0) = '1') else 
        add_ln89_74_fu_2210_p2;
    select_ln24_26_fu_2267_p3 <= 
        ap_const_lv15_0 when (p_Result_426_fu_2259_p3(0) = '1') else 
        add_ln89_77_fu_2254_p2;
    select_ln24_27_fu_2311_p3 <= 
        ap_const_lv15_0 when (p_Result_427_fu_2303_p3(0) = '1') else 
        add_ln89_80_fu_2298_p2;
    select_ln24_28_fu_1851_p3 <= 
        ap_const_lv15_0 when (p_Result_428_fu_1843_p3(0) = '1') else 
        add_ln89_83_fu_1838_p2;
    select_ln24_29_fu_1906_p3 <= 
        ap_const_lv15_0 when (p_Result_429_fu_1898_p3(0) = '1') else 
        add_ln89_86_fu_1893_p2;
    select_ln24_30_fu_1961_p3 <= 
        ap_const_lv15_0 when (p_Result_430_fu_1953_p3(0) = '1') else 
        add_ln89_89_fu_1948_p2;
    select_ln24_31_fu_2016_p3 <= 
        ap_const_lv15_0 when (p_Result_431_fu_2008_p3(0) = '1') else 
        add_ln89_92_fu_2003_p2;
    select_ln24_fu_2179_p3 <= 
        ap_const_lv15_0 when (p_Result_s_fu_2171_p3(0) = '1') else 
        add_ln89_71_fu_2166_p2;
    select_ln43_13_fu_1204_p3 <= 
        ap_const_lv7_0 when (icmp_ln50_fu_1190_p2(0) = '1') else 
        dim_fu_196;
    select_ln43_14_fu_1212_p3 <= 
        add_ln43_fu_1184_p2 when (icmp_ln50_fu_1190_p2(0) = '1') else 
        e_fu_204;
    select_ln43_16_fu_1228_p3 <= 
        trunc_ln43_fu_1220_p1 when (icmp_ln50_fu_1190_p2(0) = '1') else 
        trunc_ln43_7_fu_1224_p1;
    select_ln43_fu_1196_p3 <= 
        ap_const_lv4_0 when (icmp_ln50_fu_1190_p2(0) = '1') else 
        i_fu_200;
    sext_ln55_fu_1339_p0 <= ap_sig_allocacmp_e_end_2_load;
        sext_ln55_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln55_fu_1339_p0),33));

    sub_ln712_10_fu_1444_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1430_p3) - unsigned(p_shl5_cast_fu_1437_p3));
    sub_ln712_11_fu_1488_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_1472_p3) - unsigned(p_shl3_cast_fu_1480_p3));
    sub_ln712_12_fu_1532_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1516_p3) - unsigned(p_shl1_cast_fu_1524_p3));
    sub_ln712_fu_1714_p2 <= std_logic_vector(unsigned(tmp_fu_1696_p3) - unsigned(zext_ln712_63_fu_1710_p1));
    tmp_fu_1696_p3 <= (neighbor_tables_1_0_load_reg_2575 & ap_const_lv4_0);
    tmp_s_fu_1703_p3 <= (neighbor_tables_1_0_load_reg_2575 & ap_const_lv2_0);
    total_embed_V_22_fu_2201_p2 <= std_logic_vector(unsigned(add_ln712_897_reg_2989) + unsigned(add_ln712_896_fu_2197_p2));
    total_embed_V_23_fu_2245_p2 <= std_logic_vector(unsigned(add_ln712_901_reg_3019) + unsigned(add_ln712_900_fu_2241_p2));
    total_embed_V_24_fu_2289_p2 <= std_logic_vector(unsigned(add_ln712_905_reg_3049) + unsigned(add_ln712_904_fu_2285_p2));
    total_embed_V_25_fu_1827_p2 <= std_logic_vector(unsigned(add_ln712_909_fu_1822_p2) + unsigned(add_ln712_908_fu_1818_p2));
    total_embed_V_26_fu_1882_p2 <= std_logic_vector(unsigned(add_ln712_913_fu_1877_p2) + unsigned(add_ln712_912_fu_1873_p2));
    total_embed_V_27_fu_1937_p2 <= std_logic_vector(unsigned(add_ln712_917_fu_1932_p2) + unsigned(add_ln712_916_fu_1928_p2));
    total_embed_V_28_fu_1992_p2 <= std_logic_vector(unsigned(add_ln712_921_fu_1987_p2) + unsigned(add_ln712_920_fu_1983_p2));
    total_embed_V_fu_2157_p2 <= std_logic_vector(unsigned(add_ln712_893_reg_2959) + unsigned(add_ln712_fu_2153_p2));
    trunc_ln145_fu_1408_p1 <= node_nd_fu_1373_p3(1 - 1 downto 0);
    trunc_ln43_7_fu_1224_p1 <= e_fu_204(9 - 1 downto 0);
    trunc_ln43_8_fu_1302_p1 <= edge_attrs_1_0_q0(7 - 1 downto 0);
    trunc_ln43_fu_1220_p1 <= add_ln43_fu_1184_p2(9 - 1 downto 0);
    trunc_ln712_103_fu_1468_p1 <= add_ln712_914_fu_1459_p2(6 - 1 downto 0);
    trunc_ln712_104_fu_1512_p1 <= add_ln712_918_fu_1503_p2(6 - 1 downto 0);
    trunc_ln712_105_fu_2041_p1 <= ap_phi_reg_pp0_iter7_empty_266_reg_1109(15 - 1 downto 0);
    trunc_ln712_106_fu_2045_p1 <= edge_embedding_weights_V_0_0_q2(15 - 1 downto 0);
    trunc_ln712_107_fu_2049_p1 <= edge_embedding_weights_V_0_0_q1(15 - 1 downto 0);
    trunc_ln712_108_fu_2053_p1 <= edge_embedding_weights_V_0_0_q0(15 - 1 downto 0);
    trunc_ln712_109_fu_2069_p1 <= ap_phi_reg_pp0_iter7_empty_265_reg_1099(15 - 1 downto 0);
    trunc_ln712_110_fu_2073_p1 <= edge_embedding_weights_V_0_1_q2(15 - 1 downto 0);
    trunc_ln712_111_fu_2077_p1 <= edge_embedding_weights_V_0_1_q1(15 - 1 downto 0);
    trunc_ln712_112_fu_2081_p1 <= edge_embedding_weights_V_0_1_q0(15 - 1 downto 0);
    trunc_ln712_113_fu_2097_p1 <= ap_phi_reg_pp0_iter7_empty_264_reg_1089(15 - 1 downto 0);
    trunc_ln712_114_fu_2101_p1 <= edge_embedding_weights_V_0_2_q2(15 - 1 downto 0);
    trunc_ln712_115_fu_2105_p1 <= edge_embedding_weights_V_0_2_q1(15 - 1 downto 0);
    trunc_ln712_116_fu_2109_p1 <= edge_embedding_weights_V_0_2_q0(15 - 1 downto 0);
    trunc_ln712_117_fu_2125_p1 <= ap_phi_reg_pp0_iter7_empty_263_reg_1079(15 - 1 downto 0);
    trunc_ln712_118_fu_2129_p1 <= edge_embedding_weights_V_0_3_q2(15 - 1 downto 0);
    trunc_ln712_119_fu_2133_p1 <= edge_embedding_weights_V_0_3_q1(15 - 1 downto 0);
    trunc_ln712_120_fu_2137_p1 <= edge_embedding_weights_V_0_3_q0(15 - 1 downto 0);
    trunc_ln712_121_fu_1814_p1 <= ap_phi_reg_pp0_iter6_empty_262_reg_1069(15 - 1 downto 0);
    trunc_ln712_122_fu_1680_p1 <= edge_embedding_weights_V_0_4_q2(15 - 1 downto 0);
    trunc_ln712_123_fu_1737_p1 <= edge_embedding_weights_V_0_4_q1(15 - 1 downto 0);
    trunc_ln712_124_fu_1741_p1 <= edge_embedding_weights_V_0_4_q0(15 - 1 downto 0);
    trunc_ln712_125_fu_1869_p1 <= ap_phi_reg_pp0_iter6_empty_261_reg_1059(15 - 1 downto 0);
    trunc_ln712_126_fu_1684_p1 <= edge_embedding_weights_V_0_5_q2(15 - 1 downto 0);
    trunc_ln712_127_fu_1751_p1 <= edge_embedding_weights_V_0_5_q1(15 - 1 downto 0);
    trunc_ln712_128_fu_1755_p1 <= edge_embedding_weights_V_0_5_q0(15 - 1 downto 0);
    trunc_ln712_129_fu_1924_p1 <= ap_phi_reg_pp0_iter6_empty_260_reg_1049(15 - 1 downto 0);
    trunc_ln712_130_fu_1688_p1 <= edge_embedding_weights_V_0_6_q2(15 - 1 downto 0);
    trunc_ln712_131_fu_1765_p1 <= edge_embedding_weights_V_0_6_q1(15 - 1 downto 0);
    trunc_ln712_132_fu_1769_p1 <= edge_embedding_weights_V_0_6_q0(15 - 1 downto 0);
    trunc_ln712_133_fu_1979_p1 <= ap_phi_reg_pp0_iter6_empty_reg_1039(15 - 1 downto 0);
    trunc_ln712_134_fu_1692_p1 <= edge_embedding_weights_V_0_7_q2(15 - 1 downto 0);
    trunc_ln712_135_fu_1779_p1 <= edge_embedding_weights_V_0_7_q1(15 - 1 downto 0);
    trunc_ln712_136_fu_1783_p1 <= edge_embedding_weights_V_0_7_q0(15 - 1 downto 0);
    trunc_ln712_fu_1315_p1 <= add_ln712_910_fu_1310_p2(6 - 1 downto 0);
    zext_ln43_4_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_16_fu_1228_p3),64));
    zext_ln43_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_14_reg_2445),33));
    zext_ln50_fu_1538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_reg_2438_pp0_iter2_reg),64));
    zext_ln57_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_nd_idx_2_load),64));
    zext_ln712_22_fu_2231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_25_fu_2223_p3),16));
    zext_ln712_23_fu_2275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_26_fu_2267_p3),16));
    zext_ln712_24_fu_2319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_27_fu_2311_p3),16));
    zext_ln712_25_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_28_fu_1851_p3),16));
    zext_ln712_26_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_29_fu_1906_p3),16));
    zext_ln712_27_fu_1969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_30_fu_1961_p3),16));
    zext_ln712_28_fu_2024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_31_fu_2016_p3),16));
    zext_ln712_63_fu_1710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1703_p3),11));
    zext_ln712_64_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln43_8_fu_1302_p1),8));
    zext_ln712_66_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_10_fu_1450_p2),8));
    zext_ln712_68_fu_1499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_11_fu_1494_p2),8));
    zext_ln712_70_fu_1720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_reg_2438_pp0_iter4_reg),11));
    zext_ln712_71_fu_1549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_reg_2438_pp0_iter2_reg),10));
    zext_ln712_72_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2329_p3),64));
    zext_ln712_73_fu_1800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2337_p3),64));
    zext_ln712_74_fu_1807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2345_p3),64));
    zext_ln712_75_fu_1558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_926_fu_1552_p2),64));
    zext_ln712_76_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_927_reg_2550),64));
    zext_ln712_77_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_928_reg_2555),64));
    zext_ln712_78_fu_2034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2353_p3),64));
    zext_ln712_79_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_930_fu_1723_p2),64));
    zext_ln712_fu_2187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_fu_2179_p3),16));
end behav;
