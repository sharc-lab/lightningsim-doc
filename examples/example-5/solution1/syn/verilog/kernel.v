// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_kernel,hls_ip_2021_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.825000,HLS_SYN_LAT=65539,HLS_SYN_TPT=65539,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=430,HLS_SYN_LUT=287,HLS_VERSION=2021_1_1}" *)

module kernel (
        out_r,
        in_r,
        ap_clk,
        ap_rst,
        ap_start,
        out_r_ap_vld,
        ap_done,
        ap_ready,
        ap_idle
);


output  [31:0] out_r;
input  [31:0] in_r;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   out_r_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    producer_U0_ap_start;
wire    producer_U0_ap_done;
wire    producer_U0_ap_continue;
wire    producer_U0_ap_idle;
wire    producer_U0_ap_ready;
wire   [255:0] producer_U0_channel1_din;
wire    producer_U0_channel1_write;
wire    producer_U0_start_out;
wire    producer_U0_start_write;
wire    consumer_U0_ap_start;
wire    consumer_U0_ap_done;
wire    consumer_U0_ap_continue;
wire    consumer_U0_ap_idle;
wire    consumer_U0_ap_ready;
wire    consumer_U0_channel1_read;
wire   [31:0] consumer_U0_out_r;
wire    consumer_U0_out_r_ap_vld;
wire    channel_full_n;
wire   [255:0] channel_dout;
wire    channel_empty_n;
wire   [0:0] start_for_consumer_U0_din;
wire    start_for_consumer_U0_full_n;
wire   [0:0] start_for_consumer_U0_dout;
wire    start_for_consumer_U0_empty_n;

kernel_producer producer_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(producer_U0_ap_start),
    .start_full_n(start_for_consumer_U0_full_n),
    .ap_done(producer_U0_ap_done),
    .ap_continue(producer_U0_ap_continue),
    .ap_idle(producer_U0_ap_idle),
    .ap_ready(producer_U0_ap_ready),
    .channel1_din(producer_U0_channel1_din),
    .channel1_full_n(channel_full_n),
    .channel1_write(producer_U0_channel1_write),
    .start_out(producer_U0_start_out),
    .start_write(producer_U0_start_write),
    .in_r(in_r)
);

kernel_consumer consumer_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(consumer_U0_ap_start),
    .ap_done(consumer_U0_ap_done),
    .ap_continue(consumer_U0_ap_continue),
    .ap_idle(consumer_U0_ap_idle),
    .ap_ready(consumer_U0_ap_ready),
    .channel1_dout(channel_dout),
    .channel1_empty_n(channel_empty_n),
    .channel1_read(consumer_U0_channel1_read),
    .out_r(consumer_U0_out_r),
    .out_r_ap_vld(consumer_U0_out_r_ap_vld)
);

kernel_fifo_w256_d2_S channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(producer_U0_channel1_din),
    .if_full_n(channel_full_n),
    .if_write(producer_U0_channel1_write),
    .if_dout(channel_dout),
    .if_empty_n(channel_empty_n),
    .if_read(consumer_U0_channel1_read)
);

kernel_start_for_consumer_U0 start_for_consumer_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_consumer_U0_din),
    .if_full_n(start_for_consumer_U0_full_n),
    .if_write(producer_U0_start_write),
    .if_dout(start_for_consumer_U0_dout),
    .if_empty_n(start_for_consumer_U0_empty_n),
    .if_read(consumer_U0_ap_ready)
);

assign ap_done = consumer_U0_ap_done;

assign ap_idle = (producer_U0_ap_idle & consumer_U0_ap_idle);

assign ap_ready = producer_U0_ap_ready;

assign consumer_U0_ap_continue = 1'b1;

assign consumer_U0_ap_start = start_for_consumer_U0_empty_n;

assign out_r = consumer_U0_out_r;

assign out_r_ap_vld = consumer_U0_out_r_ap_vld;

assign producer_U0_ap_continue = 1'b1;

assign producer_U0_ap_start = ap_start;

assign start_for_consumer_U0_din = 1'b1;

endmodule //kernel
